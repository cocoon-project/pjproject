/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = ((PyTypeObject*) data->newargs)->tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes so that Python proxy
 * methods can be called from C++.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swig.
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/*
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR

namespace Swig {
  class Director;
  SWIGINTERN std::map<void *, Director *>& get_rtdir_map() {
    static std::map<void *, Director *> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void *, Director *>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void *>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void *>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {

  /* memory handler */
  struct GCItem {
    virtual ~GCItem() {}

    virtual int get_own() const {
      return 0;
    }
  };

  struct GCItem_var {
    GCItem_var(GCItem *item = 0) : _item(item) {
    }

    GCItem_var& operator=(GCItem *item) {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() {
      delete _item;
    }

    GCItem * operator->() const {
      return _item;
    }

  private:
    GCItem *_item;
  };

  struct GCItem_Object : GCItem {
    GCItem_Object(int own) : _own(own) {
    }

    virtual ~GCItem_Object() {
    }

    int get_own() const {
      return _own;
    }

  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem {
    GCItem_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCItem_T() {
      delete _ptr;
    }

  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem {
    GCArray_T(Type *ptr) : _ptr(ptr) {
    }

    virtual ~GCArray_T() {
      delete[] _ptr;
    }

  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException : public std::exception {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char *hdr ="", const char *msg ="") : swig_msg(hdr) {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      if (msg[0]) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, what());
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
    }

    virtual ~DirectorException() throw() {
    }

    /* Deprecated, use what() instead */
    const char *getMessage() const {
      return what();
    }

    const char *what() const throw() {
      return swig_msg.c_str();
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler {
#ifdef SWIG_DIRECTOR_UEH
    static void handler() {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.what() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }

      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;

      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will likely abort/terminate." << std::endl;
      throw;
    }

  public:

    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler) {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler() {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char *msg="")
      : DirectorException(error, "SWIG director type mismatch", msg) {
    }

    DirectorTypeMismatchException(const char *msg="")
      : DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg) {
    }

    static void raise(PyObject *error, const char *msg) {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg) {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public DirectorException {
  public:
    DirectorMethodException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public DirectorException {
  public:
    DirectorPureVirtualException(const char *msg = "")
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg) {
    }

    static void raise(const char *msg) {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard {
    PyThread_type_lock &mutex_;

  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex) {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }

    ~Guard() {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex)
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject *swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const {
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_DECREF(swig_self);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }

  public:
    /* wrap a python object, optionally taking ownership */
    Director(PyObject *self) : swig_self(self), swig_disown_flag(false) {
      swig_incref();
    }

    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref();
    }

    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const {
      return swig_self;
    }

    /* acquire ownership of the wrapped python object (the sense of "disown" is from python) */
    void swig_disown() const {
      if (!swig_disown_flag) {
        swig_disown_flag=true;
        swig_incref();
      }
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const {
      if (swig_disown_flag) {
        Py_INCREF(swig_self);
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char * /* swig_protected_method_name */) const {
      return true;
    }

    virtual void swig_set_inner(const char * /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void *, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }

    template <typename Type>
    void swig_acquire_ownership(Type *vptr) const {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }

    int swig_release_ownership(void *vptr) const {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject *swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args)) {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }
  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_allocator_type swig_types[0]
#define SWIGTYPE_p_char swig_types[1]
#define SWIGTYPE_p_const_reference swig_types[2]
#define SWIGTYPE_p_difference_type swig_types[3]
#define SWIGTYPE_p_int swig_types[4]
#define SWIGTYPE_p_p_PyObject swig_types[5]
#define SWIGTYPE_p_p_void swig_types[6]
#define SWIGTYPE_p_pj__Account swig_types[7]
#define SWIGTYPE_p_pj__AccountCallConfig swig_types[8]
#define SWIGTYPE_p_pj__AccountConfig swig_types[9]
#define SWIGTYPE_p_pj__AccountInfo swig_types[10]
#define SWIGTYPE_p_pj__AccountMediaConfig swig_types[11]
#define SWIGTYPE_p_pj__AccountMwiConfig swig_types[12]
#define SWIGTYPE_p_pj__AccountNatConfig swig_types[13]
#define SWIGTYPE_p_pj__AccountPresConfig swig_types[14]
#define SWIGTYPE_p_pj__AccountRegConfig swig_types[15]
#define SWIGTYPE_p_pj__AccountSipConfig swig_types[16]
#define SWIGTYPE_p_pj__AccountVideoConfig swig_types[17]
#define SWIGTYPE_p_pj__AudDevManager swig_types[18]
#define SWIGTYPE_p_pj__AudioDevInfo swig_types[19]
#define SWIGTYPE_p_pj__AudioMedia swig_types[20]
#define SWIGTYPE_p_pj__AudioMediaPlayer swig_types[21]
#define SWIGTYPE_p_pj__AudioMediaPlayerInfo swig_types[22]
#define SWIGTYPE_p_pj__AudioMediaRecorder swig_types[23]
#define SWIGTYPE_p_pj__AuthCredInfo swig_types[24]
#define SWIGTYPE_p_pj__Buddy swig_types[25]
#define SWIGTYPE_p_pj__BuddyConfig swig_types[26]
#define SWIGTYPE_p_pj__BuddyInfo swig_types[27]
#define SWIGTYPE_p_pj__Call swig_types[28]
#define SWIGTYPE_p_pj__CallInfo swig_types[29]
#define SWIGTYPE_p_pj__CallMediaInfo swig_types[30]
#define SWIGTYPE_p_pj__CallOpParam swig_types[31]
#define SWIGTYPE_p_pj__CallSendRequestParam swig_types[32]
#define SWIGTYPE_p_pj__CallSetting swig_types[33]
#define SWIGTYPE_p_pj__CallVidSetStreamParam swig_types[34]
#define SWIGTYPE_p_pj__CodecInfo swig_types[35]
#define SWIGTYPE_p_pj__ConfPortInfo swig_types[36]
#define SWIGTYPE_p_pj__ContainerNode swig_types[37]
#define SWIGTYPE_p_pj__Endpoint swig_types[38]
#define SWIGTYPE_p_pj__EpConfig swig_types[39]
#define SWIGTYPE_p_pj__Error swig_types[40]
#define SWIGTYPE_p_pj__FindBuddyMatch swig_types[41]
#define SWIGTYPE_p_pj__JbufState swig_types[42]
#define SWIGTYPE_p_pj__JsonDocument swig_types[43]
#define SWIGTYPE_p_pj__LogConfig swig_types[44]
#define SWIGTYPE_p_pj__LogEntry swig_types[45]
#define SWIGTYPE_p_pj__LogWriter swig_types[46]
#define SWIGTYPE_p_pj__MathStat swig_types[47]
#define SWIGTYPE_p_pj__Media swig_types[48]
#define SWIGTYPE_p_pj__MediaConfig swig_types[49]
#define SWIGTYPE_p_pj__MediaEvent swig_types[50]
#define SWIGTYPE_p_pj__MediaFmtChangedEvent swig_types[51]
#define SWIGTYPE_p_pj__MediaFormat swig_types[52]
#define SWIGTYPE_p_pj__MediaFormatAudio swig_types[53]
#define SWIGTYPE_p_pj__MediaFormatVideo swig_types[54]
#define SWIGTYPE_p_pj__MediaTransportInfo swig_types[55]
#define SWIGTYPE_p_pj__OnCallMediaEventParam swig_types[56]
#define SWIGTYPE_p_pj__OnCallMediaStateParam swig_types[57]
#define SWIGTYPE_p_pj__OnCallMediaTransportStateParam swig_types[58]
#define SWIGTYPE_p_pj__OnCallRedirectedParam swig_types[59]
#define SWIGTYPE_p_pj__OnCallReplaceRequestParam swig_types[60]
#define SWIGTYPE_p_pj__OnCallReplacedParam swig_types[61]
#define SWIGTYPE_p_pj__OnCallRxOfferParam swig_types[62]
#define SWIGTYPE_p_pj__OnCallSdpCreatedParam swig_types[63]
#define SWIGTYPE_p_pj__OnCallStateParam swig_types[64]
#define SWIGTYPE_p_pj__OnCallTransferRequestParam swig_types[65]
#define SWIGTYPE_p_pj__OnCallTransferStatusParam swig_types[66]
#define SWIGTYPE_p_pj__OnCallTsxStateParam swig_types[67]
#define SWIGTYPE_p_pj__OnCreateMediaTransportParam swig_types[68]
#define SWIGTYPE_p_pj__OnDtmfDigitParam swig_types[69]
#define SWIGTYPE_p_pj__OnIncomingCallParam swig_types[70]
#define SWIGTYPE_p_pj__OnIncomingSubscribeParam swig_types[71]
#define SWIGTYPE_p_pj__OnInstantMessageParam swig_types[72]
#define SWIGTYPE_p_pj__OnInstantMessageStatusParam swig_types[73]
#define SWIGTYPE_p_pj__OnMwiInfoParam swig_types[74]
#define SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam swig_types[75]
#define SWIGTYPE_p_pj__OnNatDetectionCompleteParam swig_types[76]
#define SWIGTYPE_p_pj__OnRegStartedParam swig_types[77]
#define SWIGTYPE_p_pj__OnRegStateParam swig_types[78]
#define SWIGTYPE_p_pj__OnSelectAccountParam swig_types[79]
#define SWIGTYPE_p_pj__OnStreamCreatedParam swig_types[80]
#define SWIGTYPE_p_pj__OnStreamDestroyedParam swig_types[81]
#define SWIGTYPE_p_pj__OnTimerParam swig_types[82]
#define SWIGTYPE_p_pj__OnTransportStateParam swig_types[83]
#define SWIGTYPE_p_pj__OnTypingIndicationParam swig_types[84]
#define SWIGTYPE_p_pj__PendingJob swig_types[85]
#define SWIGTYPE_p_pj__PersistentDocument swig_types[86]
#define SWIGTYPE_p_pj__PersistentObject swig_types[87]
#define SWIGTYPE_p_pj__PresNotifyParam swig_types[88]
#define SWIGTYPE_p_pj__PresenceStatus swig_types[89]
#define SWIGTYPE_p_pj__RtcpSdes swig_types[90]
#define SWIGTYPE_p_pj__RtcpStat swig_types[91]
#define SWIGTYPE_p_pj__RtcpStreamStat swig_types[92]
#define SWIGTYPE_p_pj__RxMsgEvent swig_types[93]
#define SWIGTYPE_p_pj__SdpSession swig_types[94]
#define SWIGTYPE_p_pj__SendInstantMessageParam swig_types[95]
#define SWIGTYPE_p_pj__SendTypingIndicationParam swig_types[96]
#define SWIGTYPE_p_pj__SipEvent swig_types[97]
#define SWIGTYPE_p_pj__SipHeader swig_types[98]
#define SWIGTYPE_p_pj__SipMediaType swig_types[99]
#define SWIGTYPE_p_pj__SipMultipartPart swig_types[100]
#define SWIGTYPE_p_pj__SipRxData swig_types[101]
#define SWIGTYPE_p_pj__SipTransaction swig_types[102]
#define SWIGTYPE_p_pj__SipTxData swig_types[103]
#define SWIGTYPE_p_pj__SipTxOption swig_types[104]
#define SWIGTYPE_p_pj__StreamInfo swig_types[105]
#define SWIGTYPE_p_pj__StreamStat swig_types[106]
#define SWIGTYPE_p_pj__TimeVal swig_types[107]
#define SWIGTYPE_p_pj__TimerEvent swig_types[108]
#define SWIGTYPE_p_pj__TlsConfig swig_types[109]
#define SWIGTYPE_p_pj__ToneDesc swig_types[110]
#define SWIGTYPE_p_pj__ToneDigit swig_types[111]
#define SWIGTYPE_p_pj__ToneDigitMapDigit swig_types[112]
#define SWIGTYPE_p_pj__ToneGenerator swig_types[113]
#define SWIGTYPE_p_pj__TransportConfig swig_types[114]
#define SWIGTYPE_p_pj__TransportInfo swig_types[115]
#define SWIGTYPE_p_pj__TsxStateEvent swig_types[116]
#define SWIGTYPE_p_pj__TxErrorEvent swig_types[117]
#define SWIGTYPE_p_pj__TxMsgEvent swig_types[118]
#define SWIGTYPE_p_pj__UaConfig swig_types[119]
#define SWIGTYPE_p_pj__UserEvent swig_types[120]
#define SWIGTYPE_p_pj__Version swig_types[121]
#define SWIGTYPE_p_pj_bool_t swig_types[122]
#define SWIGTYPE_p_pj_qos_flag swig_types[123]
#define SWIGTYPE_p_pj_qos_params swig_types[124]
#define SWIGTYPE_p_pj_qos_type swig_types[125]
#define SWIGTYPE_p_pj_qos_wmm_prio swig_types[126]
#define SWIGTYPE_p_pj_ssize_t swig_types[127]
#define SWIGTYPE_p_pj_ssl_cipher swig_types[128]
#define SWIGTYPE_p_pj_stun_nat_type swig_types[129]
#define SWIGTYPE_p_pj_turn_tp_type swig_types[130]
#define SWIGTYPE_p_pjmedia_aud_dev_cap swig_types[131]
#define SWIGTYPE_p_pjmedia_aud_dev_route swig_types[132]
#define SWIGTYPE_p_pjmedia_dir swig_types[133]
#define SWIGTYPE_p_pjmedia_event_type swig_types[134]
#define SWIGTYPE_p_pjmedia_format_id swig_types[135]
#define SWIGTYPE_p_pjmedia_srtp_use swig_types[136]
#define SWIGTYPE_p_pjmedia_tone_desc swig_types[137]
#define SWIGTYPE_p_pjmedia_tone_digit swig_types[138]
#define SWIGTYPE_p_pjmedia_tone_digit_map swig_types[139]
#define SWIGTYPE_p_pjmedia_tp_proto swig_types[140]
#define SWIGTYPE_p_pjmedia_type swig_types[141]
#define SWIGTYPE_p_pjmedia_vid_stream_rc_method swig_types[142]
#define SWIGTYPE_p_pjrpid_activity swig_types[143]
#define SWIGTYPE_p_pjsip_cred_data_type swig_types[144]
#define SWIGTYPE_p_pjsip_dialog_cap_status swig_types[145]
#define SWIGTYPE_p_pjsip_event_id_e swig_types[146]
#define SWIGTYPE_p_pjsip_evsub_state swig_types[147]
#define SWIGTYPE_p_pjsip_hdr_e swig_types[148]
#define SWIGTYPE_p_pjsip_inv_state swig_types[149]
#define SWIGTYPE_p_pjsip_redirect_op swig_types[150]
#define SWIGTYPE_p_pjsip_role_e swig_types[151]
#define SWIGTYPE_p_pjsip_ssl_method swig_types[152]
#define SWIGTYPE_p_pjsip_status_code swig_types[153]
#define SWIGTYPE_p_pjsip_transport_state swig_types[154]
#define SWIGTYPE_p_pjsip_transport_type_e swig_types[155]
#define SWIGTYPE_p_pjsip_tsx_state_e swig_types[156]
#define SWIGTYPE_p_pjsua_100rel_use swig_types[157]
#define SWIGTYPE_p_pjsua_buddy_status swig_types[158]
#define SWIGTYPE_p_pjsua_call_flag swig_types[159]
#define SWIGTYPE_p_pjsua_call_hold_type swig_types[160]
#define SWIGTYPE_p_pjsua_call_media_status swig_types[161]
#define SWIGTYPE_p_pjsua_call_vid_strm_op swig_types[162]
#define SWIGTYPE_p_pjsua_create_media_transport_flag swig_types[163]
#define SWIGTYPE_p_pjsua_destroy_flag swig_types[164]
#define SWIGTYPE_p_pjsua_ipv6_use swig_types[165]
#define SWIGTYPE_p_pjsua_med_tp_st swig_types[166]
#define SWIGTYPE_p_pjsua_sip_timer_use swig_types[167]
#define SWIGTYPE_p_pjsua_state swig_types[168]
#define SWIGTYPE_p_pjsua_stun_use swig_types[169]
#define SWIGTYPE_p_pjsua_vid_req_keyframe_method swig_types[170]
#define SWIGTYPE_p_reference swig_types[171]
#define SWIGTYPE_p_size_type swig_types[172]
#define SWIGTYPE_p_std__allocatorT_int_t swig_types[173]
#define SWIGTYPE_p_std__allocatorT_pj__AudioDevInfo_p_t swig_types[174]
#define SWIGTYPE_p_std__allocatorT_pj__AudioMedia_p_t swig_types[175]
#define SWIGTYPE_p_std__allocatorT_pj__AuthCredInfo_t swig_types[176]
#define SWIGTYPE_p_std__allocatorT_pj__Buddy_p_t swig_types[177]
#define SWIGTYPE_p_std__allocatorT_pj__CallMediaInfo_t swig_types[178]
#define SWIGTYPE_p_std__allocatorT_pj__CodecInfo_p_t swig_types[179]
#define SWIGTYPE_p_std__allocatorT_pj__MediaFormat_p_t swig_types[180]
#define SWIGTYPE_p_std__allocatorT_pj__SipHeader_t swig_types[181]
#define SWIGTYPE_p_std__allocatorT_pj__SipMultipartPart_t swig_types[182]
#define SWIGTYPE_p_std__allocatorT_pj__ToneDesc_t swig_types[183]
#define SWIGTYPE_p_std__allocatorT_pj__ToneDigitMapDigit_t swig_types[184]
#define SWIGTYPE_p_std__allocatorT_pj__ToneDigit_t swig_types[185]
#define SWIGTYPE_p_std__allocatorT_std__string_t swig_types[186]
#define SWIGTYPE_p_std__invalid_argument swig_types[187]
#define SWIGTYPE_p_std__string swig_types[188]
#define SWIGTYPE_p_std__vectorT__Tp__Alloc_t swig_types[189]
#define SWIGTYPE_p_std__vectorT__Tp_p__Alloc_t swig_types[190]
#define SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t swig_types[191]
#define SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t swig_types[192]
#define SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t swig_types[193]
#define SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t swig_types[194]
#define SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t swig_types[195]
#define SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t swig_types[196]
#define SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t swig_types[197]
#define SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t swig_types[198]
#define SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t swig_types[199]
#define SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t swig_types[200]
#define SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t swig_types[201]
#define SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t swig_types[202]
#define SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t swig_types[203]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t swig_types[204]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[205]
#define SWIGTYPE_p_unsigned_char swig_types[206]
#define SWIGTYPE_p_unsigned_int swig_types[207]
#define SWIGTYPE_p_unsigned_short swig_types[208]
#define SWIGTYPE_p_value_type swig_types[209]
#define SWIGTYPE_p_void swig_types[210]
static swig_type_info *swig_types[212];
static swig_module_info swig_module = {swig_types, 211, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif

/*-----------------------------------------------
              @(target):= _pjsua2.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__pjsua2

#else
#  define SWIG_init    init_pjsua2

#endif
#define SWIG_name    "_pjsua2"

#define SWIGVERSION 0x030002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include "pjsua2.hpp"
using namespace std;
using namespace pj;


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
#if PY_VERSION_HEX >= 0x03000000
      {
        long v = PyLong_AsLong(obj);
        if (!PyErr_Occurred()) {
          if (v < 0) {
            return SWIG_OverflowError;
          }
        } else {
          PyErr_Clear();
        }
      }
#endif
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    /* special case of single char conversion when we don't need space for NUL */
    if (size == 1 && csize == 2 && cptr && !cptr[1]) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
#if PY_VERSION_HEX >= 0x03010000
      return PyUnicode_DecodeUTF8(carray, static_cast< int >(size), "surrogateescape");
#else
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#endif
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}


SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_short  (short value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


#include <string>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <algorithm>


#include <vector>


namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>: public binary_function<swig::SwigPtr_PyObject, swig::SwigPtr_PyObject, bool>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>: public binary_function<swig::SwigVar_PyObject, swig::SwigVar_PyObject, bool>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if ( j < 0 ) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      if (ii > jj) {
        typename Sequence::const_reverse_iterator sb = self->rbegin();
        typename Sequence::const_reverse_iterator se = self->rbegin();
        std::advance(sb,size-ii-1);
        std::advance(se,size-jj-1);
        typename Sequence::const_reverse_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<-step && it!=se; ++c)
            it++;
        }
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj < ii)
        jj = ii;
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount; ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      if (jj > ii)
        jj = ii;
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount; ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj > ii) {
        typename Sequence::iterator sb = self->begin();
        std::advance(sb,ii);
        if (step == 1) {
          typename Sequence::iterator se = self->begin();
          std::advance(se,jj);
          self->erase(sb,se);
        } else {
          typename Sequence::iterator it = sb;
          size_t delcount = (jj - ii + step - 1) / step;
          while (delcount) {
            it = self->erase(it);
            for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
              it++;
            delcount--;
          }
        }
      }
    } else {
      if (ii > jj) {
        typename Sequence::reverse_iterator sb = self->rbegin();
        std::advance(sb,size-ii-1);
        typename Sequence::reverse_iterator it = sb;
        size_t delcount = (ii - jj - step - 1) / -step;
        while (delcount) {
          it = typename Sequence::reverse_iterator(self->erase((++it).base()));
          for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
            it++;
          delcount--;
        }
      }
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", _index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    int _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;
    typedef int size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      int s = size();
      for (int i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERN int
SWIG_AsVal_std_string (PyObject * obj, std::string *val)
{
  std::string* v = (std::string *) 0;
  int res = SWIG_AsPtr_std_string (obj, &v);
  if (!SWIG_IsOK(res)) return res;
  if (v) {
    if (val) *val = *v;
    if (SWIG_IsNewObj(res)) {
      delete v;
      res = SWIG_DelNewMask(res);
    }
    return res;
  }
  return SWIG_ERROR;
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


namespace swig {
  template <> struct traits<std::string > {
    typedef value_category category;
    static const char* type_name() { return"std::string"; }
  };  
  template <>  struct traits_asval<std::string > {   
    typedef std::string value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_std_string (obj, val);
    }
  };
  template <>  struct traits_from<std::string > {
    typedef std::string value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_std_string  (val);
    }
  };
}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	if (::SWIG_ConvertPtr(obj,(void**)&p,
			      swig::type_info<sequence>(),0) == SWIG_OK) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_NewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((int)size);
	int i = 0;
	for (const_iterator it = seq.begin();
	     it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<std::string, std::allocator< std::string > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::string" "," "std::allocator< std::string >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_std_string_Sg__iterator(std::vector< std::string > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_std_string_Sg____nonzero__(std::vector< std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_std_string_Sg____bool__(std::vector< std::string > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< std::string >::size_type std_vector_Sl_std_string_Sg____len__(std::vector< std::string > const *self){
      return self->size();
    }

SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}

SWIGINTERN std::vector< std::string >::value_type std_vector_Sl_std_string_Sg__pop(std::vector< std::string > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<std::string,std::allocator< std::string > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< std::string,std::allocator< std::string > > *std_vector_Sl_std_string_Sg____getslice__(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setslice____SWIG_0(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j,std::vector< std::string,std::allocator< std::string > > const &v=std::vector< std::string,std::allocator< std::string > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delslice__(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delitem____SWIG_0(std::vector< std::string > *self,std::vector< std::string >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< std::string,std::allocator< std::string > > *std_vector_Sl_std_string_Sg____getitem____SWIG_0(std::vector< std::string > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector<std::string,std::allocator< std::string > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setitem____SWIG_0(std::vector< std::string > *self,PySliceObject *slice,std::vector< std::string,std::allocator< std::string > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector<std::string,std::allocator< std::string > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setitem____SWIG_1(std::vector< std::string > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector<std::string,std::allocator< std::string > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____delitem____SWIG_1(std::vector< std::string > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<std::string,std::allocator< std::string > >::difference_type id = i;
      std::vector<std::string,std::allocator< std::string > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< std::string >::value_type const &std_vector_Sl_std_string_Sg____getitem____SWIG_1(std::vector< std::string > const *self,std::vector< std::string >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_std_string_Sg____setitem____SWIG_2(std::vector< std::string > *self,std::vector< std::string >::difference_type i,std::vector< std::string >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_std_string_Sg__append(std::vector< std::string > *self,std::vector< std::string >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< std::string >::iterator std_vector_Sl_std_string_Sg__erase__SWIG_0(std::vector< std::string > *self,std::vector< std::string >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< std::string >::iterator std_vector_Sl_std_string_Sg__erase__SWIG_1(std::vector< std::string > *self,std::vector< std::string >::iterator first,std::vector< std::string >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< std::string >::iterator std_vector_Sl_std_string_Sg__insert__SWIG_0(std::vector< std::string > *self,std::vector< std::string >::iterator pos,std::vector< std::string >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_std_string_Sg__insert__SWIG_1(std::vector< std::string > *self,std::vector< std::string >::iterator pos,std::vector< std::string >::size_type n,std::vector< std::string >::value_type const &x){ self->insert(pos, n, x); }

namespace swig {
  template <> struct traits<int > {
    typedef value_category category;
    static const char* type_name() { return"int"; }
  };  
  template <>  struct traits_asval<int > {   
    typedef int value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_int (obj, val);
    }
  };
  template <>  struct traits_from<int > {
    typedef int value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_int  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<int, std::allocator< int > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "int" "," "std::allocator< int >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_int_Sg__iterator(std::vector< int > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_int_Sg____nonzero__(std::vector< int > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_int_Sg____bool__(std::vector< int > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< int >::size_type std_vector_Sl_int_Sg____len__(std::vector< int > const *self){
      return self->size();
    }
SWIGINTERN std::vector< int >::value_type std_vector_Sl_int_Sg__pop(std::vector< int > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<int,std::allocator< int > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< int,std::allocator< int > > *std_vector_Sl_int_Sg____getslice__(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setslice____SWIG_0(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j,std::vector< int,std::allocator< int > > const &v=std::vector< int,std::allocator< int > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delslice__(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delitem____SWIG_0(std::vector< int > *self,std::vector< int >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< int,std::allocator< int > > *std_vector_Sl_int_Sg____getitem____SWIG_0(std::vector< int > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<int,std::allocator< int > >::difference_type id = i;
      std::vector<int,std::allocator< int > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem____SWIG_0(std::vector< int > *self,PySliceObject *slice,std::vector< int,std::allocator< int > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<int,std::allocator< int > >::difference_type id = i;
      std::vector<int,std::allocator< int > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem____SWIG_1(std::vector< int > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<int,std::allocator< int > >::difference_type id = i;
      std::vector<int,std::allocator< int > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_int_Sg____delitem____SWIG_1(std::vector< int > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<int,std::allocator< int > >::difference_type id = i;
      std::vector<int,std::allocator< int > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< int >::value_type const &std_vector_Sl_int_Sg____getitem____SWIG_1(std::vector< int > const *self,std::vector< int >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_int_Sg____setitem____SWIG_2(std::vector< int > *self,std::vector< int >::difference_type i,std::vector< int >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_int_Sg__append(std::vector< int > *self,std::vector< int >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< int >::iterator std_vector_Sl_int_Sg__erase__SWIG_0(std::vector< int > *self,std::vector< int >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< int >::iterator std_vector_Sl_int_Sg__erase__SWIG_1(std::vector< int > *self,std::vector< int >::iterator first,std::vector< int >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< int >::iterator std_vector_Sl_int_Sg__insert__SWIG_0(std::vector< int > *self,std::vector< int >::iterator pos,std::vector< int >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_int_Sg__insert__SWIG_1(std::vector< int > *self,std::vector< int >::iterator pos,std::vector< int >::size_type n,std::vector< int >::value_type const &x){ self->insert(pos, n, x); }

SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


  namespace swig {
    template <>  struct traits<pj::SipHeader > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::SipHeader"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::SipHeader, std::allocator< pj::SipHeader > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::SipHeader" "," "std::allocator< pj::SipHeader >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_SipHeader_Sg__iterator(std::vector< pj::SipHeader > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_SipHeader_Sg____nonzero__(std::vector< pj::SipHeader > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_SipHeader_Sg____bool__(std::vector< pj::SipHeader > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::SipHeader >::size_type std_vector_Sl_pj_SipHeader_Sg____len__(std::vector< pj::SipHeader > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::SipHeader >::value_type std_vector_Sl_pj_SipHeader_Sg__pop(std::vector< pj::SipHeader > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *std_vector_Sl_pj_SipHeader_Sg____getslice__(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::difference_type i,std::vector< pj::SipHeader >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____setslice____SWIG_0(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::difference_type i,std::vector< pj::SipHeader >::difference_type j,std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &v=std::vector< pj::SipHeader,std::allocator< pj::SipHeader > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____delslice__(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::difference_type i,std::vector< pj::SipHeader >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____delitem____SWIG_0(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *std_vector_Sl_pj_SipHeader_Sg____getitem____SWIG_0(std::vector< pj::SipHeader > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type id = i;
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____setitem____SWIG_0(std::vector< pj::SipHeader > *self,PySliceObject *slice,std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type id = i;
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____setitem____SWIG_1(std::vector< pj::SipHeader > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type id = i;
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____delitem____SWIG_1(std::vector< pj::SipHeader > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type id = i;
      std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::SipHeader >::value_type const &std_vector_Sl_pj_SipHeader_Sg____getitem____SWIG_1(std::vector< pj::SipHeader > const *self,std::vector< pj::SipHeader >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg____setitem____SWIG_2(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::difference_type i,std::vector< pj::SipHeader >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg__append(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::SipHeader >::iterator std_vector_Sl_pj_SipHeader_Sg__erase__SWIG_0(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::SipHeader >::iterator std_vector_Sl_pj_SipHeader_Sg__erase__SWIG_1(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::iterator first,std::vector< pj::SipHeader >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::SipHeader >::iterator std_vector_Sl_pj_SipHeader_Sg__insert__SWIG_0(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::iterator pos,std::vector< pj::SipHeader >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_SipHeader_Sg__insert__SWIG_1(std::vector< pj::SipHeader > *self,std::vector< pj::SipHeader >::iterator pos,std::vector< pj::SipHeader >::size_type n,std::vector< pj::SipHeader >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::AuthCredInfo > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::AuthCredInfo"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::AuthCredInfo, std::allocator< pj::AuthCredInfo > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::AuthCredInfo" "," "std::allocator< pj::AuthCredInfo >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_AuthCredInfo_Sg__iterator(std::vector< pj::AuthCredInfo > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_AuthCredInfo_Sg____nonzero__(std::vector< pj::AuthCredInfo > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_AuthCredInfo_Sg____bool__(std::vector< pj::AuthCredInfo > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::AuthCredInfo >::size_type std_vector_Sl_pj_AuthCredInfo_Sg____len__(std::vector< pj::AuthCredInfo > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::AuthCredInfo >::value_type std_vector_Sl_pj_AuthCredInfo_Sg__pop(std::vector< pj::AuthCredInfo > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *std_vector_Sl_pj_AuthCredInfo_Sg____getslice__(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::difference_type i,std::vector< pj::AuthCredInfo >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____setslice____SWIG_0(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::difference_type i,std::vector< pj::AuthCredInfo >::difference_type j,std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &v=std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____delslice__(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::difference_type i,std::vector< pj::AuthCredInfo >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____delitem____SWIG_0(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *std_vector_Sl_pj_AuthCredInfo_Sg____getitem____SWIG_0(std::vector< pj::AuthCredInfo > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type id = i;
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____setitem____SWIG_0(std::vector< pj::AuthCredInfo > *self,PySliceObject *slice,std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type id = i;
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____setitem____SWIG_1(std::vector< pj::AuthCredInfo > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type id = i;
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____delitem____SWIG_1(std::vector< pj::AuthCredInfo > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type id = i;
      std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::AuthCredInfo >::value_type const &std_vector_Sl_pj_AuthCredInfo_Sg____getitem____SWIG_1(std::vector< pj::AuthCredInfo > const *self,std::vector< pj::AuthCredInfo >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg____setitem____SWIG_2(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::difference_type i,std::vector< pj::AuthCredInfo >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg__append(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::AuthCredInfo >::iterator std_vector_Sl_pj_AuthCredInfo_Sg__erase__SWIG_0(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::AuthCredInfo >::iterator std_vector_Sl_pj_AuthCredInfo_Sg__erase__SWIG_1(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::iterator first,std::vector< pj::AuthCredInfo >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::AuthCredInfo >::iterator std_vector_Sl_pj_AuthCredInfo_Sg__insert__SWIG_0(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::iterator pos,std::vector< pj::AuthCredInfo >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_AuthCredInfo_Sg__insert__SWIG_1(std::vector< pj::AuthCredInfo > *self,std::vector< pj::AuthCredInfo >::iterator pos,std::vector< pj::AuthCredInfo >::size_type n,std::vector< pj::AuthCredInfo >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::SipMultipartPart > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::SipMultipartPart"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::SipMultipartPart, std::allocator< pj::SipMultipartPart > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::SipMultipartPart" "," "std::allocator< pj::SipMultipartPart >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_SipMultipartPart_Sg__iterator(std::vector< pj::SipMultipartPart > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_SipMultipartPart_Sg____nonzero__(std::vector< pj::SipMultipartPart > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_SipMultipartPart_Sg____bool__(std::vector< pj::SipMultipartPart > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::SipMultipartPart >::size_type std_vector_Sl_pj_SipMultipartPart_Sg____len__(std::vector< pj::SipMultipartPart > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::SipMultipartPart >::value_type std_vector_Sl_pj_SipMultipartPart_Sg__pop(std::vector< pj::SipMultipartPart > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *std_vector_Sl_pj_SipMultipartPart_Sg____getslice__(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::difference_type i,std::vector< pj::SipMultipartPart >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____setslice____SWIG_0(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::difference_type i,std::vector< pj::SipMultipartPart >::difference_type j,std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &v=std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____delslice__(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::difference_type i,std::vector< pj::SipMultipartPart >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____delitem____SWIG_0(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *std_vector_Sl_pj_SipMultipartPart_Sg____getitem____SWIG_0(std::vector< pj::SipMultipartPart > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type id = i;
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____setitem____SWIG_0(std::vector< pj::SipMultipartPart > *self,PySliceObject *slice,std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type id = i;
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____setitem____SWIG_1(std::vector< pj::SipMultipartPart > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type id = i;
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____delitem____SWIG_1(std::vector< pj::SipMultipartPart > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type id = i;
      std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::SipMultipartPart >::value_type const &std_vector_Sl_pj_SipMultipartPart_Sg____getitem____SWIG_1(std::vector< pj::SipMultipartPart > const *self,std::vector< pj::SipMultipartPart >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg____setitem____SWIG_2(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::difference_type i,std::vector< pj::SipMultipartPart >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg__append(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::SipMultipartPart >::iterator std_vector_Sl_pj_SipMultipartPart_Sg__erase__SWIG_0(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::SipMultipartPart >::iterator std_vector_Sl_pj_SipMultipartPart_Sg__erase__SWIG_1(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::iterator first,std::vector< pj::SipMultipartPart >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::SipMultipartPart >::iterator std_vector_Sl_pj_SipMultipartPart_Sg__insert__SWIG_0(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::iterator pos,std::vector< pj::SipMultipartPart >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_SipMultipartPart_Sg__insert__SWIG_1(std::vector< pj::SipMultipartPart > *self,std::vector< pj::SipMultipartPart >::iterator pos,std::vector< pj::SipMultipartPart >::size_type n,std::vector< pj::SipMultipartPart >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::Buddy > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::Buddy"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::Buddy*, std::allocator< pj::Buddy * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::Buddy" " *," "std::allocator< pj::Buddy * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_Buddy_Sm__Sg__iterator(std::vector< pj::Buddy * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_Buddy_Sm__Sg____nonzero__(std::vector< pj::Buddy * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_Buddy_Sm__Sg____bool__(std::vector< pj::Buddy * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::Buddy * >::size_type std_vector_Sl_pj_Buddy_Sm__Sg____len__(std::vector< pj::Buddy * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::Buddy * >::value_type std_vector_Sl_pj_Buddy_Sm__Sg__pop(std::vector< pj::Buddy * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *std_vector_Sl_pj_Buddy_Sm__Sg____getslice__(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::difference_type i,std::vector< pj::Buddy * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____setslice____SWIG_0(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::difference_type i,std::vector< pj::Buddy * >::difference_type j,std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &v=std::vector< pj::Buddy *,std::allocator< pj::Buddy * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____delslice__(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::difference_type i,std::vector< pj::Buddy * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____delitem____SWIG_0(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *std_vector_Sl_pj_Buddy_Sm__Sg____getitem____SWIG_0(std::vector< pj::Buddy * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type id = i;
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____setitem____SWIG_0(std::vector< pj::Buddy * > *self,PySliceObject *slice,std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type id = i;
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____setitem____SWIG_1(std::vector< pj::Buddy * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type id = i;
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____delitem____SWIG_1(std::vector< pj::Buddy * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type id = i;
      std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::Buddy * >::value_type std_vector_Sl_pj_Buddy_Sm__Sg____getitem____SWIG_1(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg____setitem____SWIG_2(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::difference_type i,std::vector< pj::Buddy * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg__append(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::value_type x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::Buddy * >::iterator std_vector_Sl_pj_Buddy_Sm__Sg__erase__SWIG_0(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::Buddy * >::iterator std_vector_Sl_pj_Buddy_Sm__Sg__erase__SWIG_1(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::iterator first,std::vector< pj::Buddy * >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::Buddy * >::iterator std_vector_Sl_pj_Buddy_Sm__Sg__insert__SWIG_0(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::iterator pos,std::vector< pj::Buddy * >::value_type x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_Buddy_Sm__Sg__insert__SWIG_1(std::vector< pj::Buddy * > *self,std::vector< pj::Buddy * >::iterator pos,std::vector< pj::Buddy * >::size_type n,std::vector< pj::Buddy * >::value_type x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::AudioMedia > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::AudioMedia"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::AudioMedia*, std::allocator< pj::AudioMedia * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::AudioMedia" " *," "std::allocator< pj::AudioMedia * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_AudioMedia_Sm__Sg__iterator(std::vector< pj::AudioMedia * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_AudioMedia_Sm__Sg____nonzero__(std::vector< pj::AudioMedia * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_AudioMedia_Sm__Sg____bool__(std::vector< pj::AudioMedia * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::AudioMedia * >::size_type std_vector_Sl_pj_AudioMedia_Sm__Sg____len__(std::vector< pj::AudioMedia * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::AudioMedia * >::value_type std_vector_Sl_pj_AudioMedia_Sm__Sg__pop(std::vector< pj::AudioMedia * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *std_vector_Sl_pj_AudioMedia_Sm__Sg____getslice__(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::difference_type i,std::vector< pj::AudioMedia * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____setslice____SWIG_0(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::difference_type i,std::vector< pj::AudioMedia * >::difference_type j,std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &v=std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____delslice__(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::difference_type i,std::vector< pj::AudioMedia * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____delitem____SWIG_0(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *std_vector_Sl_pj_AudioMedia_Sm__Sg____getitem____SWIG_0(std::vector< pj::AudioMedia * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type id = i;
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____setitem____SWIG_0(std::vector< pj::AudioMedia * > *self,PySliceObject *slice,std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type id = i;
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____setitem____SWIG_1(std::vector< pj::AudioMedia * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type id = i;
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____delitem____SWIG_1(std::vector< pj::AudioMedia * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type id = i;
      std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::AudioMedia * >::value_type std_vector_Sl_pj_AudioMedia_Sm__Sg____getitem____SWIG_1(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg____setitem____SWIG_2(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::difference_type i,std::vector< pj::AudioMedia * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg__append(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::value_type x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::AudioMedia * >::iterator std_vector_Sl_pj_AudioMedia_Sm__Sg__erase__SWIG_0(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::AudioMedia * >::iterator std_vector_Sl_pj_AudioMedia_Sm__Sg__erase__SWIG_1(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::iterator first,std::vector< pj::AudioMedia * >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::AudioMedia * >::iterator std_vector_Sl_pj_AudioMedia_Sm__Sg__insert__SWIG_0(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::iterator pos,std::vector< pj::AudioMedia * >::value_type x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_AudioMedia_Sm__Sg__insert__SWIG_1(std::vector< pj::AudioMedia * > *self,std::vector< pj::AudioMedia * >::iterator pos,std::vector< pj::AudioMedia * >::size_type n,std::vector< pj::AudioMedia * >::value_type x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::ToneDesc > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::ToneDesc"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::ToneDesc, std::allocator< pj::ToneDesc > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::ToneDesc" "," "std::allocator< pj::ToneDesc >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_ToneDesc_Sg__iterator(std::vector< pj::ToneDesc > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_ToneDesc_Sg____nonzero__(std::vector< pj::ToneDesc > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_ToneDesc_Sg____bool__(std::vector< pj::ToneDesc > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::ToneDesc >::size_type std_vector_Sl_pj_ToneDesc_Sg____len__(std::vector< pj::ToneDesc > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::ToneDesc >::value_type std_vector_Sl_pj_ToneDesc_Sg__pop(std::vector< pj::ToneDesc > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *std_vector_Sl_pj_ToneDesc_Sg____getslice__(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::difference_type i,std::vector< pj::ToneDesc >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____setslice____SWIG_0(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::difference_type i,std::vector< pj::ToneDesc >::difference_type j,std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &v=std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____delslice__(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::difference_type i,std::vector< pj::ToneDesc >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____delitem____SWIG_0(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *std_vector_Sl_pj_ToneDesc_Sg____getitem____SWIG_0(std::vector< pj::ToneDesc > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type id = i;
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____setitem____SWIG_0(std::vector< pj::ToneDesc > *self,PySliceObject *slice,std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type id = i;
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____setitem____SWIG_1(std::vector< pj::ToneDesc > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type id = i;
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____delitem____SWIG_1(std::vector< pj::ToneDesc > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type id = i;
      std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::ToneDesc >::value_type const &std_vector_Sl_pj_ToneDesc_Sg____getitem____SWIG_1(std::vector< pj::ToneDesc > const *self,std::vector< pj::ToneDesc >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg____setitem____SWIG_2(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::difference_type i,std::vector< pj::ToneDesc >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg__append(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::ToneDesc >::iterator std_vector_Sl_pj_ToneDesc_Sg__erase__SWIG_0(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::ToneDesc >::iterator std_vector_Sl_pj_ToneDesc_Sg__erase__SWIG_1(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::iterator first,std::vector< pj::ToneDesc >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::ToneDesc >::iterator std_vector_Sl_pj_ToneDesc_Sg__insert__SWIG_0(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::iterator pos,std::vector< pj::ToneDesc >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_ToneDesc_Sg__insert__SWIG_1(std::vector< pj::ToneDesc > *self,std::vector< pj::ToneDesc >::iterator pos,std::vector< pj::ToneDesc >::size_type n,std::vector< pj::ToneDesc >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::ToneDigit > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::ToneDigit"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::ToneDigit, std::allocator< pj::ToneDigit > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::ToneDigit" "," "std::allocator< pj::ToneDigit >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_ToneDigit_Sg__iterator(std::vector< pj::ToneDigit > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_ToneDigit_Sg____nonzero__(std::vector< pj::ToneDigit > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_ToneDigit_Sg____bool__(std::vector< pj::ToneDigit > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::ToneDigit >::size_type std_vector_Sl_pj_ToneDigit_Sg____len__(std::vector< pj::ToneDigit > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::ToneDigit >::value_type std_vector_Sl_pj_ToneDigit_Sg__pop(std::vector< pj::ToneDigit > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *std_vector_Sl_pj_ToneDigit_Sg____getslice__(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::difference_type i,std::vector< pj::ToneDigit >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____setslice____SWIG_0(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::difference_type i,std::vector< pj::ToneDigit >::difference_type j,std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &v=std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____delslice__(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::difference_type i,std::vector< pj::ToneDigit >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____delitem____SWIG_0(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *std_vector_Sl_pj_ToneDigit_Sg____getitem____SWIG_0(std::vector< pj::ToneDigit > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type id = i;
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____setitem____SWIG_0(std::vector< pj::ToneDigit > *self,PySliceObject *slice,std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type id = i;
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____setitem____SWIG_1(std::vector< pj::ToneDigit > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type id = i;
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____delitem____SWIG_1(std::vector< pj::ToneDigit > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type id = i;
      std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::ToneDigit >::value_type const &std_vector_Sl_pj_ToneDigit_Sg____getitem____SWIG_1(std::vector< pj::ToneDigit > const *self,std::vector< pj::ToneDigit >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg____setitem____SWIG_2(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::difference_type i,std::vector< pj::ToneDigit >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg__append(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::ToneDigit >::iterator std_vector_Sl_pj_ToneDigit_Sg__erase__SWIG_0(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::ToneDigit >::iterator std_vector_Sl_pj_ToneDigit_Sg__erase__SWIG_1(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::iterator first,std::vector< pj::ToneDigit >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::ToneDigit >::iterator std_vector_Sl_pj_ToneDigit_Sg__insert__SWIG_0(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::iterator pos,std::vector< pj::ToneDigit >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_ToneDigit_Sg__insert__SWIG_1(std::vector< pj::ToneDigit > *self,std::vector< pj::ToneDigit >::iterator pos,std::vector< pj::ToneDigit >::size_type n,std::vector< pj::ToneDigit >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::ToneDigitMapDigit > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::ToneDigitMapDigit"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::ToneDigitMapDigit, std::allocator< pj::ToneDigitMapDigit > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::ToneDigitMapDigit" "," "std::allocator< pj::ToneDigitMapDigit >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_ToneDigitMapDigit_Sg__iterator(std::vector< pj::ToneDigitMapDigit > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_ToneDigitMapDigit_Sg____nonzero__(std::vector< pj::ToneDigitMapDigit > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_ToneDigitMapDigit_Sg____bool__(std::vector< pj::ToneDigitMapDigit > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::ToneDigitMapDigit >::size_type std_vector_Sl_pj_ToneDigitMapDigit_Sg____len__(std::vector< pj::ToneDigitMapDigit > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::ToneDigitMapDigit >::value_type std_vector_Sl_pj_ToneDigitMapDigit_Sg__pop(std::vector< pj::ToneDigitMapDigit > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *std_vector_Sl_pj_ToneDigitMapDigit_Sg____getslice__(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::difference_type i,std::vector< pj::ToneDigitMapDigit >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____setslice____SWIG_0(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::difference_type i,std::vector< pj::ToneDigitMapDigit >::difference_type j,std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &v=std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____delslice__(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::difference_type i,std::vector< pj::ToneDigitMapDigit >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____delitem____SWIG_0(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *std_vector_Sl_pj_ToneDigitMapDigit_Sg____getitem____SWIG_0(std::vector< pj::ToneDigitMapDigit > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type id = i;
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____setitem____SWIG_0(std::vector< pj::ToneDigitMapDigit > *self,PySliceObject *slice,std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type id = i;
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____setitem____SWIG_1(std::vector< pj::ToneDigitMapDigit > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type id = i;
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____delitem____SWIG_1(std::vector< pj::ToneDigitMapDigit > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type id = i;
      std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::ToneDigitMapDigit >::value_type const &std_vector_Sl_pj_ToneDigitMapDigit_Sg____getitem____SWIG_1(std::vector< pj::ToneDigitMapDigit > const *self,std::vector< pj::ToneDigitMapDigit >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg____setitem____SWIG_2(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::difference_type i,std::vector< pj::ToneDigitMapDigit >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg__append(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::ToneDigitMapDigit >::iterator std_vector_Sl_pj_ToneDigitMapDigit_Sg__erase__SWIG_0(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::ToneDigitMapDigit >::iterator std_vector_Sl_pj_ToneDigitMapDigit_Sg__erase__SWIG_1(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::iterator first,std::vector< pj::ToneDigitMapDigit >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::ToneDigitMapDigit >::iterator std_vector_Sl_pj_ToneDigitMapDigit_Sg__insert__SWIG_0(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::iterator pos,std::vector< pj::ToneDigitMapDigit >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_ToneDigitMapDigit_Sg__insert__SWIG_1(std::vector< pj::ToneDigitMapDigit > *self,std::vector< pj::ToneDigitMapDigit >::iterator pos,std::vector< pj::ToneDigitMapDigit >::size_type n,std::vector< pj::ToneDigitMapDigit >::value_type const &x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::MediaFormat > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::MediaFormat"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::MediaFormat*, std::allocator< pj::MediaFormat * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::MediaFormat" " *," "std::allocator< pj::MediaFormat * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_MediaFormat_Sm__Sg__iterator(std::vector< pj::MediaFormat * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_MediaFormat_Sm__Sg____nonzero__(std::vector< pj::MediaFormat * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_MediaFormat_Sm__Sg____bool__(std::vector< pj::MediaFormat * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::MediaFormat * >::size_type std_vector_Sl_pj_MediaFormat_Sm__Sg____len__(std::vector< pj::MediaFormat * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::MediaFormat * >::value_type std_vector_Sl_pj_MediaFormat_Sm__Sg__pop(std::vector< pj::MediaFormat * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *std_vector_Sl_pj_MediaFormat_Sm__Sg____getslice__(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::difference_type i,std::vector< pj::MediaFormat * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____setslice____SWIG_0(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::difference_type i,std::vector< pj::MediaFormat * >::difference_type j,std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &v=std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____delslice__(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::difference_type i,std::vector< pj::MediaFormat * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____delitem____SWIG_0(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *std_vector_Sl_pj_MediaFormat_Sm__Sg____getitem____SWIG_0(std::vector< pj::MediaFormat * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type id = i;
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____setitem____SWIG_0(std::vector< pj::MediaFormat * > *self,PySliceObject *slice,std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type id = i;
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____setitem____SWIG_1(std::vector< pj::MediaFormat * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type id = i;
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____delitem____SWIG_1(std::vector< pj::MediaFormat * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type id = i;
      std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::MediaFormat * >::value_type std_vector_Sl_pj_MediaFormat_Sm__Sg____getitem____SWIG_1(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg____setitem____SWIG_2(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::difference_type i,std::vector< pj::MediaFormat * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg__append(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::value_type x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::MediaFormat * >::iterator std_vector_Sl_pj_MediaFormat_Sm__Sg__erase__SWIG_0(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::MediaFormat * >::iterator std_vector_Sl_pj_MediaFormat_Sm__Sg__erase__SWIG_1(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::iterator first,std::vector< pj::MediaFormat * >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::MediaFormat * >::iterator std_vector_Sl_pj_MediaFormat_Sm__Sg__insert__SWIG_0(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::iterator pos,std::vector< pj::MediaFormat * >::value_type x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_MediaFormat_Sm__Sg__insert__SWIG_1(std::vector< pj::MediaFormat * > *self,std::vector< pj::MediaFormat * >::iterator pos,std::vector< pj::MediaFormat * >::size_type n,std::vector< pj::MediaFormat * >::value_type x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::AudioDevInfo > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::AudioDevInfo"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::AudioDevInfo*, std::allocator< pj::AudioDevInfo * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::AudioDevInfo" " *," "std::allocator< pj::AudioDevInfo * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_AudioDevInfo_Sm__Sg__iterator(std::vector< pj::AudioDevInfo * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_AudioDevInfo_Sm__Sg____nonzero__(std::vector< pj::AudioDevInfo * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_AudioDevInfo_Sm__Sg____bool__(std::vector< pj::AudioDevInfo * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::AudioDevInfo * >::size_type std_vector_Sl_pj_AudioDevInfo_Sm__Sg____len__(std::vector< pj::AudioDevInfo * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::AudioDevInfo * >::value_type std_vector_Sl_pj_AudioDevInfo_Sm__Sg__pop(std::vector< pj::AudioDevInfo * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *std_vector_Sl_pj_AudioDevInfo_Sm__Sg____getslice__(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::difference_type i,std::vector< pj::AudioDevInfo * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setslice____SWIG_0(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::difference_type i,std::vector< pj::AudioDevInfo * >::difference_type j,std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &v=std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____delslice__(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::difference_type i,std::vector< pj::AudioDevInfo * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____delitem____SWIG_0(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *std_vector_Sl_pj_AudioDevInfo_Sm__Sg____getitem____SWIG_0(std::vector< pj::AudioDevInfo * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type id = i;
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setitem____SWIG_0(std::vector< pj::AudioDevInfo * > *self,PySliceObject *slice,std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type id = i;
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setitem____SWIG_1(std::vector< pj::AudioDevInfo * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type id = i;
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____delitem____SWIG_1(std::vector< pj::AudioDevInfo * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type id = i;
      std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::AudioDevInfo * >::value_type std_vector_Sl_pj_AudioDevInfo_Sm__Sg____getitem____SWIG_1(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setitem____SWIG_2(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::difference_type i,std::vector< pj::AudioDevInfo * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg__append(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::value_type x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::AudioDevInfo * >::iterator std_vector_Sl_pj_AudioDevInfo_Sm__Sg__erase__SWIG_0(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::AudioDevInfo * >::iterator std_vector_Sl_pj_AudioDevInfo_Sm__Sg__erase__SWIG_1(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::iterator first,std::vector< pj::AudioDevInfo * >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::AudioDevInfo * >::iterator std_vector_Sl_pj_AudioDevInfo_Sm__Sg__insert__SWIG_0(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::iterator pos,std::vector< pj::AudioDevInfo * >::value_type x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_AudioDevInfo_Sm__Sg__insert__SWIG_1(std::vector< pj::AudioDevInfo * > *self,std::vector< pj::AudioDevInfo * >::iterator pos,std::vector< pj::AudioDevInfo * >::size_type n,std::vector< pj::AudioDevInfo * >::value_type x){ self->insert(pos, n, x); }

  namespace swig {
    template <>  struct traits<pj::CodecInfo > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::CodecInfo"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::CodecInfo*, std::allocator< pj::CodecInfo * > > > {
	  typedef value_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::CodecInfo" " *," "std::allocator< pj::CodecInfo * >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_CodecInfo_Sm__Sg__iterator(std::vector< pj::CodecInfo * > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_CodecInfo_Sm__Sg____nonzero__(std::vector< pj::CodecInfo * > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_CodecInfo_Sm__Sg____bool__(std::vector< pj::CodecInfo * > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::CodecInfo * >::size_type std_vector_Sl_pj_CodecInfo_Sm__Sg____len__(std::vector< pj::CodecInfo * > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::CodecInfo * >::value_type std_vector_Sl_pj_CodecInfo_Sm__Sg__pop(std::vector< pj::CodecInfo * > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *std_vector_Sl_pj_CodecInfo_Sm__Sg____getslice__(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::difference_type i,std::vector< pj::CodecInfo * >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____setslice____SWIG_0(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::difference_type i,std::vector< pj::CodecInfo * >::difference_type j,std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &v=std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____delslice__(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::difference_type i,std::vector< pj::CodecInfo * >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____delitem____SWIG_0(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *std_vector_Sl_pj_CodecInfo_Sm__Sg____getitem____SWIG_0(std::vector< pj::CodecInfo * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type id = i;
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____setitem____SWIG_0(std::vector< pj::CodecInfo * > *self,PySliceObject *slice,std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type id = i;
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____setitem____SWIG_1(std::vector< pj::CodecInfo * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type id = i;
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____delitem____SWIG_1(std::vector< pj::CodecInfo * > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type id = i;
      std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::CodecInfo * >::value_type std_vector_Sl_pj_CodecInfo_Sm__Sg____getitem____SWIG_1(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg____setitem____SWIG_2(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::difference_type i,std::vector< pj::CodecInfo * >::value_type x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg__append(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::value_type x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::CodecInfo * >::iterator std_vector_Sl_pj_CodecInfo_Sm__Sg__erase__SWIG_0(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::CodecInfo * >::iterator std_vector_Sl_pj_CodecInfo_Sm__Sg__erase__SWIG_1(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::iterator first,std::vector< pj::CodecInfo * >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::CodecInfo * >::iterator std_vector_Sl_pj_CodecInfo_Sm__Sg__insert__SWIG_0(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::iterator pos,std::vector< pj::CodecInfo * >::value_type x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_CodecInfo_Sm__Sg__insert__SWIG_1(std::vector< pj::CodecInfo * > *self,std::vector< pj::CodecInfo * >::iterator pos,std::vector< pj::CodecInfo * >::size_type n,std::vector< pj::CodecInfo * >::value_type x){ self->insert(pos, n, x); }

SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_short  (unsigned short value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


  namespace swig {
    template <>  struct traits<pj::CallMediaInfo > {
      typedef pointer_category category;
      static const char* type_name() { return"pj::CallMediaInfo"; }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<pj::CallMediaInfo, std::allocator< pj::CallMediaInfo > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "pj::CallMediaInfo" "," "std::allocator< pj::CallMediaInfo >" " >";
	  }
	};
      }
    
SWIGINTERN swig::SwigPyIterator *std_vector_Sl_pj_CallMediaInfo_Sg__iterator(std::vector< pj::CallMediaInfo > *self,PyObject **PYTHON_SELF){
      return swig::make_output_iterator(self->begin(), self->begin(), self->end(), *PYTHON_SELF);
    }
SWIGINTERN bool std_vector_Sl_pj_CallMediaInfo_Sg____nonzero__(std::vector< pj::CallMediaInfo > const *self){
      return !(self->empty());
    }
SWIGINTERN bool std_vector_Sl_pj_CallMediaInfo_Sg____bool__(std::vector< pj::CallMediaInfo > const *self){
      return !(self->empty());
    }
SWIGINTERN std::vector< pj::CallMediaInfo >::size_type std_vector_Sl_pj_CallMediaInfo_Sg____len__(std::vector< pj::CallMediaInfo > const *self){
      return self->size();
    }
SWIGINTERN std::vector< pj::CallMediaInfo >::value_type std_vector_Sl_pj_CallMediaInfo_Sg__pop(std::vector< pj::CallMediaInfo > *self){
      if (self->size() == 0)
	throw std::out_of_range("pop from empty container");
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::value_type x = self->back();
      self->pop_back();
      return x;
    }
SWIGINTERN std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *std_vector_Sl_pj_CallMediaInfo_Sg____getslice__(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::difference_type i,std::vector< pj::CallMediaInfo >::difference_type j){
      return swig::getslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____setslice____SWIG_0(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::difference_type i,std::vector< pj::CallMediaInfo >::difference_type j,std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &v=std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >()){
      swig::setslice(self, i, j, 1, v);
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____delslice__(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::difference_type i,std::vector< pj::CallMediaInfo >::difference_type j){
      swig::delslice(self, i, j, 1);
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____delitem____SWIG_0(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::difference_type i){
      self->erase(swig::getpos(self,i));
    }
SWIGINTERN std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *std_vector_Sl_pj_CallMediaInfo_Sg____getitem____SWIG_0(std::vector< pj::CallMediaInfo > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return NULL;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type id = i;
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type jd = j;
      return swig::getslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____setitem____SWIG_0(std::vector< pj::CallMediaInfo > *self,PySliceObject *slice,std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &v){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type id = i;
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type jd = j;
      swig::setslice(self, id, jd, step, v);
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____setitem____SWIG_1(std::vector< pj::CallMediaInfo > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type id = i;
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____delitem____SWIG_1(std::vector< pj::CallMediaInfo > *self,PySliceObject *slice){
      Py_ssize_t i, j, step;
      if( !PySlice_Check(slice) ) {
        SWIG_Error(SWIG_TypeError, "Slice object expected.");
        return;
      }
      PySlice_GetIndices(SWIGPY_SLICE_ARG(slice), (Py_ssize_t)self->size(), &i, &j, &step);
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type id = i;
      std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >::difference_type jd = j;
      swig::delslice(self, id, jd, step);
    }
SWIGINTERN std::vector< pj::CallMediaInfo >::value_type const &std_vector_Sl_pj_CallMediaInfo_Sg____getitem____SWIG_1(std::vector< pj::CallMediaInfo > const *self,std::vector< pj::CallMediaInfo >::difference_type i){
      return *(swig::cgetpos(self, i));
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg____setitem____SWIG_2(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::difference_type i,std::vector< pj::CallMediaInfo >::value_type const &x){
      *(swig::getpos(self,i)) = x;
    }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg__append(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::value_type const &x){
      self->push_back(x);
    }
SWIGINTERN std::vector< pj::CallMediaInfo >::iterator std_vector_Sl_pj_CallMediaInfo_Sg__erase__SWIG_0(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::iterator pos){ return self->erase(pos); }
SWIGINTERN std::vector< pj::CallMediaInfo >::iterator std_vector_Sl_pj_CallMediaInfo_Sg__erase__SWIG_1(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::iterator first,std::vector< pj::CallMediaInfo >::iterator last){ return self->erase(first, last); }
SWIGINTERN std::vector< pj::CallMediaInfo >::iterator std_vector_Sl_pj_CallMediaInfo_Sg__insert__SWIG_0(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::iterator pos,std::vector< pj::CallMediaInfo >::value_type const &x){ return self->insert(pos, x); }
SWIGINTERN void std_vector_Sl_pj_CallMediaInfo_Sg__insert__SWIG_1(std::vector< pj::CallMediaInfo > *self,std::vector< pj::CallMediaInfo >::iterator pos,std::vector< pj::CallMediaInfo >::size_type n,std::vector< pj::CallMediaInfo >::value_type const &x){ self->insert(pos, n, x); }


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "pjsua2_wrap.h"

SwigDirector_Buddy::SwigDirector_Buddy(PyObject *self): pj::Buddy(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((pj::Buddy *)this, this); 
}




SwigDirector_Buddy::~SwigDirector_Buddy() {
}

void SwigDirector_Buddy::onBuddyState() {
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Buddy.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "onBuddyState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, NULL, NULL);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *) "onBuddyState", NULL);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


SwigDirector_FindBuddyMatch::SwigDirector_FindBuddyMatch(PyObject *self): pj::FindBuddyMatch(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((pj::FindBuddyMatch *)this, this); 
}




bool SwigDirector_FindBuddyMatch::match(pj::string const &token, pj::Buddy const &buddy) {
  bool c_result;
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_From_std_string(static_cast< std::string >(token));
  swig::SwigVar_PyObject obj1;
  obj1 = SWIG_NewPointerObj(SWIG_as_voidptr(&buddy), SWIGTYPE_p_pj__Buddy,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call FindBuddyMatch.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "match";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"match", (char *)"(OO)" ,(PyObject *)obj0,(PyObject *)obj1);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
  bool swig_val;
  int swig_res = SWIG_AsVal_bool(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""bool""'");
  }
  c_result = static_cast< bool >(swig_val);
  return (bool) c_result;
}


SwigDirector_FindBuddyMatch::~SwigDirector_FindBuddyMatch() {
}

SwigDirector_Account::SwigDirector_Account(PyObject *self): pj::Account(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((pj::Account *)this, this); 
}




SwigDirector_Account::~SwigDirector_Account() {
}

void SwigDirector_Account::onIncomingCall(pj::OnIncomingCallParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnIncomingCallParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "onIncomingCall";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onIncomingCall", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onRegStarted(pj::OnRegStartedParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnRegStartedParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "onRegStarted";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onRegStarted", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onRegState(pj::OnRegStateParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnRegStateParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "onRegState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onRegState", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onIncomingSubscribe(pj::OnIncomingSubscribeParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnIncomingSubscribeParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "onIncomingSubscribe";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onIncomingSubscribe", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onInstantMessage(pj::OnInstantMessageParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnInstantMessageParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "onInstantMessage";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onInstantMessage", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onInstantMessageStatus(pj::OnInstantMessageStatusParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnInstantMessageStatusParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "onInstantMessageStatus";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onInstantMessageStatus", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onTypingIndication(pj::OnTypingIndicationParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnTypingIndicationParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "onTypingIndication";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onTypingIndication", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Account::onMwiInfo(pj::OnMwiInfoParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnMwiInfoParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Account.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "onMwiInfo";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onMwiInfo", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


SwigDirector_Call::SwigDirector_Call(PyObject *self, pj::Account &acc, int call_id): pj::Call(acc, call_id), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((pj::Call *)this, this); 
}




SwigDirector_Call::~SwigDirector_Call() {
}

void SwigDirector_Call::onCallState(pj::OnCallStateParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallStateParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "onCallState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallState", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallTsxState(pj::OnCallTsxStateParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallTsxStateParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "onCallTsxState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallTsxState", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallMediaState(pj::OnCallMediaStateParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallMediaStateParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "onCallMediaState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallMediaState", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallSdpCreated(pj::OnCallSdpCreatedParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallSdpCreatedParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "onCallSdpCreated";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallSdpCreated", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onStreamCreated(pj::OnStreamCreatedParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnStreamCreatedParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "onStreamCreated";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onStreamCreated", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onStreamDestroyed(pj::OnStreamDestroyedParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnStreamDestroyedParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 5;
  const char * const swig_method_name = "onStreamDestroyed";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onStreamDestroyed", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onDtmfDigit(pj::OnDtmfDigitParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnDtmfDigitParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 6;
  const char * const swig_method_name = "onDtmfDigit";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onDtmfDigit", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallTransferRequest(pj::OnCallTransferRequestParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallTransferRequestParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 7;
  const char * const swig_method_name = "onCallTransferRequest";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallTransferRequest", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallTransferStatus(pj::OnCallTransferStatusParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallTransferStatusParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 8;
  const char * const swig_method_name = "onCallTransferStatus";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallTransferStatus", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallReplaceRequest(pj::OnCallReplaceRequestParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallReplaceRequestParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 9;
  const char * const swig_method_name = "onCallReplaceRequest";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallReplaceRequest", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallReplaced(pj::OnCallReplacedParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallReplacedParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 10;
  const char * const swig_method_name = "onCallReplaced";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallReplaced", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallRxOffer(pj::OnCallRxOfferParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallRxOfferParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 11;
  const char * const swig_method_name = "onCallRxOffer";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallRxOffer", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onInstantMessage(pj::OnInstantMessageParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnInstantMessageParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 12;
  const char * const swig_method_name = "onInstantMessage";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onInstantMessage", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onInstantMessageStatus(pj::OnInstantMessageStatusParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnInstantMessageStatusParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 13;
  const char * const swig_method_name = "onInstantMessageStatus";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onInstantMessageStatus", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onTypingIndication(pj::OnTypingIndicationParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnTypingIndicationParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 14;
  const char * const swig_method_name = "onTypingIndication";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onTypingIndication", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


pjsip_redirect_op SwigDirector_Call::onCallRedirected(pj::OnCallRedirectedParam &prm) {
  pjsip_redirect_op c_result;
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallRedirectedParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 15;
  const char * const swig_method_name = "onCallRedirected";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallRedirected", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
  int swig_val;
  int swig_res = SWIG_AsVal_int(result, &swig_val);
  if (!SWIG_IsOK(swig_res)) {
    Swig::DirectorTypeMismatchException::raise(SWIG_ErrorType(SWIG_ArgError(swig_res)), "in output value of type '""pjsip_redirect_op""'");
  }
  c_result = static_cast< pjsip_redirect_op >(swig_val);
  return (pjsip_redirect_op) c_result;
}


void SwigDirector_Call::onCallMediaTransportState(pj::OnCallMediaTransportStateParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallMediaTransportStateParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 16;
  const char * const swig_method_name = "onCallMediaTransportState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallMediaTransportState", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCallMediaEvent(pj::OnCallMediaEventParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCallMediaEventParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 17;
  const char * const swig_method_name = "onCallMediaEvent";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCallMediaEvent", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Call::onCreateMediaTransport(pj::OnCreateMediaTransportParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnCreateMediaTransportParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Call.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 18;
  const char * const swig_method_name = "onCreateMediaTransport";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onCreateMediaTransport", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


SwigDirector_LogWriter::SwigDirector_LogWriter(PyObject *self): pj::LogWriter(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((pj::LogWriter *)this, this); 
}




SwigDirector_LogWriter::~SwigDirector_LogWriter() {
}

void SwigDirector_LogWriter::write(pj::LogEntry const &entry) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&entry), SWIGTYPE_p_pj__LogEntry,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call LogWriter.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "write";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"write", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


SwigDirector_Endpoint::SwigDirector_Endpoint(PyObject *self): pj::Endpoint(), Swig::Director(self) {
  SWIG_DIRECTOR_RGTR((pj::Endpoint *)this, this); 
}




SwigDirector_Endpoint::~SwigDirector_Endpoint() {
}

void SwigDirector_Endpoint::onNatDetectionComplete(pj::OnNatDetectionCompleteParam const &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnNatDetectionCompleteParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Endpoint.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 0;
  const char * const swig_method_name = "onNatDetectionComplete";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onNatDetectionComplete", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Endpoint::onNatCheckStunServersComplete(pj::OnNatCheckStunServersCompleteParam const &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Endpoint.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 1;
  const char * const swig_method_name = "onNatCheckStunServersComplete";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onNatCheckStunServersComplete", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Endpoint::onTransportState(pj::OnTransportStateParam const &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnTransportStateParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Endpoint.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 2;
  const char * const swig_method_name = "onTransportState";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onTransportState", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Endpoint::onTimer(pj::OnTimerParam const &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnTimerParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Endpoint.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 3;
  const char * const swig_method_name = "onTimer";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onTimer", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


void SwigDirector_Endpoint::onSelectAccount(pj::OnSelectAccountParam &prm) {
  swig::SwigVar_PyObject obj0;
  obj0 = SWIG_NewPointerObj(SWIG_as_voidptr(&prm), SWIGTYPE_p_pj__OnSelectAccountParam,  0 );
  if (!swig_get_self()) {
    Swig::DirectorException::raise("'self' uninitialized, maybe you forgot to call Endpoint.__init__.");
  }
#if defined(SWIG_PYTHON_DIRECTOR_VTABLE)
  const size_t swig_method_index = 4;
  const char * const swig_method_name = "onSelectAccount";
  PyObject* method = swig_get_method(swig_method_index, swig_method_name);
  swig::SwigVar_PyObject result = PyObject_CallFunction(method, (char *)"(O)" ,(PyObject *)obj0);
#else
  swig::SwigVar_PyObject result = PyObject_CallMethod(swig_get_self(), (char *)"onSelectAccount", (char *)"(O)" ,(PyObject *)obj0);
#endif
  if (!result) {
    PyObject *error = PyErr_Occurred();
    {
      if( error != NULL ) {
        PyObject *ptype, *pvalue, *ptraceback;
        PyErr_Fetch( &ptype, &pvalue, &ptraceback );
        PyErr_Restore( ptype, pvalue, ptraceback );
        PyErr_Print();
        //Py_Exit(1);
      }
    }
  }
}


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_pj_qos_params_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  pj_uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pj_qos_params_flags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_flags_set" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pj_qos_params_flags_set" "', argument " "2"" of type '" "pj_uint8_t""'");
  } 
  arg2 = static_cast< pj_uint8_t >(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint8_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pj_qos_params_flags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_flags_get" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  result = (pj_uint8_t) ((arg1)->flags);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_dscp_val_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  pj_uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pj_qos_params_dscp_val_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_dscp_val_set" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pj_qos_params_dscp_val_set" "', argument " "2"" of type '" "pj_uint8_t""'");
  } 
  arg2 = static_cast< pj_uint8_t >(val2);
  if (arg1) (arg1)->dscp_val = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_dscp_val_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint8_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pj_qos_params_dscp_val_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_dscp_val_get" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  result = (pj_uint8_t) ((arg1)->dscp_val);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_so_prio_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  pj_uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pj_qos_params_so_prio_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_so_prio_set" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pj_qos_params_so_prio_set" "', argument " "2"" of type '" "pj_uint8_t""'");
  } 
  arg2 = static_cast< pj_uint8_t >(val2);
  if (arg1) (arg1)->so_prio = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_so_prio_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint8_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pj_qos_params_so_prio_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_so_prio_get" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  result = (pj_uint8_t) ((arg1)->so_prio);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_wmm_prio_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  pj_qos_wmm_prio arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pj_qos_params_wmm_prio_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_wmm_prio_set" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pj_qos_params_wmm_prio_set" "', argument " "2"" of type '" "pj_qos_wmm_prio""'");
  } 
  arg2 = static_cast< pj_qos_wmm_prio >(val2);
  if (arg1) (arg1)->wmm_prio = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pj_qos_params_wmm_prio_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_qos_wmm_prio result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pj_qos_params_wmm_prio_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pj_qos_params_wmm_prio_get" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  result = (pj_qos_wmm_prio) ((arg1)->wmm_prio);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pj_qos_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pj_qos_params")) SWIG_fail;
  result = (pj_qos_params *)new pj_qos_params();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj_qos_params, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pj_qos_params(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_qos_params *arg1 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pj_qos_params",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj_qos_params, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pj_qos_params" "', argument " "1"" of type '" "pj_qos_params *""'"); 
  }
  arg1 = reinterpret_cast< pj_qos_params * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pj_qos_params_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj_qos_params, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_digit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_digit_digit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_digit_set" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_digit_digit_set" "', argument " "2"" of type '" "char""'");
  } 
  arg2 = static_cast< char >(val2);
  if (arg1) (arg1)->digit = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_digit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  char result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_digit_digit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_digit_get" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  result = (char) ((arg1)->digit);
  resultobj = SWIG_From_char(static_cast< char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_on_msec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_digit_on_msec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_on_msec_set" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_digit_on_msec_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->on_msec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_on_msec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_digit_on_msec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_on_msec_get" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  result = (short) ((arg1)->on_msec);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_off_msec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_digit_off_msec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_off_msec_set" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_digit_off_msec_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->off_msec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_off_msec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_digit_off_msec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_off_msec_get" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  result = (short) ((arg1)->off_msec);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_volume_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_digit_volume_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_volume_set" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_digit_volume_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->volume = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_volume_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_digit_volume_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_volume_get" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  result = (short) ((arg1)->volume);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pjmedia_tone_digit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pjmedia_tone_digit")) SWIG_fail;
  result = (pjmedia_tone_digit *)new pjmedia_tone_digit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pjmedia_tone_digit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pjmedia_tone_digit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit *arg1 = (pjmedia_tone_digit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pjmedia_tone_digit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pjmedia_tone_digit" "', argument " "1"" of type '" "pjmedia_tone_digit *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pjmedia_tone_digit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pjmedia_tone_digit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_map_count_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit_map *arg1 = (pjmedia_tone_digit_map *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_digit_map_count_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_map_count_set" "', argument " "1"" of type '" "pjmedia_tone_digit_map *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit_map * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_digit_map_count_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->count = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_digit_map_count_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit_map *arg1 = (pjmedia_tone_digit_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_digit_map_count_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit_map, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_digit_map_count_get" "', argument " "1"" of type '" "pjmedia_tone_digit_map *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit_map * >(argp1);
  result = (unsigned int) ((arg1)->count);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pjmedia_tone_digit_map(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit_map *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pjmedia_tone_digit_map")) SWIG_fail;
  result = (pjmedia_tone_digit_map *)new pjmedia_tone_digit_map();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pjmedia_tone_digit_map, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pjmedia_tone_digit_map(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_digit_map *arg1 = (pjmedia_tone_digit_map *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pjmedia_tone_digit_map",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_digit_map, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pjmedia_tone_digit_map" "', argument " "1"" of type '" "pjmedia_tone_digit_map *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_digit_map * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pjmedia_tone_digit_map_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pjmedia_tone_digit_map, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_freq1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_desc_freq1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_freq1_set" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_desc_freq1_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->freq1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_freq1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_desc_freq1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_freq1_get" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  result = (short) ((arg1)->freq1);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_freq2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_desc_freq2_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_freq2_set" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_desc_freq2_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->freq2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_freq2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_desc_freq2_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_freq2_get" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  result = (short) ((arg1)->freq2);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_on_msec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_desc_on_msec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_on_msec_set" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_desc_on_msec_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->on_msec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_on_msec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_desc_on_msec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_on_msec_get" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  result = (short) ((arg1)->on_msec);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_off_msec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_desc_off_msec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_off_msec_set" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_desc_off_msec_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->off_msec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_off_msec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_desc_off_msec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_off_msec_get" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  result = (short) ((arg1)->off_msec);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_volume_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_desc_volume_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_volume_set" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_desc_volume_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->volume = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_volume_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_desc_volume_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_volume_get" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  result = (short) ((arg1)->volume);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:pjmedia_tone_desc_flags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_flags_set" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "pjmedia_tone_desc_flags_set" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_pjmedia_tone_desc_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:pjmedia_tone_desc_flags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "pjmedia_tone_desc_flags_get" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  result = (short) ((arg1)->flags);
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_pjmedia_tone_desc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_pjmedia_tone_desc")) SWIG_fail;
  result = (pjmedia_tone_desc *)new pjmedia_tone_desc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pjmedia_tone_desc, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_pjmedia_tone_desc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pjmedia_tone_desc *arg1 = (pjmedia_tone_desc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_pjmedia_tone_desc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pjmedia_tone_desc, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_pjmedia_tone_desc" "', argument " "1"" of type '" "pjmedia_tone_desc *""'"); 
  }
  arg1 = reinterpret_cast< pjmedia_tone_desc * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *pjmedia_tone_desc_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pjmedia_tone_desc, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SwigPyIterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_value",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_incr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_incr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->incr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_incr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::incr(size_t)\n"
    "    swig::SwigPyIterator::incr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_decr",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
  } 
  arg2 = static_cast< size_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_decr",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (swig::SwigPyIterator *)(arg1)->decr();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_SwigPyIterator_decr__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    swig::SwigPyIterator::decr(size_t)\n"
    "    swig::SwigPyIterator::decr()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_distance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_equal",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
  }
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_copy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_next",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->next();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator___next__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->__next__();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SwigPyIterator_previous",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  try {
    result = (PyObject *)(arg1)->previous();
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator_advance",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___eq__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___ne__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___iadd__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___isub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___add__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
  }
  catch(swig::stop_iteration &_e) {
    {
      (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
      SWIG_fail;
    }
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SwigPyIterator___sub__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_StringVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_iterator" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_std_string_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___nonzero__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (bool)std_vector_Sl_std_string_Sg____nonzero__((std::vector< std::string > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___bool__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (bool)std_vector_Sl_std_string_Sg____bool__((std::vector< std::string > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___len__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = std_vector_Sl_std_string_Sg____len__((std::vector< std::string > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_pop" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  try {
    result = std_vector_Sl_std_string_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___getslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___getslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringVector___getslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  try {
    result = (std::vector< std::string,std::allocator< std::string > > *)std_vector_Sl_std_string_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  std::vector< std::string,std::allocator< std::string > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:StringVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___setslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___setslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringVector___setslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "StringVector___setslice__" "', argument " "4"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector___setslice__" "', argument " "4"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_std_string_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< std::string,std::allocator< std::string > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___setslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___setslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringVector___setslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  try {
    std_vector_Sl_std_string_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_StringVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<std::string,std::allocator< std::string > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_StringVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__setslice__(std::vector< std::string >::difference_type,std::vector< std::string >::difference_type,std::vector< std::string,std::allocator< std::string > > const &)\n"
    "    std::vector< std::string >::__setslice__(std::vector< std::string >::difference_type,std::vector< std::string >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___delslice__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___delslice__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringVector___delslice__" "', argument " "3"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::difference_type >(val3);
  try {
    std_vector_Sl_std_string_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___delitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___delitem__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  try {
    std_vector_Sl_std_string_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::string,std::allocator< std::string > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___getitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< std::string,std::allocator< std::string > > *)std_vector_Sl_std_string_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< std::string,std::allocator< std::string > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___setitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StringVector___setitem__" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector___setitem__" "', argument " "3"" of type '" "std::vector< std::string,std::allocator< std::string > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_string_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< std::string,std::allocator< std::string > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___setitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_std_string_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___delitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_std_string_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_StringVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StringVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__delitem__(std::vector< std::string >::difference_type)\n"
    "    std::vector< std::string >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___getitem__" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___getitem__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  try {
    result = (std::vector< std::string >::value_type *) &std_vector_Sl_std_string_Sg____getitem____SWIG_1((std::vector< std::string > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_StringVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StringVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__getitem__(PySliceObject *)\n"
    "    std::vector< std::string >::__getitem__(std::vector< std::string >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::difference_type arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector___setitem__" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector___setitem__" "', argument " "2"" of type '" "std::vector< std::string >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::difference_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StringVector___setitem__" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector___setitem__" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_std_string_Sg____setitem____SWIG_2(arg1,arg2,(std::string const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_StringVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<std::string,std::allocator< std::string > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StringVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StringVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::__setitem__(PySliceObject *,std::vector< std::string,std::allocator< std::string > > const &)\n"
    "    std::vector< std::string >::__setitem__(PySliceObject *)\n"
    "    std::vector< std::string >::__setitem__(std::vector< std::string >::difference_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_append" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringVector_append" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_append" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  std_vector_Sl_std_string_Sg__append(arg1,(std::string const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_StringVector")) SWIG_fail;
  result = (std::vector< std::string > *)new std::vector< std::string >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_StringVector",&obj0)) SWIG_fail;
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_StringVector" "', argument " "1"" of type '" "std::vector< std::string > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StringVector" "', argument " "1"" of type '" "std::vector< std::string > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< std::string > *)new std::vector< std::string >((std::vector< std::string > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_empty" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (bool)((std::vector< std::string > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_size" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = ((std::vector< std::string > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_clear" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_swap" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringVector_swap" "', argument " "2"" of type '" "std::vector< std::string > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_swap" "', argument " "2"" of type '" "std::vector< std::string > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< std::string > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< std::string > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_get_allocator" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = ((std::vector< std::string > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< std::string >::allocator_type(static_cast< const std::vector< std::string >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_std__string_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_begin" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_end" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_rbegin" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_rend" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_StringVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringVector" "', argument " "1"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::string >::size_type >(val1);
  result = (std::vector< std::string > *)new std::vector< std::string >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_pop_back" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_resize" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector_resize" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::string >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_erase" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  result = std_vector_Sl_std_string_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  std::vector< std::string >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< std::string >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_erase" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_erase" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_erase" "', argument " "3"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_erase" "', argument " "3"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  result = std_vector_Sl_std_string_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_StringVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_StringVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::erase(std::vector< std::string >::iterator)\n"
    "    std::vector< std::string >::erase(std::vector< std::string >::iterator,std::vector< std::string >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_StringVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string >::size_type arg1 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< std::string > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_StringVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_StringVector" "', argument " "1"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg1 = static_cast< std::vector< std::string >::size_type >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_StringVector" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_StringVector" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  result = (std::vector< std::string > *)new std::vector< std::string >(arg1,(std::vector< std::string >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StringVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_StringVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_StringVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_StringVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_StringVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_StringVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::vector()\n"
    "    std::vector< std::string >::vector(std::vector< std::string > const &)\n"
    "    std::vector< std::string >::vector(std::vector< std::string >::size_type)\n"
    "    std::vector< std::string >::vector(std::vector< std::string >::size_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_push_back" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StringVector_push_back" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_push_back" "', argument " "2"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg2 = ptr;
  }
  (arg1)->push_back((std::vector< std::string >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_front" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (std::vector< std::string >::value_type *) &((std::vector< std::string > const *)arg1)->front();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_back" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = (std::vector< std::string >::value_type *) &((std::vector< std::string > const *)arg1)->back();
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_assign" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector_assign" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StringVector_assign" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_assign" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->assign(arg2,(std::vector< std::string >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_resize" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector_resize" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StringVector_resize" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_resize" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  (arg1)->resize(arg2,(std::vector< std::string >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_StringVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StringVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::resize(std::vector< std::string >::size_type)\n"
    "    std::vector< std::string >::resize(std::vector< std::string >::size_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  std::vector< std::string >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< std::string >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:StringVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_insert" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "StringVector_insert" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_insert" "', argument " "3"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg3 = ptr;
  }
  result = std_vector_Sl_std_string_Sg__insert__SWIG_0(arg1,arg2,(std::string const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< std::string >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::iterator arg2 ;
  std::vector< std::string >::size_type arg3 ;
  std::vector< std::string >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:StringVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_insert" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< std::string >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "StringVector_insert" "', argument " "2"" of type '" "std::vector< std::string >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "StringVector_insert" "', argument " "3"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg3 = static_cast< std::vector< std::string >::size_type >(val3);
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "StringVector_insert" "', argument " "4"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StringVector_insert" "', argument " "4"" of type '" "std::vector< std::string >::value_type const &""'"); 
    }
    arg4 = ptr;
  }
  std_vector_Sl_std_string_Sg__insert__SWIG_1(arg1,arg2,arg3,(std::string const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_StringVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<std::string,std::allocator< std::string > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< std::string >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_StringVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'StringVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< std::string >::insert(std::vector< std::string >::iterator,std::vector< std::string >::value_type const &)\n"
    "    std::vector< std::string >::insert(std::vector< std::string >::iterator,std::vector< std::string >::size_type,std::vector< std::string >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_StringVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  std::vector< std::string >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StringVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_reserve" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StringVector_reserve" "', argument " "2"" of type '" "std::vector< std::string >::size_type""'");
  } 
  arg2 = static_cast< std::vector< std::string >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StringVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< std::string >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StringVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StringVector_capacity" "', argument " "1"" of type '" "std::vector< std::string > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  result = ((std::vector< std::string > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StringVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< std::string > *arg1 = (std::vector< std::string > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StringVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StringVector" "', argument " "1"" of type '" "std::vector< std::string > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< std::string > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StringVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_IntVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_iterator" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_int_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___nonzero__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (bool)std_vector_Sl_int_Sg____nonzero__((std::vector< int > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___bool__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (bool)std_vector_Sl_int_Sg____bool__((std::vector< int > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___len__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = std_vector_Sl_int_Sg____len__((std::vector< int > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_pop" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  try {
    result = (std::vector< int >::value_type)std_vector_Sl_int_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< int,std::allocator< int > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___getslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___getslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector___getslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  try {
    result = (std::vector< int,std::allocator< int > > *)std_vector_Sl_int_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  std::vector< int,std::allocator< int > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:IntVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___setslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___setslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector___setslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "IntVector___setslice__" "', argument " "4"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IntVector___setslice__" "', argument " "4"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_int_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< int,std::allocator< int > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___setslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___setslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector___setslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  try {
    std_vector_Sl_int_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IntVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<int,std::allocator< int > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_IntVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__setslice__(std::vector< int >::difference_type,std::vector< int >::difference_type,std::vector< int,std::allocator< int > > const &)\n"
    "    std::vector< int >::__setslice__(std::vector< int >::difference_type,std::vector< int >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___delslice__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___delslice__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector___delslice__" "', argument " "3"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< int >::difference_type >(val3);
  try {
    std_vector_Sl_int_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___delitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___delitem__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  try {
    std_vector_Sl_int_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< int,std::allocator< int > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___getitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< int,std::allocator< int > > *)std_vector_Sl_int_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< int,std::allocator< int > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___setitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "IntVector___setitem__" "', argument " "3"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IntVector___setitem__" "', argument " "3"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_int_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< int,std::allocator< int > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___setitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_int_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___delitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_int_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_IntVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IntVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__delitem__(std::vector< int >::difference_type)\n"
    "    std::vector< int >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< int >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___getitem__" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___getitem__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  try {
    result = (std::vector< int >::value_type *) &std_vector_Sl_int_Sg____getitem____SWIG_1((std::vector< int > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_IntVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IntVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__getitem__(PySliceObject *)\n"
    "    std::vector< int >::__getitem__(std::vector< int >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::difference_type arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector___setitem__" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector___setitem__" "', argument " "2"" of type '" "std::vector< int >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< int >::difference_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector___setitem__" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  try {
    std_vector_Sl_int_Sg____setitem____SWIG_2(arg1,arg2,(int const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_IntVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<int,std::allocator< int > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_IntVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IntVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::__setitem__(PySliceObject *,std::vector< int,std::allocator< int > > const &)\n"
    "    std::vector< int >::__setitem__(PySliceObject *)\n"
    "    std::vector< int >::__setitem__(std::vector< int >::difference_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_append" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_append" "', argument " "2"" of type '" "std::vector< int >::value_type""'");
  } 
  temp2 = static_cast< std::vector< int >::value_type >(val2);
  arg2 = &temp2;
  std_vector_Sl_int_Sg__append(arg1,(int const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IntVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_IntVector")) SWIG_fail;
  result = (std::vector< int > *)new std::vector< int >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IntVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IntVector",&obj0)) SWIG_fail;
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_IntVector" "', argument " "1"" of type '" "std::vector< int > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_IntVector" "', argument " "1"" of type '" "std::vector< int > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< int > *)new std::vector< int >((std::vector< int > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_empty" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (bool)((std::vector< int > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_size" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = ((std::vector< int > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_clear" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_swap" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "IntVector_swap" "', argument " "2"" of type '" "std::vector< int > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "IntVector_swap" "', argument " "2"" of type '" "std::vector< int > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< int > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< int > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_get_allocator" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = ((std::vector< int > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< int >::allocator_type(static_cast< const std::vector< int >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_int_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_begin" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_end" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_rbegin" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_rend" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IntVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_IntVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IntVector" "', argument " "1"" of type '" "std::vector< int >::size_type""'");
  } 
  arg1 = static_cast< std::vector< int >::size_type >(val1);
  result = (std::vector< int > *)new std::vector< int >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_pop_back" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_resize" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_resize" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< int >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_erase" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  result = std_vector_Sl_int_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  std::vector< int >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< int >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_erase" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_erase" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_erase" "', argument " "3"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_erase" "', argument " "3"" of type '" "std::vector< int >::iterator""'");
    }
  }
  result = std_vector_Sl_int_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_IntVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_IntVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::erase(std::vector< int >::iterator)\n"
    "    std::vector< int >::erase(std::vector< int >::iterator,std::vector< int >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_IntVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int >::size_type arg1 ;
  std::vector< int >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  std::vector< int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< int > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_IntVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_IntVector" "', argument " "1"" of type '" "std::vector< int >::size_type""'");
  } 
  arg1 = static_cast< std::vector< int >::size_type >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_IntVector" "', argument " "2"" of type '" "std::vector< int >::value_type""'");
  } 
  temp2 = static_cast< std::vector< int >::value_type >(val2);
  arg2 = &temp2;
  result = (std::vector< int > *)new std::vector< int >(arg1,(std::vector< int >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_IntVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_IntVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_IntVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_IntVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_IntVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_IntVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::vector()\n"
    "    std::vector< int >::vector(std::vector< int > const &)\n"
    "    std::vector< int >::vector(std::vector< int >::size_type)\n"
    "    std::vector< int >::vector(std::vector< int >::size_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::vector< int >::value_type temp2 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_push_back" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_push_back" "', argument " "2"" of type '" "std::vector< int >::value_type""'");
  } 
  temp2 = static_cast< std::vector< int >::value_type >(val2);
  arg2 = &temp2;
  (arg1)->push_back((std::vector< int >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_front" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (std::vector< int >::value_type *) &((std::vector< int > const *)arg1)->front();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_back" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = (std::vector< int >::value_type *) &((std::vector< int > const *)arg1)->back();
  resultobj = SWIG_From_int(static_cast< int >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_assign" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_assign" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector_assign" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->assign(arg2,(std::vector< int >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_resize" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_resize" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector_resize" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  (arg1)->resize(arg2,(std::vector< int >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_IntVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IntVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::resize(std::vector< int >::size_type)\n"
    "    std::vector< int >::resize(std::vector< int >::size_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  std::vector< int >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  std::vector< int >::value_type temp3 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< int >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:IntVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_insert" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector_insert" "', argument " "3"" of type '" "std::vector< int >::value_type""'");
  } 
  temp3 = static_cast< std::vector< int >::value_type >(val3);
  arg3 = &temp3;
  result = std_vector_Sl_int_Sg__insert__SWIG_0(arg1,arg2,(int const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< int >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::iterator arg2 ;
  std::vector< int >::size_type arg3 ;
  std::vector< int >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  std::vector< int >::value_type temp4 ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:IntVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_insert" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< int >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "IntVector_insert" "', argument " "2"" of type '" "std::vector< int >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "IntVector_insert" "', argument " "3"" of type '" "std::vector< int >::size_type""'");
  } 
  arg3 = static_cast< std::vector< int >::size_type >(val3);
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "IntVector_insert" "', argument " "4"" of type '" "std::vector< int >::value_type""'");
  } 
  temp4 = static_cast< std::vector< int >::value_type >(val4);
  arg4 = &temp4;
  std_vector_Sl_int_Sg__insert__SWIG_1(arg1,arg2,arg3,(int const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_IntVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<int,std::allocator< int > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< int >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_IntVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'IntVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< int >::insert(std::vector< int >::iterator,std::vector< int >::value_type const &)\n"
    "    std::vector< int >::insert(std::vector< int >::iterator,std::vector< int >::size_type,std::vector< int >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_IntVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  std::vector< int >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:IntVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_reserve" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "IntVector_reserve" "', argument " "2"" of type '" "std::vector< int >::size_type""'");
  } 
  arg2 = static_cast< std::vector< int >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_IntVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:IntVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "IntVector_capacity" "', argument " "1"" of type '" "std::vector< int > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  result = ((std::vector< int > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_IntVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< int > *arg1 = (std::vector< int > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_IntVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_IntVector" "', argument " "1"" of type '" "std::vector< int > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< int > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *IntVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Error_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Error_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_status_set" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Error_status_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Error_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_status_get" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  result = (pj_status_t) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_title_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Error_title_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_title_set" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Error_title_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Error_title_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->title = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_title_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Error_title_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_title_get" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  result = (pj::string *) & ((arg1)->title);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Error_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_reason_set" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Error_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Error_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Error_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_reason_get" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_srcFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Error_srcFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_srcFile_set" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Error_srcFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Error_srcFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->srcFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_srcFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Error_srcFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_srcFile_get" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  result = (pj::string *) & ((arg1)->srcFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_srcLine_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Error_srcLine_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_srcLine_set" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Error_srcLine_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->srcLine = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_srcLine_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Error_srcLine_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_srcLine_get" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  result = (int) ((arg1)->srcLine);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_info__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Error_info",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_info" "', argument " "1"" of type '" "pj::Error const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Error_info" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = ((pj::Error const *)arg1)->info(arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_info__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Error_info",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Error_info" "', argument " "1"" of type '" "pj::Error const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  result = ((pj::Error const *)arg1)->info();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Error_info(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Error, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Error_info__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Error, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Error_info__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Error_info'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Error::info(bool) const\n"
    "    pj::Error::info() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_Error__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Error")) SWIG_fail;
  result = (pj::Error *)new pj::Error();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Error, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Error__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_status_t arg1 ;
  pj::string *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  pj::string *arg4 = 0 ;
  int arg5 ;
  int val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  pj::Error *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_Error",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_Error" "', argument " "1"" of type '" "pj_status_t""'");
  } 
  arg1 = static_cast< pj_status_t >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Error" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Error" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_Error" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Error" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_Error" "', argument " "4"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Error" "', argument " "4"" of type '" "pj::string const &""'"); 
    }
    arg4 = ptr;
  }
  ecode5 = SWIG_AsVal_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_Error" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  result = (pj::Error *)new pj::Error(arg1,(pj::string const &)*arg2,(pj::string const &)*arg3,(pj::string const &)*arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Error, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Error(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_Error__SWIG_0(self, args);
  }
  if (argc == 5) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_Error__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Error'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Error::Error()\n"
    "    pj::Error::Error(pj_status_t,pj::string const &,pj::string const &,pj::string const &,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Error(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Error *arg1 = (pj::Error *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Error",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Error, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Error" "', argument " "1"" of type '" "pj::Error *""'"); 
  }
  arg1 = reinterpret_cast< pj::Error * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Error_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Error, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Version_major_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Version_major_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_major_set" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Version_major_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->major = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_major_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Version_major_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_major_get" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  result = (int) ((arg1)->major);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_minor_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Version_minor_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_minor_set" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Version_minor_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->minor = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_minor_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Version_minor_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_minor_get" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  result = (int) ((arg1)->minor);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_rev_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Version_rev_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_rev_set" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Version_rev_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->rev = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_rev_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Version_rev_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_rev_get" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  result = (int) ((arg1)->rev);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_suffix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Version_suffix_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_suffix_set" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Version_suffix_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Version_suffix_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->suffix = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_suffix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Version_suffix_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_suffix_get" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  result = (pj::string *) & ((arg1)->suffix);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_full_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Version_full_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_full_set" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Version_full_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Version_full_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->full = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_full_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Version_full_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_full_get" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  result = (pj::string *) & ((arg1)->full);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_numeric_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Version_numeric_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_numeric_set" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Version_numeric_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->numeric = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Version_numeric_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Version_numeric_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Version_numeric_get" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  result = (unsigned int) ((arg1)->numeric);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Version(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_Version")) SWIG_fail;
  result = (pj::Version *)new pj::Version();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Version, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Version(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Version *arg1 = (pj::Version *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Version",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Version, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Version" "', argument " "1"" of type '" "pj::Version *""'"); 
  }
  arg1 = reinterpret_cast< pj::Version * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Version_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Version, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TimeVal_sec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimeVal *arg1 = (pj::TimeVal *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeVal_sec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeVal_sec_set" "', argument " "1"" of type '" "pj::TimeVal *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimeVal * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeVal_sec_set" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (arg1) (arg1)->sec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeVal_sec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimeVal *arg1 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeVal_sec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeVal_sec_get" "', argument " "1"" of type '" "pj::TimeVal *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimeVal * >(argp1);
  result = (long) ((arg1)->sec);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeVal_msec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimeVal *arg1 = (pj::TimeVal *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimeVal_msec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeVal_msec_set" "', argument " "1"" of type '" "pj::TimeVal *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimeVal * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TimeVal_msec_set" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (arg1) (arg1)->msec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimeVal_msec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimeVal *arg1 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimeVal_msec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimeVal_msec_get" "', argument " "1"" of type '" "pj::TimeVal *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimeVal * >(argp1);
  result = (long) ((arg1)->msec);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimeVal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimeVal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TimeVal")) SWIG_fail;
  result = (pj::TimeVal *)new pj::TimeVal();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TimeVal, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimeVal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimeVal *arg1 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimeVal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimeVal, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimeVal" "', argument " "1"" of type '" "pj::TimeVal *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimeVal * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimeVal_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TimeVal, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PersistentObject_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentObject *arg1 = (pj::PersistentObject *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentObject_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentObject_readObject" "', argument " "1"" of type '" "pj::PersistentObject *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentObject_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentObject_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentObject_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentObject *arg1 = (pj::PersistentObject *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentObject_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentObject, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentObject_writeObject" "', argument " "1"" of type '" "pj::PersistentObject const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentObject * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentObject_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentObject_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::PersistentObject const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PersistentObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentObject *arg1 = (pj::PersistentObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PersistentObject",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentObject, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PersistentObject" "', argument " "1"" of type '" "pj::PersistentObject *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentObject * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PersistentObject_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__PersistentObject, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_PersistentDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PersistentDocument",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PersistentDocument" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_loadFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_loadFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_loadFile" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_loadFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_loadFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->loadFile((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_loadString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_loadString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_loadString" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_loadString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_loadString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->loadString((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_saveFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_saveFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_saveFile" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_saveFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_saveFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->saveFile((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_saveString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_saveString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_saveString" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = (arg1)->saveString();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_getRootContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ContainerNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_getRootContainer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_getRootContainer" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  result = (pj::ContainerNode *) &((pj::PersistentDocument const *)arg1)->getRootContainer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_hasUnread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_hasUnread",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_hasUnread" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  result = (bool)((pj::PersistentDocument const *)arg1)->hasUnread();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_unreadName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_unreadName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_unreadName" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = ((pj::PersistentDocument const *)arg1)->unreadName();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readInt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readInt" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)((pj::PersistentDocument const *)arg1)->readInt((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readInt" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = (int)((pj::PersistentDocument const *)arg1)->readInt();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readInt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readInt__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readInt__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readInt(pj::string const &) const\n"
    "    pj::PersistentDocument::readInt() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readNumber__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readNumber",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readNumber" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (float)((pj::PersistentDocument const *)arg1)->readNumber((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readNumber__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readNumber",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readNumber" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = (float)((pj::PersistentDocument const *)arg1)->readNumber();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readNumber(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readNumber__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readNumber__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readNumber'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readNumber(pj::string const &) const\n"
    "    pj::PersistentDocument::readNumber() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readBool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readBool",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readBool" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (bool)((pj::PersistentDocument const *)arg1)->readBool((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readBool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readBool" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = (bool)((pj::PersistentDocument const *)arg1)->readBool();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readBool(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readBool__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readBool__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readBool'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readBool(pj::string const &) const\n"
    "    pj::PersistentDocument::readBool() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readString" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::PersistentDocument const *)arg1)->readString((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readString" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = ((pj::PersistentDocument const *)arg1)->readString();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readString__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readString__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readString(pj::string const &) const\n"
    "    pj::PersistentDocument::readString() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readStringVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::StringVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readStringVector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readStringVector" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::PersistentDocument const *)arg1)->readStringVector((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<std::string,std::allocator< std::string > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readStringVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::StringVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readStringVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readStringVector" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = ((pj::PersistentDocument const *)arg1)->readStringVector();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readStringVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readStringVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readStringVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readStringVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readStringVector(pj::string const &) const\n"
    "    pj::PersistentDocument::readStringVector() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::PersistentObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readObject" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__PersistentObject,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readObject" "', argument " "2"" of type '" "pj::PersistentObject &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readObject" "', argument " "2"" of type '" "pj::PersistentObject &""'"); 
  }
  arg2 = reinterpret_cast< pj::PersistentObject * >(argp2);
  try {
    ((pj::PersistentDocument const *)arg1)->readObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readContainer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readContainer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readContainer" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::PersistentDocument const *)arg1)->readContainer((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readContainer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readContainer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readContainer" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = ((pj::PersistentDocument const *)arg1)->readContainer();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readContainer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readContainer__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readContainer__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readContainer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readContainer(pj::string const &) const\n"
    "    pj::PersistentDocument::readContainer() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_readArray",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readArray" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_readArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_readArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::PersistentDocument const *)arg1)->readArray((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PersistentDocument_readArray",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_readArray" "', argument " "1"" of type '" "pj::PersistentDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  try {
    result = ((pj::PersistentDocument const *)arg1)->readArray();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_readArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_PersistentDocument_readArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__PersistentDocument, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_PersistentDocument_readArray__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'PersistentDocument_readArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::PersistentDocument::readArray(pj::string const &) const\n"
    "    pj::PersistentDocument::readArray() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PersistentDocument_writeNumber",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeNumber" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PersistentDocument_writeNumber" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  try {
    (arg1)->writeNumber((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PersistentDocument_writeInt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeInt" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PersistentDocument_writeInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  try {
    (arg1)->writeInt((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PersistentDocument_writeBool",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeBool" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "PersistentDocument_writeBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->writeBool((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PersistentDocument_writeString",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeString" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PersistentDocument_writeString" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeString" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    (arg1)->writeString((pj::string const &)*arg2,(pj::string const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeStringVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  pj::StringVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:PersistentDocument_writeStringVector",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeStringVector" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "PersistentDocument_writeStringVector" "', argument " "3"" of type '" "pj::StringVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeStringVector" "', argument " "3"" of type '" "pj::StringVector const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    (arg1)->writeStringVector((pj::string const &)*arg2,(pj::StringVector const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::PersistentObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeObject" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__PersistentObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeObject" "', argument " "2"" of type '" "pj::PersistentObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeObject" "', argument " "2"" of type '" "pj::PersistentObject const &""'"); 
  }
  arg2 = reinterpret_cast< pj::PersistentObject * >(argp2);
  try {
    (arg1)->writeObject((pj::PersistentObject const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeNewContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_writeNewContainer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeNewContainer" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeNewContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeNewContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (arg1)->writeNewContainer((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PersistentDocument_writeNewArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PersistentDocument *arg1 = (pj::PersistentDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PersistentDocument_writeNewArray",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PersistentDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PersistentDocument_writeNewArray" "', argument " "1"" of type '" "pj::PersistentDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::PersistentDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PersistentDocument_writeNewArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PersistentDocument_writeNewArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (arg1)->writeNewArray((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *PersistentDocument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__PersistentDocument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ContainerNode_hasUnread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_hasUnread",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_hasUnread" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  result = (bool)((pj::ContainerNode const *)arg1)->hasUnread();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_unreadName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_unreadName",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_unreadName" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = ((pj::ContainerNode const *)arg1)->unreadName();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readInt__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readInt",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readInt" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (int)((pj::ContainerNode const *)arg1)->readInt((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readInt__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readInt",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readInt" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = (int)((pj::ContainerNode const *)arg1)->readInt();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readInt(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readInt__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readInt__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readInt'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readInt(pj::string const &) const\n"
    "    pj::ContainerNode::readInt() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readNumber__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readNumber",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readNumber" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (float)((pj::ContainerNode const *)arg1)->readNumber((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_float(static_cast< float >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readNumber__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readNumber",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readNumber" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = (float)((pj::ContainerNode const *)arg1)->readNumber();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readNumber(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readNumber__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readNumber__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readNumber'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readNumber(pj::string const &) const\n"
    "    pj::ContainerNode::readNumber() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readBool__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readBool",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readBool" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (bool)((pj::ContainerNode const *)arg1)->readBool((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readBool__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readBool",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readBool" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = (bool)((pj::ContainerNode const *)arg1)->readBool();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readBool(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readBool__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readBool__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readBool'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readBool(pj::string const &) const\n"
    "    pj::ContainerNode::readBool() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readString__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readString" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::ContainerNode const *)arg1)->readString((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readString__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readString" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = ((pj::ContainerNode const *)arg1)->readString();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readString(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readString__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readString__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readString'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readString(pj::string const &) const\n"
    "    pj::ContainerNode::readString() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readStringVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::StringVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readStringVector",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readStringVector" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::ContainerNode const *)arg1)->readStringVector((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<std::string,std::allocator< std::string > > >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readStringVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::StringVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readStringVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readStringVector" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = ((pj::ContainerNode const *)arg1)->readStringVector();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<std::string,std::allocator< std::string > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readStringVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readStringVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readStringVector__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readStringVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readStringVector(pj::string const &) const\n"
    "    pj::ContainerNode::readStringVector() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::PersistentObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readObject" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__PersistentObject,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readObject" "', argument " "2"" of type '" "pj::PersistentObject &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readObject" "', argument " "2"" of type '" "pj::PersistentObject &""'"); 
  }
  arg2 = reinterpret_cast< pj::PersistentObject * >(argp2);
  try {
    ((pj::ContainerNode const *)arg1)->readObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readContainer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readContainer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readContainer" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::ContainerNode const *)arg1)->readContainer((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readContainer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readContainer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readContainer" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = ((pj::ContainerNode const *)arg1)->readContainer();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readContainer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readContainer__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readContainer__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readContainer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readContainer(pj::string const &) const\n"
    "    pj::ContainerNode::readContainer() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readArray__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_readArray",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readArray" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_readArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_readArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = ((pj::ContainerNode const *)arg1)->readArray((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readArray__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ContainerNode_readArray",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_readArray" "', argument " "1"" of type '" "pj::ContainerNode const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  try {
    result = ((pj::ContainerNode const *)arg1)->readArray();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_readArray(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ContainerNode_readArray__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ContainerNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ContainerNode_readArray__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ContainerNode_readArray'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ContainerNode::readArray(pj::string const &) const\n"
    "    pj::ContainerNode::readArray() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeNumber(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContainerNode_writeNumber",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeNumber" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeNumber" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContainerNode_writeNumber" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  try {
    (arg1)->writeNumber((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContainerNode_writeInt",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeInt" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeInt" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContainerNode_writeInt" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  try {
    (arg1)->writeInt((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeBool(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContainerNode_writeBool",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeBool" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeBool" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ContainerNode_writeBool" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->writeBool((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContainerNode_writeString",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeString" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContainerNode_writeString" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeString" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    (arg1)->writeString((pj::string const &)*arg2,(pj::string const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeStringVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  pj::StringVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ContainerNode_writeStringVector",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeStringVector" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeStringVector" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ContainerNode_writeStringVector" "', argument " "3"" of type '" "pj::StringVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeStringVector" "', argument " "3"" of type '" "pj::StringVector const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    (arg1)->writeStringVector((pj::string const &)*arg2,(pj::StringVector const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::PersistentObject *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeObject" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__PersistentObject,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeObject" "', argument " "2"" of type '" "pj::PersistentObject const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeObject" "', argument " "2"" of type '" "pj::PersistentObject const &""'"); 
  }
  arg2 = reinterpret_cast< pj::PersistentObject * >(argp2);
  try {
    (arg1)->writeObject((pj::PersistentObject const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeNewContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_writeNewContainer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeNewContainer" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeNewContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeNewContainer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (arg1)->writeNewContainer((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ContainerNode_writeNewArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::ContainerNode result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ContainerNode_writeNewArray",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ContainerNode_writeNewArray" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ContainerNode_writeNewArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ContainerNode_writeNewArray" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (arg1)->writeNewArray((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ContainerNode(static_cast< const pj::ContainerNode& >(result))), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ContainerNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ContainerNode")) SWIG_fail;
  result = (pj::ContainerNode *)new pj::ContainerNode();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ContainerNode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ContainerNode *arg1 = (pj::ContainerNode *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ContainerNode",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ContainerNode, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ContainerNode" "', argument " "1"" of type '" "pj::ContainerNode *""'"); 
  }
  arg1 = reinterpret_cast< pj::ContainerNode * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ContainerNode_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__ContainerNode, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AuthCredInfo_scheme_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_scheme_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_scheme_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_scheme_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_scheme_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->scheme = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_scheme_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_scheme_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_scheme_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->scheme);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_realm_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_realm_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_realm_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_realm_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_realm_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->realm = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_realm_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_realm_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_realm_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->realm);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_username_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_username_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_username_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_username_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_username_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->username = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_username_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_username_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_username_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->username);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_dataType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_dataType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_dataType_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfo_dataType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->dataType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_dataType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_dataType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_dataType_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (int) ((arg1)->dataType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_data_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_data_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_data_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_data_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_data_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->data = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_data_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_data_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->data);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_akaK_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_akaK_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_akaK_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_akaK_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_akaK_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->akaK = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_akaK_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_akaK_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_akaK_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->akaK);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_akaOp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_akaOp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_akaOp_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_akaOp_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_akaOp_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->akaOp = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_akaOp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_akaOp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_akaOp_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->akaOp);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_akaAmf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_akaAmf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_akaAmf_set" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_akaAmf_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_akaAmf_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->akaAmf = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_akaAmf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfo_akaAmf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_akaAmf_get" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  result = (pj::string *) & ((arg1)->akaAmf);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfo__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AuthCredInfo")) SWIG_fail;
  result = (pj::AuthCredInfo *)new pj::AuthCredInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AuthCredInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfo__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::string *arg1 = 0 ;
  pj::string *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  int arg4 ;
  pj::string arg5 ;
  int res1 = SWIG_OLDOBJ ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  pj::AuthCredInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:new_AuthCredInfo",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  {
    std::string *ptr = (std::string *)0;
    res1 = SWIG_AsPtr_std_string(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AuthCredInfo" "', argument " "1"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AuthCredInfo" "', argument " "1"" of type '" "pj::string const &""'"); 
    }
    arg1 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AuthCredInfo" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AuthCredInfo" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_AuthCredInfo" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AuthCredInfo" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_AuthCredInfo" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "new_AuthCredInfo" "', argument " "5"" of type '" "pj::string const""'"); 
    }
    arg5 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  result = (pj::AuthCredInfo *)new pj::AuthCredInfo((pj::string const &)*arg1,(pj::string const &)*arg2,(pj::string const &)*arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AuthCredInfo, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfo(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_AuthCredInfo__SWIG_0(self, args);
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_AsPtr_std_string(argv[0], (std::string**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_new_AuthCredInfo__SWIG_1(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_AuthCredInfo'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AuthCredInfo::AuthCredInfo()\n"
    "    pj::AuthCredInfo::AuthCredInfo(pj::string const &,pj::string const &,pj::string const &,int const,pj::string const)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_readObject" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfo_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfo_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfo_writeObject" "', argument " "1"" of type '" "pj::AuthCredInfo const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfo_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfo_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AuthCredInfo const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AuthCredInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AuthCredInfo *arg1 = (pj::AuthCredInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AuthCredInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AuthCredInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AuthCredInfo" "', argument " "1"" of type '" "pj::AuthCredInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AuthCredInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AuthCredInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AuthCredInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TlsConfig_CaListFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_CaListFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_CaListFile_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_CaListFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TlsConfig_CaListFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->CaListFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_CaListFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_CaListFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_CaListFile_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj::string *) & ((arg1)->CaListFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_certFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_certFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_certFile_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_certFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TlsConfig_certFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->certFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_certFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_certFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_certFile_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj::string *) & ((arg1)->certFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_privKeyFile_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_privKeyFile_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_privKeyFile_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_privKeyFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TlsConfig_privKeyFile_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->privKeyFile = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_privKeyFile_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_privKeyFile_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_privKeyFile_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj::string *) & ((arg1)->privKeyFile);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_password_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_password_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_password_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_password_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TlsConfig_password_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->password = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_password_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_password_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_password_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj::string *) & ((arg1)->password);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_method_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pjsip_ssl_method arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_method_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_method_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_method_set" "', argument " "2"" of type '" "pjsip_ssl_method""'");
  } 
  arg2 = static_cast< pjsip_ssl_method >(val2);
  if (arg1) (arg1)->method = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_method_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_ssl_method result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_method_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_method_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pjsip_ssl_method) ((arg1)->method);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_ciphers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::IntVector *arg2 = (pj::IntVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_ciphers_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_ciphers_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_ciphers_set" "', argument " "2"" of type '" "pj::IntVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::IntVector * >(argp2);
  if (arg1) (arg1)->ciphers = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_ciphers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::IntVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_ciphers_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_ciphers_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj::IntVector *)& ((arg1)->ciphers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_verifyServer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_verifyServer_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_verifyServer_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_verifyServer_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->verifyServer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_verifyServer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_verifyServer_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_verifyServer_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (bool) ((arg1)->verifyServer);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_verifyClient_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_verifyClient_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_verifyClient_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_verifyClient_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->verifyClient = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_verifyClient_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_verifyClient_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_verifyClient_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (bool) ((arg1)->verifyClient);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_requireClientCert_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_requireClientCert_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_requireClientCert_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_requireClientCert_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->requireClientCert = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_requireClientCert_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_requireClientCert_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_requireClientCert_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (bool) ((arg1)->requireClientCert);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_msecTimeout_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_msecTimeout_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_msecTimeout_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_msecTimeout_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->msecTimeout = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_msecTimeout_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_msecTimeout_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_msecTimeout_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (unsigned int) ((arg1)->msecTimeout);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_qosType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj_qos_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_qosType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_qosType_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_qosType_set" "', argument " "2"" of type '" "pj_qos_type""'");
  } 
  arg2 = static_cast< pj_qos_type >(val2);
  if (arg1) (arg1)->qosType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_qosType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_qos_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_qosType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_qosType_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj_qos_type) ((arg1)->qosType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_qosParams_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj_qos_params *arg2 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_qosParams_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_qosParams_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_qosParams_set" "', argument " "2"" of type '" "pj_qos_params *""'"); 
  }
  arg2 = reinterpret_cast< pj_qos_params * >(argp2);
  if (arg1) (arg1)->qosParams = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_qosParams_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_qos_params *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_qosParams_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_qosParams_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (pj_qos_params *)& ((arg1)->qosParams);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj_qos_params, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_qosIgnoreError_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_qosIgnoreError_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_qosIgnoreError_set" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TlsConfig_qosIgnoreError_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->qosIgnoreError = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_qosIgnoreError_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TlsConfig_qosIgnoreError_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_qosIgnoreError_get" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  result = (bool) ((arg1)->qosIgnoreError);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TlsConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TlsConfig")) SWIG_fail;
  result = (pj::TlsConfig *)new pj::TlsConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TlsConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_readObject" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TlsConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TlsConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TlsConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TlsConfig_writeObject" "', argument " "1"" of type '" "pj::TlsConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TlsConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TlsConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::TlsConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TlsConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TlsConfig *arg1 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TlsConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TlsConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TlsConfig" "', argument " "1"" of type '" "pj::TlsConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TlsConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TlsConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TlsConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TransportConfig_port_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_port_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_port_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportConfig_port_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->port = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_port_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_port_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_port_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (unsigned int) ((arg1)->port);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_portRange_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_portRange_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_portRange_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportConfig_portRange_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->portRange = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_portRange_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_portRange_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_portRange_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (unsigned int) ((arg1)->portRange);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_publicAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_publicAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_publicAddress_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportConfig_publicAddress_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportConfig_publicAddress_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->publicAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_publicAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_publicAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_publicAddress_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (pj::string *) & ((arg1)->publicAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_boundAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_boundAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_boundAddress_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportConfig_boundAddress_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportConfig_boundAddress_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->boundAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_boundAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_boundAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_boundAddress_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (pj::string *) & ((arg1)->boundAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_tlsConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj::TlsConfig *arg2 = (pj::TlsConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_tlsConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_tlsConfig_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportConfig_tlsConfig_set" "', argument " "2"" of type '" "pj::TlsConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::TlsConfig * >(argp2);
  if (arg1) (arg1)->tlsConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_tlsConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TlsConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_tlsConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_tlsConfig_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (pj::TlsConfig *)& ((arg1)->tlsConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TlsConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_qosType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj_qos_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_qosType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_qosType_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportConfig_qosType_set" "', argument " "2"" of type '" "pj_qos_type""'");
  } 
  arg2 = static_cast< pj_qos_type >(val2);
  if (arg1) (arg1)->qosType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_qosType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_qos_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_qosType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_qosType_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (pj_qos_type) ((arg1)->qosType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_qosParams_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj_qos_params *arg2 = (pj_qos_params *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_qosParams_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_qosParams_set" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj_qos_params, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportConfig_qosParams_set" "', argument " "2"" of type '" "pj_qos_params *""'"); 
  }
  arg2 = reinterpret_cast< pj_qos_params * >(argp2);
  if (arg1) (arg1)->qosParams = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_qosParams_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_qos_params *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportConfig_qosParams_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_qosParams_get" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  result = (pj_qos_params *)& ((arg1)->qosParams);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj_qos_params, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TransportConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TransportConfig")) SWIG_fail;
  result = (pj::TransportConfig *)new pj::TransportConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TransportConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_readObject" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportConfig_writeObject" "', argument " "1"" of type '" "pj::TransportConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::TransportConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TransportConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportConfig *arg1 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TransportConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TransportConfig" "', argument " "1"" of type '" "pj::TransportConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TransportConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TransportConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TransportInfo_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  pj::TransportId arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_id_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_id_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportInfo_id_set" "', argument " "2"" of type '" "pj::TransportId""'");
  } 
  arg2 = static_cast< pj::TransportId >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TransportId result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_id_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_id_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (pj::TransportId) ((arg1)->id);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  pjsip_transport_type_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_type_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportInfo_type_set" "', argument " "2"" of type '" "pjsip_transport_type_e""'");
  } 
  arg2 = static_cast< pjsip_transport_type_e >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_transport_type_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_type_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (pjsip_transport_type_e) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_typeName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_typeName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_typeName_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportInfo_typeName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportInfo_typeName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->typeName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_typeName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_typeName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_typeName_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (pj::string *) & ((arg1)->typeName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_info_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_info_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_info_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportInfo_info_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportInfo_info_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->info = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_info_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_info_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_info_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (pj::string *) & ((arg1)->info);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_flags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_flags_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportInfo_flags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_flags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_flags_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (unsigned int) ((arg1)->flags);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_localAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_localAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_localAddress_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportInfo_localAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportInfo_localAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->localAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_localAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_localAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_localAddress_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->localAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_localName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_localName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_localName_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TransportInfo_localName_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "TransportInfo_localName_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->localName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_localName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_localName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_localName_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->localName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_usageCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TransportInfo_usageCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_usageCount_set" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TransportInfo_usageCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->usageCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TransportInfo_usageCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TransportInfo_usageCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TransportInfo_usageCount_get" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  result = (unsigned int) ((arg1)->usageCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TransportInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TransportInfo")) SWIG_fail;
  result = (pj::TransportInfo *)new pj::TransportInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TransportInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TransportInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TransportInfo *arg1 = (pj::TransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TransportInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TransportInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TransportInfo" "', argument " "1"" of type '" "pj::TransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::TransportInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TransportInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TransportInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipRxData_info_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipRxData_info_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_info_set" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipRxData_info_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipRxData_info_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->info = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_info_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipRxData_info_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_info_get" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  result = (pj::string *) & ((arg1)->info);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_wholeMsg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipRxData_wholeMsg_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_wholeMsg_set" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipRxData_wholeMsg_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipRxData_wholeMsg_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->wholeMsg = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_wholeMsg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipRxData_wholeMsg_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_wholeMsg_get" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  result = (pj::string *) & ((arg1)->wholeMsg);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_srcAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipRxData_srcAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_srcAddress_set" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipRxData_srcAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipRxData_srcAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->srcAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_srcAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipRxData_srcAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_srcAddress_get" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->srcAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_pjRxData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipRxData_pjRxData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_pjRxData_set" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipRxData_pjRxData_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->pjRxData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipRxData_pjRxData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipRxData_pjRxData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipRxData_pjRxData_get" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  result = (void *) ((arg1)->pjRxData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipRxData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipRxData")) SWIG_fail;
  result = (pj::SipRxData *)new pj::SipRxData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipRxData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipRxData *arg1 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipRxData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipRxData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipRxData" "', argument " "1"" of type '" "pj::SipRxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipRxData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipRxData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipRxData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipTxData_info_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxData_info_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_info_set" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxData_info_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTxData_info_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->info = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_info_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxData_info_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_info_get" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  result = (pj::string *) & ((arg1)->info);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_wholeMsg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxData_wholeMsg_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_wholeMsg_set" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxData_wholeMsg_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTxData_wholeMsg_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->wholeMsg = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_wholeMsg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxData_wholeMsg_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_wholeMsg_get" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  result = (pj::string *) & ((arg1)->wholeMsg);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_dstAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxData_dstAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_dstAddress_set" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxData_dstAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTxData_dstAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->dstAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_dstAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxData_dstAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_dstAddress_get" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->dstAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_pjTxData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxData_pjTxData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_pjTxData_set" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxData_pjTxData_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->pjTxData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxData_pjTxData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxData_pjTxData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxData_pjTxData_get" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  result = (void *) ((arg1)->pjTxData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipTxData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipTxData")) SWIG_fail;
  result = (pj::SipTxData *)new pj::SipTxData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxData, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipTxData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxData *arg1 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipTxData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxData, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipTxData" "', argument " "1"" of type '" "pj::SipTxData *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxData * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipTxData_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipTxData, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipTransaction_role_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  pjsip_role_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_role_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_role_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipTransaction_role_set" "', argument " "2"" of type '" "pjsip_role_e""'");
  } 
  arg2 = static_cast< pjsip_role_e >(val2);
  if (arg1) (arg1)->role = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_role_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_role_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_role_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_role_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (pjsip_role_e) ((arg1)->role);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_method_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_method_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_method_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTransaction_method_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTransaction_method_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->method = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_method_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_method_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_method_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (pj::string *) & ((arg1)->method);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_statusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_statusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_statusCode_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipTransaction_statusCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->statusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_statusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_statusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_statusCode_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (int) ((arg1)->statusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_statusText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_statusText_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_statusText_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTransaction_statusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTransaction_statusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->statusText = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_statusText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_statusText_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_statusText_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (pj::string *) & ((arg1)->statusText);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  pjsip_tsx_state_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_state_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipTransaction_state_set" "', argument " "2"" of type '" "pjsip_tsx_state_e""'");
  } 
  arg2 = static_cast< pjsip_tsx_state_e >(val2);
  if (arg1) (arg1)->state = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_state_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_tsx_state_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_state_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_state_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (pjsip_tsx_state_e) ((arg1)->state);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_lastTx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  pj::SipTxData *arg2 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_lastTx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_lastTx_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTransaction_lastTx_set" "', argument " "2"" of type '" "pj::SipTxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxData * >(argp2);
  if (arg1) (arg1)->lastTx = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_lastTx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_lastTx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_lastTx_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (pj::SipTxData *)& ((arg1)->lastTx);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_pjTransaction_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTransaction_pjTransaction_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_pjTransaction_set" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTransaction_pjTransaction_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->pjTransaction = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTransaction_pjTransaction_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTransaction_pjTransaction_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTransaction_pjTransaction_get" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  result = (void *) ((arg1)->pjTransaction);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipTransaction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipTransaction")) SWIG_fail;
  result = (pj::SipTransaction *)new pj::SipTransaction();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTransaction, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipTransaction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTransaction *arg1 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipTransaction",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTransaction, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipTransaction" "', argument " "1"" of type '" "pj::SipTransaction *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTransaction * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipTransaction_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipTransaction, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TimerEvent_entry_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimerEvent *arg1 = (pj::TimerEvent *) 0 ;
  pj::TimerEntry arg2 = (pj::TimerEntry) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TimerEvent_entry_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimerEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimerEvent_entry_set" "', argument " "1"" of type '" "pj::TimerEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimerEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TimerEvent_entry_set" "', argument " "2"" of type '" "pj::TimerEntry""'"); 
  }
  if (arg1) (arg1)->entry = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TimerEvent_entry_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimerEvent *arg1 = (pj::TimerEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TimerEntry result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TimerEvent_entry_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimerEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TimerEvent_entry_get" "', argument " "1"" of type '" "pj::TimerEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimerEvent * >(argp1);
  result = (pj::TimerEntry) ((arg1)->entry);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TimerEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimerEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TimerEvent")) SWIG_fail;
  result = (pj::TimerEvent *)new pj::TimerEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TimerEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TimerEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TimerEvent *arg1 = (pj::TimerEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TimerEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TimerEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TimerEvent" "', argument " "1"" of type '" "pj::TimerEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TimerEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TimerEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TimerEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TsxStateEvent_tsx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  pj::SipTransaction *arg2 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TsxStateEvent_tsx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TsxStateEvent_tsx_set" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TsxStateEvent_tsx_set" "', argument " "2"" of type '" "pj::SipTransaction *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTransaction * >(argp2);
  if (arg1) (arg1)->tsx = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TsxStateEvent_tsx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTransaction *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TsxStateEvent_tsx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TsxStateEvent_tsx_get" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  result = (pj::SipTransaction *)& ((arg1)->tsx);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TsxStateEvent_prevState_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  pjsip_tsx_state_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TsxStateEvent_prevState_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TsxStateEvent_prevState_set" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TsxStateEvent_prevState_set" "', argument " "2"" of type '" "pjsip_tsx_state_e""'");
  } 
  arg2 = static_cast< pjsip_tsx_state_e >(val2);
  if (arg1) (arg1)->prevState = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TsxStateEvent_prevState_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_tsx_state_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TsxStateEvent_prevState_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TsxStateEvent_prevState_get" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  result = (pjsip_tsx_state_e) ((arg1)->prevState);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TsxStateEvent_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  pjsip_event_id_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TsxStateEvent_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TsxStateEvent_type_set" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "TsxStateEvent_type_set" "', argument " "2"" of type '" "pjsip_event_id_e""'");
  } 
  arg2 = static_cast< pjsip_event_id_e >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TsxStateEvent_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_event_id_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TsxStateEvent_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TsxStateEvent_type_get" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  result = (pjsip_event_id_e) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TsxStateEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TsxStateEvent")) SWIG_fail;
  result = (pj::TsxStateEvent *)new pj::TsxStateEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TsxStateEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TsxStateEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TsxStateEvent *arg1 = (pj::TsxStateEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TsxStateEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TsxStateEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TsxStateEvent" "', argument " "1"" of type '" "pj::TsxStateEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TsxStateEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TsxStateEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TsxStateEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TxMsgEvent_tdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxMsgEvent *arg1 = (pj::TxMsgEvent *) 0 ;
  pj::SipTxData *arg2 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TxMsgEvent_tdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxMsgEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TxMsgEvent_tdata_set" "', argument " "1"" of type '" "pj::TxMsgEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxMsgEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TxMsgEvent_tdata_set" "', argument " "2"" of type '" "pj::SipTxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxData * >(argp2);
  if (arg1) (arg1)->tdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TxMsgEvent_tdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxMsgEvent *arg1 = (pj::TxMsgEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TxMsgEvent_tdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxMsgEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TxMsgEvent_tdata_get" "', argument " "1"" of type '" "pj::TxMsgEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxMsgEvent * >(argp1);
  result = (pj::SipTxData *)& ((arg1)->tdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TxMsgEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxMsgEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TxMsgEvent")) SWIG_fail;
  result = (pj::TxMsgEvent *)new pj::TxMsgEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TxMsgEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TxMsgEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxMsgEvent *arg1 = (pj::TxMsgEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TxMsgEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxMsgEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TxMsgEvent" "', argument " "1"" of type '" "pj::TxMsgEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxMsgEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TxMsgEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TxMsgEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_TxErrorEvent_tdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxErrorEvent *arg1 = (pj::TxErrorEvent *) 0 ;
  pj::SipTxData *arg2 = (pj::SipTxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TxErrorEvent_tdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxErrorEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TxErrorEvent_tdata_set" "', argument " "1"" of type '" "pj::TxErrorEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxErrorEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TxErrorEvent_tdata_set" "', argument " "2"" of type '" "pj::SipTxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxData * >(argp2);
  if (arg1) (arg1)->tdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TxErrorEvent_tdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxErrorEvent *arg1 = (pj::TxErrorEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TxErrorEvent_tdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxErrorEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TxErrorEvent_tdata_get" "', argument " "1"" of type '" "pj::TxErrorEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxErrorEvent * >(argp1);
  result = (pj::SipTxData *)& ((arg1)->tdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TxErrorEvent_tsx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxErrorEvent *arg1 = (pj::TxErrorEvent *) 0 ;
  pj::SipTransaction *arg2 = (pj::SipTransaction *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:TxErrorEvent_tsx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxErrorEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TxErrorEvent_tsx_set" "', argument " "1"" of type '" "pj::TxErrorEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxErrorEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "TxErrorEvent_tsx_set" "', argument " "2"" of type '" "pj::SipTransaction *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTransaction * >(argp2);
  if (arg1) (arg1)->tsx = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_TxErrorEvent_tsx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxErrorEvent *arg1 = (pj::TxErrorEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTransaction *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:TxErrorEvent_tsx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxErrorEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "TxErrorEvent_tsx_get" "', argument " "1"" of type '" "pj::TxErrorEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxErrorEvent * >(argp1);
  result = (pj::SipTransaction *)& ((arg1)->tsx);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTransaction, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_TxErrorEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxErrorEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_TxErrorEvent")) SWIG_fail;
  result = (pj::TxErrorEvent *)new pj::TxErrorEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TxErrorEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_TxErrorEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::TxErrorEvent *arg1 = (pj::TxErrorEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_TxErrorEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__TxErrorEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_TxErrorEvent" "', argument " "1"" of type '" "pj::TxErrorEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::TxErrorEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *TxErrorEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__TxErrorEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RxMsgEvent_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RxMsgEvent *arg1 = (pj::RxMsgEvent *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RxMsgEvent_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RxMsgEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RxMsgEvent_rdata_set" "', argument " "1"" of type '" "pj::RxMsgEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::RxMsgEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RxMsgEvent_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RxMsgEvent_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RxMsgEvent *arg1 = (pj::RxMsgEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RxMsgEvent_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RxMsgEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RxMsgEvent_rdata_get" "', argument " "1"" of type '" "pj::RxMsgEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::RxMsgEvent * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RxMsgEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RxMsgEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RxMsgEvent")) SWIG_fail;
  result = (pj::RxMsgEvent *)new pj::RxMsgEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RxMsgEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RxMsgEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RxMsgEvent *arg1 = (pj::RxMsgEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RxMsgEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RxMsgEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RxMsgEvent" "', argument " "1"" of type '" "pj::RxMsgEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::RxMsgEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RxMsgEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__RxMsgEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_UserEvent_user1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  pj::GenericData arg2 = (pj::GenericData) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UserEvent_user1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user1_set" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UserEvent_user1_set" "', argument " "2"" of type '" "pj::GenericData""'"); 
  }
  if (arg1) (arg1)->user1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::GenericData result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UserEvent_user1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user1_get" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  result = (pj::GenericData) ((arg1)->user1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  pj::GenericData arg2 = (pj::GenericData) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UserEvent_user2_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user2_set" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UserEvent_user2_set" "', argument " "2"" of type '" "pj::GenericData""'"); 
  }
  if (arg1) (arg1)->user2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::GenericData result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UserEvent_user2_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user2_get" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  result = (pj::GenericData) ((arg1)->user2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user3_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  pj::GenericData arg2 = (pj::GenericData) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UserEvent_user3_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user3_set" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UserEvent_user3_set" "', argument " "2"" of type '" "pj::GenericData""'"); 
  }
  if (arg1) (arg1)->user3 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user3_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::GenericData result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UserEvent_user3_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user3_get" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  result = (pj::GenericData) ((arg1)->user3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user4_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  pj::GenericData arg2 = (pj::GenericData) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UserEvent_user4_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user4_set" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UserEvent_user4_set" "', argument " "2"" of type '" "pj::GenericData""'"); 
  }
  if (arg1) (arg1)->user4 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UserEvent_user4_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::GenericData result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UserEvent_user4_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UserEvent_user4_get" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  result = (pj::GenericData) ((arg1)->user4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UserEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_UserEvent")) SWIG_fail;
  result = (pj::UserEvent *)new pj::UserEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__UserEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UserEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UserEvent *arg1 = (pj::UserEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UserEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UserEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UserEvent" "', argument " "1"" of type '" "pj::UserEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::UserEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UserEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__UserEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipEvent_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipEvent *arg1 = (pj::SipEvent *) 0 ;
  pjsip_event_id_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipEvent_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipEvent_type_set" "', argument " "1"" of type '" "pj::SipEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipEvent * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipEvent_type_set" "', argument " "2"" of type '" "pjsip_event_id_e""'");
  } 
  arg2 = static_cast< pjsip_event_id_e >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipEvent_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipEvent *arg1 = (pj::SipEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_event_id_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipEvent_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipEvent_type_get" "', argument " "1"" of type '" "pj::SipEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipEvent * >(argp1);
  result = (pjsip_event_id_e) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipEvent_pjEvent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipEvent *arg1 = (pj::SipEvent *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipEvent_pjEvent_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipEvent_pjEvent_set" "', argument " "1"" of type '" "pj::SipEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipEvent_pjEvent_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->pjEvent = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipEvent_pjEvent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipEvent *arg1 = (pj::SipEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipEvent_pjEvent_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipEvent_pjEvent_get" "', argument " "1"" of type '" "pj::SipEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipEvent * >(argp1);
  result = (void *) ((arg1)->pjEvent);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipEvent")) SWIG_fail;
  result = (pj::SipEvent *)new pj::SipEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipEvent *arg1 = (pj::SipEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipEvent" "', argument " "1"" of type '" "pj::SipEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipMediaType_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMediaType *arg1 = (pj::SipMediaType *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMediaType_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMediaType_type_set" "', argument " "1"" of type '" "pj::SipMediaType *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMediaType * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMediaType_type_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMediaType_type_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->type = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMediaType_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMediaType *arg1 = (pj::SipMediaType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMediaType_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMediaType_type_get" "', argument " "1"" of type '" "pj::SipMediaType *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMediaType * >(argp1);
  result = (pj::string *) & ((arg1)->type);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMediaType_subType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMediaType *arg1 = (pj::SipMediaType *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMediaType_subType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMediaType_subType_set" "', argument " "1"" of type '" "pj::SipMediaType *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMediaType * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMediaType_subType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMediaType_subType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->subType = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMediaType_subType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMediaType *arg1 = (pj::SipMediaType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMediaType_subType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMediaType_subType_get" "', argument " "1"" of type '" "pj::SipMediaType *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMediaType * >(argp1);
  result = (pj::string *) & ((arg1)->subType);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipMediaType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMediaType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipMediaType")) SWIG_fail;
  result = (pj::SipMediaType *)new pj::SipMediaType();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMediaType, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipMediaType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMediaType *arg1 = (pj::SipMediaType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipMediaType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMediaType, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipMediaType" "', argument " "1"" of type '" "pj::SipMediaType *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMediaType * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipMediaType_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipMediaType, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipHeader_hName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipHeader *arg1 = (pj::SipHeader *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeader_hName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeader_hName_set" "', argument " "1"" of type '" "pj::SipHeader *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipHeader * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipHeader_hName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeader_hName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->hName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeader_hName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipHeader *arg1 = (pj::SipHeader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeader_hName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeader_hName_get" "', argument " "1"" of type '" "pj::SipHeader *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipHeader * >(argp1);
  result = (pj::string *) & ((arg1)->hName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeader_hValue_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipHeader *arg1 = (pj::SipHeader *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeader_hValue_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeader_hValue_set" "', argument " "1"" of type '" "pj::SipHeader *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipHeader * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipHeader_hValue_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeader_hValue_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->hValue = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeader_hValue_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipHeader *arg1 = (pj::SipHeader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeader_hValue_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeader_hValue_get" "', argument " "1"" of type '" "pj::SipHeader *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipHeader * >(argp1);
  result = (pj::string *) & ((arg1)->hValue);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipHeader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipHeader *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipHeader")) SWIG_fail;
  result = (pj::SipHeader *)new pj::SipHeader();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipHeader, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipHeader(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipHeader *arg1 = (pj::SipHeader *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipHeader",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipHeader, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipHeader" "', argument " "1"" of type '" "pj::SipHeader *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipHeader * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipHeader_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipHeader, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipMultipartPart_headers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  pj::SipHeaderVector *arg2 = (pj::SipHeaderVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPart_headers_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPart_headers_set" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMultipartPart_headers_set" "', argument " "2"" of type '" "pj::SipHeaderVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipHeaderVector * >(argp2);
  if (arg1) (arg1)->headers = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPart_headers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipHeaderVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPart_headers_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPart_headers_get" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  result = (pj::SipHeaderVector *)& ((arg1)->headers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPart_contentType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  pj::SipMediaType *arg2 = (pj::SipMediaType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPart_contentType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPart_contentType_set" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMultipartPart_contentType_set" "', argument " "2"" of type '" "pj::SipMediaType *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipMediaType * >(argp2);
  if (arg1) (arg1)->contentType = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPart_contentType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipMediaType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPart_contentType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPart_contentType_get" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  result = (pj::SipMediaType *)& ((arg1)->contentType);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPart_body_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPart_body_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPart_body_set" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMultipartPart_body_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPart_body_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->body = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPart_body_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPart_body_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPart_body_get" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  result = (pj::string *) & ((arg1)->body);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipMultipartPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipMultipartPart")) SWIG_fail;
  result = (pj::SipMultipartPart *)new pj::SipMultipartPart();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMultipartPart, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipMultipartPart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipMultipartPart *arg1 = (pj::SipMultipartPart *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipMultipartPart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipMultipartPart, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipMultipartPart" "', argument " "1"" of type '" "pj::SipMultipartPart *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipMultipartPart * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipMultipartPart_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipMultipartPart, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipTxOption_targetUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxOption_targetUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_targetUri_set" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxOption_targetUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTxOption_targetUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->targetUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_targetUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_targetUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_targetUri_get" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (pj::string *) & ((arg1)->targetUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_headers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  pj::SipHeaderVector *arg2 = (pj::SipHeaderVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxOption_headers_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_headers_set" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxOption_headers_set" "', argument " "2"" of type '" "pj::SipHeaderVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipHeaderVector * >(argp2);
  if (arg1) (arg1)->headers = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_headers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipHeaderVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_headers_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_headers_get" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (pj::SipHeaderVector *)& ((arg1)->headers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_contentType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxOption_contentType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_contentType_set" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxOption_contentType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTxOption_contentType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contentType = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_contentType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_contentType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_contentType_get" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (pj::string *) & ((arg1)->contentType);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_msgBody_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxOption_msgBody_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_msgBody_set" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxOption_msgBody_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipTxOption_msgBody_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->msgBody = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_msgBody_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_msgBody_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_msgBody_get" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (pj::string *) & ((arg1)->msgBody);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_multipartContentType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  pj::SipMediaType *arg2 = (pj::SipMediaType *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxOption_multipartContentType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_multipartContentType_set" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxOption_multipartContentType_set" "', argument " "2"" of type '" "pj::SipMediaType *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipMediaType * >(argp2);
  if (arg1) (arg1)->multipartContentType = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_multipartContentType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipMediaType *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_multipartContentType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_multipartContentType_get" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (pj::SipMediaType *)& ((arg1)->multipartContentType);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMediaType, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_multipartParts_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  pj::SipMultipartPartVector *arg2 = (pj::SipMultipartPartVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipTxOption_multipartParts_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_multipartParts_set" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipTxOption_multipartParts_set" "', argument " "2"" of type '" "pj::SipMultipartPartVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipMultipartPartVector * >(argp2);
  if (arg1) (arg1)->multipartParts = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_multipartParts_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipMultipartPartVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_multipartParts_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_multipartParts_get" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (pj::SipMultipartPartVector *)& ((arg1)->multipartParts);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipTxOption_isEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipTxOption_isEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipTxOption_isEmpty" "', argument " "1"" of type '" "pj::SipTxOption const *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  result = (bool)((pj::SipTxOption const *)arg1)->isEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipTxOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipTxOption")) SWIG_fail;
  result = (pj::SipTxOption *)new pj::SipTxOption();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipTxOption(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SipTxOption *arg1 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipTxOption",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SipTxOption, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipTxOption" "', argument " "1"" of type '" "pj::SipTxOption *""'"); 
  }
  arg1 = reinterpret_cast< pj::SipTxOption * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipTxOption_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SipTxOption, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SendInstantMessageParam_contentType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SendInstantMessageParam_contentType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_contentType_set" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SendInstantMessageParam_contentType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SendInstantMessageParam_contentType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contentType = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_contentType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SendInstantMessageParam_contentType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_contentType_get" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->contentType);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_content_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SendInstantMessageParam_content_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_content_set" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SendInstantMessageParam_content_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SendInstantMessageParam_content_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->content = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_content_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SendInstantMessageParam_content_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_content_get" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->content);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_txOption_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  pj::SipTxOption *arg2 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SendInstantMessageParam_txOption_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_txOption_set" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SendInstantMessageParam_txOption_set" "', argument " "2"" of type '" "pj::SipTxOption *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxOption * >(argp2);
  if (arg1) (arg1)->txOption = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_txOption_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SendInstantMessageParam_txOption_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_txOption_get" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  result = (pj::SipTxOption *)& ((arg1)->txOption);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_userData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SendInstantMessageParam_userData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_userData_set" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SendInstantMessageParam_userData_set" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  if (arg1) (arg1)->userData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendInstantMessageParam_userData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::Token result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SendInstantMessageParam_userData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendInstantMessageParam_userData_get" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  result = (pj::Token) ((arg1)->userData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SendInstantMessageParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SendInstantMessageParam")) SWIG_fail;
  result = (pj::SendInstantMessageParam *)new pj::SendInstantMessageParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SendInstantMessageParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SendInstantMessageParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendInstantMessageParam *arg1 = (pj::SendInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SendInstantMessageParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendInstantMessageParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SendInstantMessageParam" "', argument " "1"" of type '" "pj::SendInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendInstantMessageParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SendInstantMessageParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SendInstantMessageParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SendTypingIndicationParam_isTyping_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendTypingIndicationParam *arg1 = (pj::SendTypingIndicationParam *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SendTypingIndicationParam_isTyping_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendTypingIndicationParam_isTyping_set" "', argument " "1"" of type '" "pj::SendTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SendTypingIndicationParam_isTyping_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->isTyping = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendTypingIndicationParam_isTyping_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendTypingIndicationParam *arg1 = (pj::SendTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SendTypingIndicationParam_isTyping_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendTypingIndicationParam_isTyping_get" "', argument " "1"" of type '" "pj::SendTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp1);
  result = (bool) ((arg1)->isTyping);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendTypingIndicationParam_txOption_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendTypingIndicationParam *arg1 = (pj::SendTypingIndicationParam *) 0 ;
  pj::SipTxOption *arg2 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SendTypingIndicationParam_txOption_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendTypingIndicationParam_txOption_set" "', argument " "1"" of type '" "pj::SendTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SendTypingIndicationParam_txOption_set" "', argument " "2"" of type '" "pj::SipTxOption *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxOption * >(argp2);
  if (arg1) (arg1)->txOption = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SendTypingIndicationParam_txOption_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendTypingIndicationParam *arg1 = (pj::SendTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SendTypingIndicationParam_txOption_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SendTypingIndicationParam_txOption_get" "', argument " "1"" of type '" "pj::SendTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp1);
  result = (pj::SipTxOption *)& ((arg1)->txOption);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SendTypingIndicationParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendTypingIndicationParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SendTypingIndicationParam")) SWIG_fail;
  result = (pj::SendTypingIndicationParam *)new pj::SendTypingIndicationParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SendTypingIndicationParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SendTypingIndicationParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SendTypingIndicationParam *arg1 = (pj::SendTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SendTypingIndicationParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SendTypingIndicationParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SendTypingIndicationParam" "', argument " "1"" of type '" "pj::SendTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SendTypingIndicationParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SendTypingIndicationParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipHeaderVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_iterator" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_SipHeader_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (bool)std_vector_Sl_pj_SipHeader_Sg____nonzero__((std::vector< pj::SipHeader > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___bool__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (bool)std_vector_Sl_pj_SipHeader_Sg____bool__((std::vector< pj::SipHeader > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___len__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = std_vector_Sl_pj_SipHeader_Sg____len__((std::vector< pj::SipHeader > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_pop" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  try {
    result = std_vector_Sl_pj_SipHeader_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::SipHeader >::value_type(static_cast< const std::vector< pj::SipHeader >::value_type& >(result))), SWIGTYPE_p_pj__SipHeader, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  std::vector< pj::SipHeader >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipHeaderVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipHeader >::difference_type >(val3);
  try {
    result = (std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *)std_vector_Sl_pj_SipHeader_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  std::vector< pj::SipHeader >::difference_type arg3 ;
  std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SipHeaderVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipHeaderVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipHeader >::difference_type >(val3);
  {
    std::vector<pj::SipHeader,std::allocator< pj::SipHeader > > *ptr = (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SipHeaderVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_SipHeader_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  std::vector< pj::SipHeader >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipHeaderVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipHeader >::difference_type >(val3);
  try {
    std_vector_Sl_pj_SipHeader_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SipHeaderVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SipHeaderVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::__setslice__(std::vector< pj::SipHeader >::difference_type,std::vector< pj::SipHeader >::difference_type,std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &)\n"
    "    std::vector< pj::SipHeader >::__setslice__(std::vector< pj::SipHeader >::difference_type,std::vector< pj::SipHeader >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  std::vector< pj::SipHeader >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipHeaderVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipHeader >::difference_type >(val3);
  try {
    std_vector_Sl_pj_SipHeader_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  try {
    std_vector_Sl_pj_SipHeader_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *)std_vector_Sl_pj_SipHeader_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::SipHeader,std::allocator< pj::SipHeader > > *ptr = (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipHeaderVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_SipHeader_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_SipHeader_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_SipHeader_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_SipHeaderVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SipHeaderVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::__delitem__(std::vector< pj::SipHeader >::difference_type)\n"
    "    std::vector< pj::SipHeader >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipHeader >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  try {
    result = (std::vector< pj::SipHeader >::value_type *) &std_vector_Sl_pj_SipHeader_Sg____getitem____SWIG_1((std::vector< pj::SipHeader > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_SipHeaderVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SipHeaderVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::SipHeader >::__getitem__(std::vector< pj::SipHeader >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::difference_type arg2 ;
  std::vector< pj::SipHeader >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipHeaderVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_SipHeader_Sg____setitem____SWIG_2(arg1,arg2,(pj::SipHeader const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_SipHeaderVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipHeaderVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__SipHeader, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipHeaderVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::__setitem__(PySliceObject *,std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > const &)\n"
    "    std::vector< pj::SipHeader >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::SipHeader >::__setitem__(std::vector< pj::SipHeader >::difference_type,std::vector< pj::SipHeader >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_append" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipHeaderVector_append" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_append" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp2);
  std_vector_Sl_pj_SipHeader_Sg__append(arg1,(pj::SipHeader const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipHeaderVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipHeaderVector")) SWIG_fail;
  result = (std::vector< pj::SipHeader > *)new std::vector< pj::SipHeader >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipHeaderVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SipHeaderVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::SipHeader,std::allocator< pj::SipHeader > > *ptr = (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SipHeaderVector" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SipHeaderVector" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::SipHeader > *)new std::vector< pj::SipHeader >((std::vector< pj::SipHeader > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_empty" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (bool)((std::vector< pj::SipHeader > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_size" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = ((std::vector< pj::SipHeader > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_clear" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_swap" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipHeaderVector_swap" "', argument " "2"" of type '" "std::vector< pj::SipHeader > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_swap" "', argument " "2"" of type '" "std::vector< pj::SipHeader > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::SipHeader > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = ((std::vector< pj::SipHeader > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::SipHeader >::allocator_type(static_cast< const std::vector< pj::SipHeader >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__SipHeader_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_begin" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_end" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_rend" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipHeaderVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SipHeaderVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SipHeaderVector" "', argument " "1"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::SipHeader >::size_type >(val1);
  result = (std::vector< pj::SipHeader > *)new std::vector< pj::SipHeader >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_resize" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector_resize" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipHeader >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_erase" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_SipHeader_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::iterator arg2 ;
  std::vector< pj::SipHeader >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::SipHeader >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_erase" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_erase" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_erase" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_SipHeader_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_SipHeaderVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_SipHeaderVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::erase(std::vector< pj::SipHeader >::iterator)\n"
    "    std::vector< pj::SipHeader >::erase(std::vector< pj::SipHeader >::iterator,std::vector< pj::SipHeader >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SipHeaderVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader >::size_type arg1 ;
  std::vector< pj::SipHeader >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipHeader > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SipHeaderVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SipHeaderVector" "', argument " "1"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::SipHeader >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SipHeaderVector" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SipHeaderVector" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp2);
  result = (std::vector< pj::SipHeader > *)new std::vector< pj::SipHeader >(arg1,(std::vector< pj::SipHeader >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipHeaderVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SipHeaderVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SipHeaderVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SipHeaderVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__SipHeader, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SipHeaderVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SipHeaderVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::vector()\n"
    "    std::vector< pj::SipHeader >::vector(std::vector< pj::SipHeader > const &)\n"
    "    std::vector< pj::SipHeader >::vector(std::vector< pj::SipHeader >::size_type)\n"
    "    std::vector< pj::SipHeader >::vector(std::vector< pj::SipHeader >::size_type,std::vector< pj::SipHeader >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_push_back" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipHeaderVector_push_back" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_push_back" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::SipHeader >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_front" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (std::vector< pj::SipHeader >::value_type *) &((std::vector< pj::SipHeader > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_back" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = (std::vector< pj::SipHeader >::value_type *) &((std::vector< pj::SipHeader > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipHeader, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::size_type arg2 ;
  std::vector< pj::SipHeader >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_assign" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector_assign" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipHeaderVector_assign" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_assign" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::SipHeader >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::size_type arg2 ;
  std::vector< pj::SipHeader >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_resize" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector_resize" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipHeaderVector_resize" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_resize" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::SipHeader >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SipHeaderVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__SipHeader, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipHeaderVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::resize(std::vector< pj::SipHeader >::size_type)\n"
    "    std::vector< pj::SipHeader >::resize(std::vector< pj::SipHeader >::size_type,std::vector< pj::SipHeader >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::iterator arg2 ;
  std::vector< pj::SipHeader >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::SipHeader >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipHeaderVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_insert" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipHeaderVector_insert" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_insert" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp3);
  result = std_vector_Sl_pj_SipHeader_Sg__insert__SWIG_0(arg1,arg2,(pj::SipHeader const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipHeader >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::iterator arg2 ;
  std::vector< pj::SipHeader >::size_type arg3 ;
  std::vector< pj::SipHeader >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SipHeaderVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_insert" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipHeaderVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipHeaderVector_insert" "', argument " "3"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipHeader >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__SipHeader,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SipHeaderVector_insert" "', argument " "4"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipHeaderVector_insert" "', argument " "4"" of type '" "std::vector< pj::SipHeader >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::SipHeader >::value_type * >(argp4);
  std_vector_Sl_pj_SipHeader_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::SipHeader const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__SipHeader, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipHeaderVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipHeader,std::allocator< pj::SipHeader > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipHeader >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__SipHeader, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SipHeaderVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipHeaderVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipHeader >::insert(std::vector< pj::SipHeader >::iterator,std::vector< pj::SipHeader >::value_type const &)\n"
    "    std::vector< pj::SipHeader >::insert(std::vector< pj::SipHeader >::iterator,std::vector< pj::SipHeader >::size_type,std::vector< pj::SipHeader >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  std::vector< pj::SipHeader >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipHeaderVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_reserve" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipHeaderVector_reserve" "', argument " "2"" of type '" "std::vector< pj::SipHeader >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipHeader >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipHeaderVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipHeader >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipHeaderVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipHeaderVector_capacity" "', argument " "1"" of type '" "std::vector< pj::SipHeader > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  result = ((std::vector< pj::SipHeader > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipHeaderVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipHeader > *arg1 = (std::vector< pj::SipHeader > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipHeaderVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipHeaderVector" "', argument " "1"" of type '" "std::vector< pj::SipHeader > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipHeader > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipHeaderVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AuthCredInfoVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_iterator" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_AuthCredInfo_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (bool)std_vector_Sl_pj_AuthCredInfo_Sg____nonzero__((std::vector< pj::AuthCredInfo > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___bool__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (bool)std_vector_Sl_pj_AuthCredInfo_Sg____bool__((std::vector< pj::AuthCredInfo > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___len__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = std_vector_Sl_pj_AuthCredInfo_Sg____len__((std::vector< pj::AuthCredInfo > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_pop" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  try {
    result = std_vector_Sl_pj_AuthCredInfo_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::AuthCredInfo >::value_type(static_cast< const std::vector< pj::AuthCredInfo >::value_type& >(result))), SWIGTYPE_p_pj__AuthCredInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  std::vector< pj::AuthCredInfo >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthCredInfoVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val3);
  try {
    result = (std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *)std_vector_Sl_pj_AuthCredInfo_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  std::vector< pj::AuthCredInfo >::difference_type arg3 ;
  std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AuthCredInfoVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthCredInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val3);
  {
    std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *ptr = (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AuthCredInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  std::vector< pj::AuthCredInfo >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthCredInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val3);
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AuthCredInfoVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AuthCredInfoVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::__setslice__(std::vector< pj::AuthCredInfo >::difference_type,std::vector< pj::AuthCredInfo >::difference_type,std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &)\n"
    "    std::vector< pj::AuthCredInfo >::__setslice__(std::vector< pj::AuthCredInfo >::difference_type,std::vector< pj::AuthCredInfo >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  std::vector< pj::AuthCredInfo >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthCredInfoVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val3);
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *)std_vector_Sl_pj_AuthCredInfo_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *ptr = (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthCredInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AuthCredInfoVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AuthCredInfoVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::__delitem__(std::vector< pj::AuthCredInfo >::difference_type)\n"
    "    std::vector< pj::AuthCredInfo >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AuthCredInfo >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  try {
    result = (std::vector< pj::AuthCredInfo >::value_type *) &std_vector_Sl_pj_AuthCredInfo_Sg____getitem____SWIG_1((std::vector< pj::AuthCredInfo > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AuthCredInfoVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AuthCredInfoVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::AuthCredInfo >::__getitem__(std::vector< pj::AuthCredInfo >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::difference_type arg2 ;
  std::vector< pj::AuthCredInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthCredInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_AuthCredInfo_Sg____setitem____SWIG_2(arg1,arg2,(pj::AuthCredInfo const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AuthCredInfoVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AuthCredInfoVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__AuthCredInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AuthCredInfoVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::__setitem__(PySliceObject *,std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > const &)\n"
    "    std::vector< pj::AuthCredInfo >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::AuthCredInfo >::__setitem__(std::vector< pj::AuthCredInfo >::difference_type,std::vector< pj::AuthCredInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_append" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfoVector_append" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_append" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp2);
  std_vector_Sl_pj_AuthCredInfo_Sg__append(arg1,(pj::AuthCredInfo const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfoVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AuthCredInfoVector")) SWIG_fail;
  result = (std::vector< pj::AuthCredInfo > *)new std::vector< pj::AuthCredInfo >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfoVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AuthCredInfoVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *ptr = (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AuthCredInfoVector" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AuthCredInfoVector" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::AuthCredInfo > *)new std::vector< pj::AuthCredInfo >((std::vector< pj::AuthCredInfo > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_empty" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (bool)((std::vector< pj::AuthCredInfo > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_size" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = ((std::vector< pj::AuthCredInfo > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_clear" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_swap" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::AuthCredInfo > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = ((std::vector< pj::AuthCredInfo > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::AuthCredInfo >::allocator_type(static_cast< const std::vector< pj::AuthCredInfo >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__AuthCredInfo_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_begin" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_end" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_rend" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfoVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AuthCredInfoVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AuthCredInfoVector" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val1);
  result = (std::vector< pj::AuthCredInfo > *)new std::vector< pj::AuthCredInfo >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AuthCredInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_AuthCredInfo_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::iterator arg2 ;
  std::vector< pj::AuthCredInfo >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AuthCredInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_AuthCredInfo_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_AuthCredInfoVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_AuthCredInfoVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::erase(std::vector< pj::AuthCredInfo >::iterator)\n"
    "    std::vector< pj::AuthCredInfo >::erase(std::vector< pj::AuthCredInfo >::iterator,std::vector< pj::AuthCredInfo >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfoVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo >::size_type arg1 ;
  std::vector< pj::AuthCredInfo >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AuthCredInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AuthCredInfoVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AuthCredInfoVector" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AuthCredInfoVector" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AuthCredInfoVector" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp2);
  result = (std::vector< pj::AuthCredInfo > *)new std::vector< pj::AuthCredInfo >(arg1,(std::vector< pj::AuthCredInfo >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AuthCredInfoVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_AuthCredInfoVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_AuthCredInfoVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AuthCredInfoVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__AuthCredInfo, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_AuthCredInfoVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_AuthCredInfoVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::vector()\n"
    "    std::vector< pj::AuthCredInfo >::vector(std::vector< pj::AuthCredInfo > const &)\n"
    "    std::vector< pj::AuthCredInfo >::vector(std::vector< pj::AuthCredInfo >::size_type)\n"
    "    std::vector< pj::AuthCredInfo >::vector(std::vector< pj::AuthCredInfo >::size_type,std::vector< pj::AuthCredInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_push_back" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AuthCredInfoVector_push_back" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_push_back" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::AuthCredInfo >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_front" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (std::vector< pj::AuthCredInfo >::value_type *) &((std::vector< pj::AuthCredInfo > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_back" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = (std::vector< pj::AuthCredInfo >::value_type *) &((std::vector< pj::AuthCredInfo > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AuthCredInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::size_type arg2 ;
  std::vector< pj::AuthCredInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_assign" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector_assign" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthCredInfoVector_assign" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_assign" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::AuthCredInfo >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::size_type arg2 ;
  std::vector< pj::AuthCredInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthCredInfoVector_resize" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_resize" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::AuthCredInfo >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AuthCredInfoVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__AuthCredInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AuthCredInfoVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::resize(std::vector< pj::AuthCredInfo >::size_type)\n"
    "    std::vector< pj::AuthCredInfo >::resize(std::vector< pj::AuthCredInfo >::size_type,std::vector< pj::AuthCredInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::iterator arg2 ;
  std::vector< pj::AuthCredInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AuthCredInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AuthCredInfoVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AuthCredInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp3);
  result = std_vector_Sl_pj_AuthCredInfo_Sg__insert__SWIG_0(arg1,arg2,(pj::AuthCredInfo const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AuthCredInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::iterator arg2 ;
  std::vector< pj::AuthCredInfo >::size_type arg3 ;
  std::vector< pj::AuthCredInfo >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AuthCredInfoVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AuthCredInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AuthCredInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__AuthCredInfo,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AuthCredInfoVector_insert" "', argument " "4"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AuthCredInfoVector_insert" "', argument " "4"" of type '" "std::vector< pj::AuthCredInfo >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::AuthCredInfo >::value_type * >(argp4);
  std_vector_Sl_pj_AuthCredInfo_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::AuthCredInfo const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__AuthCredInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AuthCredInfoVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AuthCredInfo >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__AuthCredInfo, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AuthCredInfoVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AuthCredInfoVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AuthCredInfo >::insert(std::vector< pj::AuthCredInfo >::iterator,std::vector< pj::AuthCredInfo >::value_type const &)\n"
    "    std::vector< pj::AuthCredInfo >::insert(std::vector< pj::AuthCredInfo >::iterator,std::vector< pj::AuthCredInfo >::size_type,std::vector< pj::AuthCredInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  std::vector< pj::AuthCredInfo >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AuthCredInfoVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_reserve" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AuthCredInfoVector_reserve" "', argument " "2"" of type '" "std::vector< pj::AuthCredInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AuthCredInfo >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AuthCredInfoVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AuthCredInfo >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AuthCredInfoVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AuthCredInfoVector_capacity" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  result = ((std::vector< pj::AuthCredInfo > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AuthCredInfoVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AuthCredInfo > *arg1 = (std::vector< pj::AuthCredInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AuthCredInfoVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AuthCredInfoVector" "', argument " "1"" of type '" "std::vector< pj::AuthCredInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AuthCredInfo > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AuthCredInfoVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SipMultipartPartVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_iterator" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_SipMultipartPart_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (bool)std_vector_Sl_pj_SipMultipartPart_Sg____nonzero__((std::vector< pj::SipMultipartPart > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___bool__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (bool)std_vector_Sl_pj_SipMultipartPart_Sg____bool__((std::vector< pj::SipMultipartPart > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___len__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = std_vector_Sl_pj_SipMultipartPart_Sg____len__((std::vector< pj::SipMultipartPart > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_pop" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  try {
    result = std_vector_Sl_pj_SipMultipartPart_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::SipMultipartPart >::value_type(static_cast< const std::vector< pj::SipMultipartPart >::value_type& >(result))), SWIGTYPE_p_pj__SipMultipartPart, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  std::vector< pj::SipMultipartPart >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipMultipartPartVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val3);
  try {
    result = (std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *)std_vector_Sl_pj_SipMultipartPart_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  std::vector< pj::SipMultipartPart >::difference_type arg3 ;
  std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SipMultipartPartVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipMultipartPartVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val3);
  {
    std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *ptr = (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SipMultipartPartVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  std::vector< pj::SipMultipartPart >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipMultipartPartVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val3);
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_SipMultipartPartVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SipMultipartPartVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::__setslice__(std::vector< pj::SipMultipartPart >::difference_type,std::vector< pj::SipMultipartPart >::difference_type,std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &)\n"
    "    std::vector< pj::SipMultipartPart >::__setslice__(std::vector< pj::SipMultipartPart >::difference_type,std::vector< pj::SipMultipartPart >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  std::vector< pj::SipMultipartPart >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipMultipartPartVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val3);
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *)std_vector_Sl_pj_SipMultipartPart_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *ptr = (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipMultipartPartVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_SipMultipartPartVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SipMultipartPartVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::__delitem__(std::vector< pj::SipMultipartPart >::difference_type)\n"
    "    std::vector< pj::SipMultipartPart >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipMultipartPart >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  try {
    result = (std::vector< pj::SipMultipartPart >::value_type *) &std_vector_Sl_pj_SipMultipartPart_Sg____getitem____SWIG_1((std::vector< pj::SipMultipartPart > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_SipMultipartPartVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SipMultipartPartVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::SipMultipartPart >::__getitem__(std::vector< pj::SipMultipartPart >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::difference_type arg2 ;
  std::vector< pj::SipMultipartPart >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipMultipartPartVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_SipMultipartPart_Sg____setitem____SWIG_2(arg1,arg2,(pj::SipMultipartPart const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_SipMultipartPartVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipMultipartPartVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__SipMultipartPart, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipMultipartPartVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::__setitem__(PySliceObject *,std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > const &)\n"
    "    std::vector< pj::SipMultipartPart >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::SipMultipartPart >::__setitem__(std::vector< pj::SipMultipartPart >::difference_type,std::vector< pj::SipMultipartPart >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_append" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMultipartPartVector_append" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_append" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp2);
  std_vector_Sl_pj_SipMultipartPart_Sg__append(arg1,(pj::SipMultipartPart const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipMultipartPartVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SipMultipartPartVector")) SWIG_fail;
  result = (std::vector< pj::SipMultipartPart > *)new std::vector< pj::SipMultipartPart >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipMultipartPartVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SipMultipartPartVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *ptr = (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_SipMultipartPartVector" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SipMultipartPartVector" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::SipMultipartPart > *)new std::vector< pj::SipMultipartPart >((std::vector< pj::SipMultipartPart > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_empty" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (bool)((std::vector< pj::SipMultipartPart > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_size" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = ((std::vector< pj::SipMultipartPart > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_clear" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_swap" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMultipartPartVector_swap" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_swap" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::SipMultipartPart > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = ((std::vector< pj::SipMultipartPart > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::SipMultipartPart >::allocator_type(static_cast< const std::vector< pj::SipMultipartPart >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__SipMultipartPart_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_begin" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_end" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_rend" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipMultipartPartVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_SipMultipartPartVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SipMultipartPartVector" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val1);
  result = (std::vector< pj::SipMultipartPart > *)new std::vector< pj::SipMultipartPart >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_resize" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector_resize" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipMultipartPart >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_erase" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_SipMultipartPart_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::iterator arg2 ;
  std::vector< pj::SipMultipartPart >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::SipMultipartPart >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_erase" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_erase" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_erase" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_erase" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_SipMultipartPart_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_SipMultipartPartVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_SipMultipartPartVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::erase(std::vector< pj::SipMultipartPart >::iterator)\n"
    "    std::vector< pj::SipMultipartPart >::erase(std::vector< pj::SipMultipartPart >::iterator,std::vector< pj::SipMultipartPart >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_SipMultipartPartVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart >::size_type arg1 ;
  std::vector< pj::SipMultipartPart >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::SipMultipartPart > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_SipMultipartPartVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_SipMultipartPartVector" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_SipMultipartPartVector" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_SipMultipartPartVector" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp2);
  result = (std::vector< pj::SipMultipartPart > *)new std::vector< pj::SipMultipartPart >(arg1,(std::vector< pj::SipMultipartPart >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SipMultipartPartVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_SipMultipartPartVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_SipMultipartPartVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_SipMultipartPartVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__SipMultipartPart, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_SipMultipartPartVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_SipMultipartPartVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::vector()\n"
    "    std::vector< pj::SipMultipartPart >::vector(std::vector< pj::SipMultipartPart > const &)\n"
    "    std::vector< pj::SipMultipartPart >::vector(std::vector< pj::SipMultipartPart >::size_type)\n"
    "    std::vector< pj::SipMultipartPart >::vector(std::vector< pj::SipMultipartPart >::size_type,std::vector< pj::SipMultipartPart >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_push_back" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SipMultipartPartVector_push_back" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_push_back" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::SipMultipartPart >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_front" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (std::vector< pj::SipMultipartPart >::value_type *) &((std::vector< pj::SipMultipartPart > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_back" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = (std::vector< pj::SipMultipartPart >::value_type *) &((std::vector< pj::SipMultipartPart > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipMultipartPart, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::size_type arg2 ;
  std::vector< pj::SipMultipartPart >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_assign" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector_assign" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipMultipartPartVector_assign" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_assign" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::SipMultipartPart >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::size_type arg2 ;
  std::vector< pj::SipMultipartPart >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_resize" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector_resize" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipMultipartPartVector_resize" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_resize" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::SipMultipartPart >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SipMultipartPartVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__SipMultipartPart, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipMultipartPartVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::resize(std::vector< pj::SipMultipartPart >::size_type)\n"
    "    std::vector< pj::SipMultipartPart >::resize(std::vector< pj::SipMultipartPart >::size_type,std::vector< pj::SipMultipartPart >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::iterator arg2 ;
  std::vector< pj::SipMultipartPart >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::SipMultipartPart >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:SipMultipartPartVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_insert" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SipMultipartPartVector_insert" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_insert" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp3);
  result = std_vector_Sl_pj_SipMultipartPart_Sg__insert__SWIG_0(arg1,arg2,(pj::SipMultipartPart const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::SipMultipartPart >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::iterator arg2 ;
  std::vector< pj::SipMultipartPart >::size_type arg3 ;
  std::vector< pj::SipMultipartPart >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:SipMultipartPartVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_insert" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "SipMultipartPartVector_insert" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SipMultipartPartVector_insert" "', argument " "3"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__SipMultipartPart,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "SipMultipartPartVector_insert" "', argument " "4"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SipMultipartPartVector_insert" "', argument " "4"" of type '" "std::vector< pj::SipMultipartPart >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::SipMultipartPart >::value_type * >(argp4);
  std_vector_Sl_pj_SipMultipartPart_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::SipMultipartPart const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__SipMultipartPart, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_SipMultipartPartVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::SipMultipartPart >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__SipMultipartPart, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_SipMultipartPartVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SipMultipartPartVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::SipMultipartPart >::insert(std::vector< pj::SipMultipartPart >::iterator,std::vector< pj::SipMultipartPart >::value_type const &)\n"
    "    std::vector< pj::SipMultipartPart >::insert(std::vector< pj::SipMultipartPart >::iterator,std::vector< pj::SipMultipartPart >::size_type,std::vector< pj::SipMultipartPart >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  std::vector< pj::SipMultipartPart >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SipMultipartPartVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_reserve" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SipMultipartPartVector_reserve" "', argument " "2"" of type '" "std::vector< pj::SipMultipartPart >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::SipMultipartPart >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SipMultipartPartVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::SipMultipartPart >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SipMultipartPartVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SipMultipartPartVector_capacity" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  result = ((std::vector< pj::SipMultipartPart > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SipMultipartPartVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::SipMultipartPart > *arg1 = (std::vector< pj::SipMultipartPart > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SipMultipartPartVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SipMultipartPartVector" "', argument " "1"" of type '" "std::vector< pj::SipMultipartPart > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::SipMultipartPart > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SipMultipartPartVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BuddyVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_iterator" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_Buddy_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (bool)std_vector_Sl_pj_Buddy_Sm__Sg____nonzero__((std::vector< pj::Buddy * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___bool__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (bool)std_vector_Sl_pj_Buddy_Sm__Sg____bool__((std::vector< pj::Buddy * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___len__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = std_vector_Sl_pj_Buddy_Sm__Sg____len__((std::vector< pj::Buddy * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_pop" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  try {
    result = (std::vector< pj::Buddy * >::value_type)std_vector_Sl_pj_Buddy_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  std::vector< pj::Buddy * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuddyVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::Buddy * >::difference_type >(val3);
  try {
    result = (std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *)std_vector_Sl_pj_Buddy_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  std::vector< pj::Buddy * >::difference_type arg3 ;
  std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:BuddyVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuddyVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::Buddy * >::difference_type >(val3);
  {
    std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > *ptr = (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BuddyVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  std::vector< pj::Buddy * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuddyVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::Buddy * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_BuddyVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_BuddyVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::__setslice__(std::vector< pj::Buddy * >::difference_type,std::vector< pj::Buddy * >::difference_type,std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &)\n"
    "    std::vector< pj::Buddy * >::__setslice__(std::vector< pj::Buddy * >::difference_type,std::vector< pj::Buddy * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  std::vector< pj::Buddy * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuddyVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::Buddy * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *)std_vector_Sl_pj_Buddy_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > *ptr = (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuddyVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_BuddyVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BuddyVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::__delitem__(std::vector< pj::Buddy * >::difference_type)\n"
    "    std::vector< pj::Buddy * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::Buddy * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  try {
    result = (std::vector< pj::Buddy * >::value_type)std_vector_Sl_pj_Buddy_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_BuddyVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BuddyVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::Buddy * >::__getitem__(std::vector< pj::Buddy * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::difference_type arg2 ;
  std::vector< pj::Buddy * >::value_type arg3 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuddyVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp3);
  try {
    std_vector_Sl_pj_Buddy_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_BuddyVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BuddyVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__Buddy, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BuddyVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::__setitem__(PySliceObject *,std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > const &)\n"
    "    std::vector< pj::Buddy * >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::Buddy * >::__setitem__(std::vector< pj::Buddy * >::difference_type,std::vector< pj::Buddy * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::value_type arg2 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_append" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyVector_append" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp2);
  std_vector_Sl_pj_Buddy_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BuddyVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuddyVector")) SWIG_fail;
  result = (std::vector< pj::Buddy * > *)new std::vector< pj::Buddy * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BuddyVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_BuddyVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > *ptr = (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_BuddyVector" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_BuddyVector" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::Buddy * > *)new std::vector< pj::Buddy * >((std::vector< pj::Buddy * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_empty" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (bool)((std::vector< pj::Buddy * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_size" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = ((std::vector< pj::Buddy * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_clear" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_swap" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyVector_swap" "', argument " "2"" of type '" "std::vector< pj::Buddy * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyVector_swap" "', argument " "2"" of type '" "std::vector< pj::Buddy * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::Buddy * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = ((std::vector< pj::Buddy * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::Buddy * >::allocator_type(static_cast< const std::vector< pj::Buddy * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__Buddy_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_begin" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_end" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_rend" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BuddyVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_BuddyVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BuddyVector" "', argument " "1"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::Buddy * >::size_type >(val1);
  result = (std::vector< pj::Buddy * > *)new std::vector< pj::Buddy * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_resize" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector_resize" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::Buddy * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_erase" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_erase" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_erase" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_Buddy_Sm__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::iterator arg2 ;
  std::vector< pj::Buddy * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::Buddy * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_erase" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_erase" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_erase" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_erase" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_erase" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_Buddy_Sm__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_BuddyVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_BuddyVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::erase(std::vector< pj::Buddy * >::iterator)\n"
    "    std::vector< pj::Buddy * >::erase(std::vector< pj::Buddy * >::iterator,std::vector< pj::Buddy * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_BuddyVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * >::size_type arg1 ;
  std::vector< pj::Buddy * >::value_type arg2 = (std::vector< pj::Buddy * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::Buddy * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_BuddyVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_BuddyVector" "', argument " "1"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::Buddy * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_BuddyVector" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp2);
  result = (std::vector< pj::Buddy * > *)new std::vector< pj::Buddy * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BuddyVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_BuddyVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_BuddyVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_BuddyVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__Buddy, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_BuddyVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_BuddyVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::vector()\n"
    "    std::vector< pj::Buddy * >::vector(std::vector< pj::Buddy * > const &)\n"
    "    std::vector< pj::Buddy * >::vector(std::vector< pj::Buddy * >::size_type)\n"
    "    std::vector< pj::Buddy * >::vector(std::vector< pj::Buddy * >::size_type,std::vector< pj::Buddy * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::value_type arg2 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_push_back" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyVector_push_back" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_front" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (std::vector< pj::Buddy * >::value_type)((std::vector< pj::Buddy * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_back" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = (std::vector< pj::Buddy * >::value_type)((std::vector< pj::Buddy * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::size_type arg2 ;
  std::vector< pj::Buddy * >::value_type arg3 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_assign" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector_assign" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuddyVector_assign" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::size_type arg2 ;
  std::vector< pj::Buddy * >::value_type arg3 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_resize" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector_resize" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuddyVector_resize" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_BuddyVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__Buddy, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BuddyVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::resize(std::vector< pj::Buddy * >::size_type)\n"
    "    std::vector< pj::Buddy * >::resize(std::vector< pj::Buddy * >::size_type,std::vector< pj::Buddy * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::iterator arg2 ;
  std::vector< pj::Buddy * >::value_type arg3 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::Buddy * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:BuddyVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_insert" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_insert" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_insert" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BuddyVector_insert" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp3);
  result = std_vector_Sl_pj_Buddy_Sm__Sg__insert__SWIG_0(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::Buddy * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::iterator arg2 ;
  std::vector< pj::Buddy * >::size_type arg3 ;
  std::vector< pj::Buddy * >::value_type arg4 = (std::vector< pj::Buddy * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:BuddyVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_insert" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_insert" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "BuddyVector_insert" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "BuddyVector_insert" "', argument " "3"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::Buddy * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BuddyVector_insert" "', argument " "4"" of type '" "std::vector< pj::Buddy * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::Buddy * >::value_type >(argp4);
  std_vector_Sl_pj_Buddy_Sm__Sg__insert__SWIG_1(arg1,arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__Buddy, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_BuddyVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::Buddy*,std::allocator< pj::Buddy * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::Buddy * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pj__Buddy, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_BuddyVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BuddyVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::Buddy * >::insert(std::vector< pj::Buddy * >::iterator,std::vector< pj::Buddy * >::value_type)\n"
    "    std::vector< pj::Buddy * >::insert(std::vector< pj::Buddy * >::iterator,std::vector< pj::Buddy * >::size_type,std::vector< pj::Buddy * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_BuddyVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  std::vector< pj::Buddy * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_reserve" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyVector_reserve" "', argument " "2"" of type '" "std::vector< pj::Buddy * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::Buddy * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::Buddy * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyVector_capacity" "', argument " "1"" of type '" "std::vector< pj::Buddy * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  result = ((std::vector< pj::Buddy * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuddyVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::Buddy * > *arg1 = (std::vector< pj::Buddy * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuddyVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuddyVector" "', argument " "1"" of type '" "std::vector< pj::Buddy * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::Buddy * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuddyVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AudioMediaVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_iterator" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_AudioMedia_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (bool)std_vector_Sl_pj_AudioMedia_Sm__Sg____nonzero__((std::vector< pj::AudioMedia * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___bool__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (bool)std_vector_Sl_pj_AudioMedia_Sm__Sg____bool__((std::vector< pj::AudioMedia * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___len__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = std_vector_Sl_pj_AudioMedia_Sm__Sg____len__((std::vector< pj::AudioMedia * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_pop" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  try {
    result = (std::vector< pj::AudioMedia * >::value_type)std_vector_Sl_pj_AudioMedia_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  std::vector< pj::AudioMedia * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val3);
  try {
    result = (std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *)std_vector_Sl_pj_AudioMedia_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  std::vector< pj::AudioMedia * >::difference_type arg3 ;
  std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AudioMediaVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val3);
  {
    std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > *ptr = (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioMediaVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  std::vector< pj::AudioMedia * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudioMediaVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AudioMediaVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::__setslice__(std::vector< pj::AudioMedia * >::difference_type,std::vector< pj::AudioMedia * >::difference_type,std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &)\n"
    "    std::vector< pj::AudioMedia * >::__setslice__(std::vector< pj::AudioMedia * >::difference_type,std::vector< pj::AudioMedia * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  std::vector< pj::AudioMedia * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *)std_vector_Sl_pj_AudioMedia_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > *ptr = (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AudioMediaVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudioMediaVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::__delitem__(std::vector< pj::AudioMedia * >::difference_type)\n"
    "    std::vector< pj::AudioMedia * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioMedia * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  try {
    result = (std::vector< pj::AudioMedia * >::value_type)std_vector_Sl_pj_AudioMedia_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AudioMediaVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudioMediaVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::AudioMedia * >::__getitem__(std::vector< pj::AudioMedia * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::difference_type arg2 ;
  std::vector< pj::AudioMedia * >::value_type arg3 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp3);
  try {
    std_vector_Sl_pj_AudioMedia_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AudioMediaVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioMediaVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__AudioMedia, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioMediaVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::__setitem__(PySliceObject *,std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > const &)\n"
    "    std::vector< pj::AudioMedia * >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::AudioMedia * >::__setitem__(std::vector< pj::AudioMedia * >::difference_type,std::vector< pj::AudioMedia * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::value_type arg2 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_append" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaVector_append" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp2);
  std_vector_Sl_pj_AudioMedia_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioMediaVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AudioMediaVector")) SWIG_fail;
  result = (std::vector< pj::AudioMedia * > *)new std::vector< pj::AudioMedia * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioMediaVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AudioMediaVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > *ptr = (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AudioMediaVector" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AudioMediaVector" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::AudioMedia * > *)new std::vector< pj::AudioMedia * >((std::vector< pj::AudioMedia * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_empty" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (bool)((std::vector< pj::AudioMedia * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_size" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = ((std::vector< pj::AudioMedia * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_clear" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_swap" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaVector_swap" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaVector_swap" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::AudioMedia * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = ((std::vector< pj::AudioMedia * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::AudioMedia * >::allocator_type(static_cast< const std::vector< pj::AudioMedia * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__AudioMedia_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_begin" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_end" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_rend" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioMediaVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AudioMediaVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AudioMediaVector" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val1);
  result = (std::vector< pj::AudioMedia * > *)new std::vector< pj::AudioMedia * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_resize" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector_resize" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioMedia * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_erase" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_AudioMedia_Sm__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::iterator arg2 ;
  std::vector< pj::AudioMedia * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AudioMedia * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_erase" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_erase" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_erase" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_AudioMedia_Sm__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_AudioMediaVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_AudioMediaVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::erase(std::vector< pj::AudioMedia * >::iterator)\n"
    "    std::vector< pj::AudioMedia * >::erase(std::vector< pj::AudioMedia * >::iterator,std::vector< pj::AudioMedia * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_AudioMediaVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * >::size_type arg1 ;
  std::vector< pj::AudioMedia * >::value_type arg2 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioMedia * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AudioMediaVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AudioMediaVector" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AudioMediaVector" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp2);
  result = (std::vector< pj::AudioMedia * > *)new std::vector< pj::AudioMedia * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioMediaVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_AudioMediaVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_AudioMediaVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AudioMediaVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__AudioMedia, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_AudioMediaVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_AudioMediaVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::vector()\n"
    "    std::vector< pj::AudioMedia * >::vector(std::vector< pj::AudioMedia * > const &)\n"
    "    std::vector< pj::AudioMedia * >::vector(std::vector< pj::AudioMedia * >::size_type)\n"
    "    std::vector< pj::AudioMedia * >::vector(std::vector< pj::AudioMedia * >::size_type,std::vector< pj::AudioMedia * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::value_type arg2 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_push_back" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaVector_push_back" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_front" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (std::vector< pj::AudioMedia * >::value_type)((std::vector< pj::AudioMedia * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_back" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = (std::vector< pj::AudioMedia * >::value_type)((std::vector< pj::AudioMedia * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::size_type arg2 ;
  std::vector< pj::AudioMedia * >::value_type arg3 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_assign" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector_assign" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaVector_assign" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::size_type arg2 ;
  std::vector< pj::AudioMedia * >::value_type arg3 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_resize" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector_resize" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaVector_resize" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudioMediaVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__AudioMedia, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioMediaVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::resize(std::vector< pj::AudioMedia * >::size_type)\n"
    "    std::vector< pj::AudioMedia * >::resize(std::vector< pj::AudioMedia * >::size_type,std::vector< pj::AudioMedia * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::iterator arg2 ;
  std::vector< pj::AudioMedia * >::value_type arg3 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AudioMedia * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_insert" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaVector_insert" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp3);
  result = std_vector_Sl_pj_AudioMedia_Sm__Sg__insert__SWIG_0(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioMedia * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::iterator arg2 ;
  std::vector< pj::AudioMedia * >::size_type arg3 ;
  std::vector< pj::AudioMedia * >::value_type arg4 = (std::vector< pj::AudioMedia * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AudioMediaVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_insert" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioMediaVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaVector_insert" "', argument " "3"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioMediaVector_insert" "', argument " "4"" of type '" "std::vector< pj::AudioMedia * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::AudioMedia * >::value_type >(argp4);
  std_vector_Sl_pj_AudioMedia_Sm__Sg__insert__SWIG_1(arg1,arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__AudioMedia, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioMediaVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioMedia * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pj__AudioMedia, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AudioMediaVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioMedia * >::insert(std::vector< pj::AudioMedia * >::iterator,std::vector< pj::AudioMedia * >::value_type)\n"
    "    std::vector< pj::AudioMedia * >::insert(std::vector< pj::AudioMedia * >::iterator,std::vector< pj::AudioMedia * >::size_type,std::vector< pj::AudioMedia * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  std::vector< pj::AudioMedia * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_reserve" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaVector_reserve" "', argument " "2"" of type '" "std::vector< pj::AudioMedia * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioMedia * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioMedia * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaVector_capacity" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  result = ((std::vector< pj::AudioMedia * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioMediaVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioMedia * > *arg1 = (std::vector< pj::AudioMedia * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioMediaVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioMediaVector" "', argument " "1"" of type '" "std::vector< pj::AudioMedia * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioMedia * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioMediaVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToneDescVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_iterator" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_ToneDesc_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (bool)std_vector_Sl_pj_ToneDesc_Sg____nonzero__((std::vector< pj::ToneDesc > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___bool__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (bool)std_vector_Sl_pj_ToneDesc_Sg____bool__((std::vector< pj::ToneDesc > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___len__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = std_vector_Sl_pj_ToneDesc_Sg____len__((std::vector< pj::ToneDesc > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_pop" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  try {
    result = std_vector_Sl_pj_ToneDesc_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::ToneDesc >::value_type(static_cast< const std::vector< pj::ToneDesc >::value_type& >(result))), SWIGTYPE_p_pj__ToneDesc, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  std::vector< pj::ToneDesc >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDescVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val3);
  try {
    result = (std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *)std_vector_Sl_pj_ToneDesc_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  std::vector< pj::ToneDesc >::difference_type arg3 ;
  std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ToneDescVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDescVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val3);
  {
    std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *ptr = (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ToneDescVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_ToneDesc_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  std::vector< pj::ToneDesc >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDescVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val3);
  try {
    std_vector_Sl_pj_ToneDesc_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ToneDescVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ToneDescVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::__setslice__(std::vector< pj::ToneDesc >::difference_type,std::vector< pj::ToneDesc >::difference_type,std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &)\n"
    "    std::vector< pj::ToneDesc >::__setslice__(std::vector< pj::ToneDesc >::difference_type,std::vector< pj::ToneDesc >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  std::vector< pj::ToneDesc >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDescVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val3);
  try {
    std_vector_Sl_pj_ToneDesc_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  try {
    std_vector_Sl_pj_ToneDesc_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *)std_vector_Sl_pj_ToneDesc_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *ptr = (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDescVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_ToneDesc_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_ToneDesc_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_ToneDesc_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDescVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDescVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::__delitem__(std::vector< pj::ToneDesc >::difference_type)\n"
    "    std::vector< pj::ToneDesc >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDesc >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  try {
    result = (std::vector< pj::ToneDesc >::value_type *) &std_vector_Sl_pj_ToneDesc_Sg____getitem____SWIG_1((std::vector< pj::ToneDesc > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDesc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDescVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDescVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::ToneDesc >::__getitem__(std::vector< pj::ToneDesc >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::difference_type arg2 ;
  std::vector< pj::ToneDesc >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDescVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_ToneDesc_Sg____setitem____SWIG_2(arg1,arg2,(pj::ToneDesc const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDescVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDescVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDesc, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDescVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::__setitem__(PySliceObject *,std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > const &)\n"
    "    std::vector< pj::ToneDesc >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::ToneDesc >::__setitem__(std::vector< pj::ToneDesc >::difference_type,std::vector< pj::ToneDesc >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_append" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDescVector_append" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_append" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp2);
  std_vector_Sl_pj_ToneDesc_Sg__append(arg1,(pj::ToneDesc const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDescVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneDescVector")) SWIG_fail;
  result = (std::vector< pj::ToneDesc > *)new std::vector< pj::ToneDesc >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDescVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ToneDescVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *ptr = (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ToneDescVector" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ToneDescVector" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::ToneDesc > *)new std::vector< pj::ToneDesc >((std::vector< pj::ToneDesc > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_empty" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (bool)((std::vector< pj::ToneDesc > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_size" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = ((std::vector< pj::ToneDesc > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_clear" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_swap" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDescVector_swap" "', argument " "2"" of type '" "std::vector< pj::ToneDesc > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_swap" "', argument " "2"" of type '" "std::vector< pj::ToneDesc > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::ToneDesc > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = ((std::vector< pj::ToneDesc > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::ToneDesc >::allocator_type(static_cast< const std::vector< pj::ToneDesc >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__ToneDesc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_begin" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_end" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_rend" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDescVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ToneDescVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ToneDescVector" "', argument " "1"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::ToneDesc >::size_type >(val1);
  result = (std::vector< pj::ToneDesc > *)new std::vector< pj::ToneDesc >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_resize" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector_resize" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDesc >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_erase" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_ToneDesc_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::iterator arg2 ;
  std::vector< pj::ToneDesc >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDesc >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_erase" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_erase" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_erase" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_ToneDesc_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_ToneDescVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_ToneDescVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::erase(std::vector< pj::ToneDesc >::iterator)\n"
    "    std::vector< pj::ToneDesc >::erase(std::vector< pj::ToneDesc >::iterator,std::vector< pj::ToneDesc >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_ToneDescVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc >::size_type arg1 ;
  std::vector< pj::ToneDesc >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDesc > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ToneDescVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ToneDescVector" "', argument " "1"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::ToneDesc >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ToneDescVector" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ToneDescVector" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp2);
  result = (std::vector< pj::ToneDesc > *)new std::vector< pj::ToneDesc >(arg1,(std::vector< pj::ToneDesc >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDescVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ToneDescVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ToneDescVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ToneDescVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__ToneDesc, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ToneDescVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ToneDescVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::vector()\n"
    "    std::vector< pj::ToneDesc >::vector(std::vector< pj::ToneDesc > const &)\n"
    "    std::vector< pj::ToneDesc >::vector(std::vector< pj::ToneDesc >::size_type)\n"
    "    std::vector< pj::ToneDesc >::vector(std::vector< pj::ToneDesc >::size_type,std::vector< pj::ToneDesc >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_push_back" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDescVector_push_back" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_push_back" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::ToneDesc >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_front" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (std::vector< pj::ToneDesc >::value_type *) &((std::vector< pj::ToneDesc > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDesc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_back" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = (std::vector< pj::ToneDesc >::value_type *) &((std::vector< pj::ToneDesc > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDesc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::size_type arg2 ;
  std::vector< pj::ToneDesc >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_assign" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector_assign" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDescVector_assign" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_assign" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::ToneDesc >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::size_type arg2 ;
  std::vector< pj::ToneDesc >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_resize" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector_resize" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDescVector_resize" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_resize" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::ToneDesc >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDescVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDesc, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDescVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::resize(std::vector< pj::ToneDesc >::size_type)\n"
    "    std::vector< pj::ToneDesc >::resize(std::vector< pj::ToneDesc >::size_type,std::vector< pj::ToneDesc >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::iterator arg2 ;
  std::vector< pj::ToneDesc >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDesc >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDescVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_insert" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDescVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp3);
  result = std_vector_Sl_pj_ToneDesc_Sg__insert__SWIG_0(arg1,arg2,(pj::ToneDesc const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDesc >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::iterator arg2 ;
  std::vector< pj::ToneDesc >::size_type arg3 ;
  std::vector< pj::ToneDesc >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ToneDescVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_insert" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDescVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDescVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDesc >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__ToneDesc,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ToneDescVector_insert" "', argument " "4"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDescVector_insert" "', argument " "4"" of type '" "std::vector< pj::ToneDesc >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::ToneDesc >::value_type * >(argp4);
  std_vector_Sl_pj_ToneDesc_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::ToneDesc const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDesc, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDescVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDesc >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__ToneDesc, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ToneDescVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDescVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDesc >::insert(std::vector< pj::ToneDesc >::iterator,std::vector< pj::ToneDesc >::value_type const &)\n"
    "    std::vector< pj::ToneDesc >::insert(std::vector< pj::ToneDesc >::iterator,std::vector< pj::ToneDesc >::size_type,std::vector< pj::ToneDesc >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  std::vector< pj::ToneDesc >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDescVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_reserve" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDescVector_reserve" "', argument " "2"" of type '" "std::vector< pj::ToneDesc >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDesc >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDescVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDesc >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDescVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDescVector_capacity" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  result = ((std::vector< pj::ToneDesc > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneDescVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDesc > *arg1 = (std::vector< pj::ToneDesc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneDescVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneDescVector" "', argument " "1"" of type '" "std::vector< pj::ToneDesc > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDesc > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ToneDescVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToneDigitVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_iterator" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_ToneDigit_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (bool)std_vector_Sl_pj_ToneDigit_Sg____nonzero__((std::vector< pj::ToneDigit > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___bool__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (bool)std_vector_Sl_pj_ToneDigit_Sg____bool__((std::vector< pj::ToneDigit > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___len__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = std_vector_Sl_pj_ToneDigit_Sg____len__((std::vector< pj::ToneDigit > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_pop" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  try {
    result = std_vector_Sl_pj_ToneDigit_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::ToneDigit >::value_type(static_cast< const std::vector< pj::ToneDigit >::value_type& >(result))), SWIGTYPE_p_pj__ToneDigit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigit >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val3);
  try {
    result = (std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *)std_vector_Sl_pj_ToneDigit_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigit >::difference_type arg3 ;
  std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ToneDigitVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val3);
  {
    std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *ptr = (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ToneDigitVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_ToneDigit_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigit >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val3);
  try {
    std_vector_Sl_pj_ToneDigit_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ToneDigitVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ToneDigitVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::__setslice__(std::vector< pj::ToneDigit >::difference_type,std::vector< pj::ToneDigit >::difference_type,std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &)\n"
    "    std::vector< pj::ToneDigit >::__setslice__(std::vector< pj::ToneDigit >::difference_type,std::vector< pj::ToneDigit >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigit >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val3);
  try {
    std_vector_Sl_pj_ToneDigit_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  try {
    std_vector_Sl_pj_ToneDigit_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *)std_vector_Sl_pj_ToneDigit_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *ptr = (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_ToneDigit_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_ToneDigit_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_ToneDigit_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDigitVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDigitVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::__delitem__(std::vector< pj::ToneDigit >::difference_type)\n"
    "    std::vector< pj::ToneDigit >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigit >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  try {
    result = (std::vector< pj::ToneDigit >::value_type *) &std_vector_Sl_pj_ToneDigit_Sg____getitem____SWIG_1((std::vector< pj::ToneDigit > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDigitVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDigitVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::ToneDigit >::__getitem__(std::vector< pj::ToneDigit >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_ToneDigit_Sg____setitem____SWIG_2(arg1,arg2,(pj::ToneDigit const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDigitVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDigit, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::__setitem__(PySliceObject *,std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > const &)\n"
    "    std::vector< pj::ToneDigit >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::ToneDigit >::__setitem__(std::vector< pj::ToneDigit >::difference_type,std::vector< pj::ToneDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_append" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitVector_append" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_append" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp2);
  std_vector_Sl_pj_ToneDigit_Sg__append(arg1,(pj::ToneDigit const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneDigitVector")) SWIG_fail;
  result = (std::vector< pj::ToneDigit > *)new std::vector< pj::ToneDigit >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ToneDigitVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *ptr = (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ToneDigitVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ToneDigitVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::ToneDigit > *)new std::vector< pj::ToneDigit >((std::vector< pj::ToneDigit > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_empty" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (bool)((std::vector< pj::ToneDigit > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_size" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = ((std::vector< pj::ToneDigit > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_clear" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_swap" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitVector_swap" "', argument " "2"" of type '" "std::vector< pj::ToneDigit > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_swap" "', argument " "2"" of type '" "std::vector< pj::ToneDigit > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::ToneDigit > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = ((std::vector< pj::ToneDigit > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::ToneDigit >::allocator_type(static_cast< const std::vector< pj::ToneDigit >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__ToneDigit_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_begin" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_end" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_rend" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ToneDigitVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ToneDigitVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::ToneDigit >::size_type >(val1);
  result = (std::vector< pj::ToneDigit > *)new std::vector< pj::ToneDigit >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_resize" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector_resize" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_erase" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_ToneDigit_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::iterator arg2 ;
  std::vector< pj::ToneDigit >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_erase" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_erase" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_erase" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_ToneDigit_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_ToneDigitVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_ToneDigitVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::erase(std::vector< pj::ToneDigit >::iterator)\n"
    "    std::vector< pj::ToneDigit >::erase(std::vector< pj::ToneDigit >::iterator,std::vector< pj::ToneDigit >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit >::size_type arg1 ;
  std::vector< pj::ToneDigit >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ToneDigitVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ToneDigitVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::ToneDigit >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ToneDigitVector" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ToneDigitVector" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp2);
  result = (std::vector< pj::ToneDigit > *)new std::vector< pj::ToneDigit >(arg1,(std::vector< pj::ToneDigit >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ToneDigitVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ToneDigitVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ToneDigitVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__ToneDigit, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ToneDigitVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ToneDigitVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::vector()\n"
    "    std::vector< pj::ToneDigit >::vector(std::vector< pj::ToneDigit > const &)\n"
    "    std::vector< pj::ToneDigit >::vector(std::vector< pj::ToneDigit >::size_type)\n"
    "    std::vector< pj::ToneDigit >::vector(std::vector< pj::ToneDigit >::size_type,std::vector< pj::ToneDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_push_back" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitVector_push_back" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_push_back" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::ToneDigit >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_front" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (std::vector< pj::ToneDigit >::value_type *) &((std::vector< pj::ToneDigit > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_back" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = (std::vector< pj::ToneDigit >::value_type *) &((std::vector< pj::ToneDigit > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::size_type arg2 ;
  std::vector< pj::ToneDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_assign" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector_assign" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitVector_assign" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_assign" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::ToneDigit >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::size_type arg2 ;
  std::vector< pj::ToneDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_resize" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector_resize" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitVector_resize" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_resize" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::ToneDigit >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDigitVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDigit, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::resize(std::vector< pj::ToneDigit >::size_type)\n"
    "    std::vector< pj::ToneDigit >::resize(std::vector< pj::ToneDigit >::size_type,std::vector< pj::ToneDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::iterator arg2 ;
  std::vector< pj::ToneDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_insert" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp3);
  result = std_vector_Sl_pj_ToneDigit_Sg__insert__SWIG_0(arg1,arg2,(pj::ToneDigit const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::iterator arg2 ;
  std::vector< pj::ToneDigit >::size_type arg3 ;
  std::vector< pj::ToneDigit >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ToneDigitVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_insert" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigit >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__ToneDigit,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ToneDigitVector_insert" "', argument " "4"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitVector_insert" "', argument " "4"" of type '" "std::vector< pj::ToneDigit >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::ToneDigit >::value_type * >(argp4);
  std_vector_Sl_pj_ToneDigit_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::ToneDigit const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDigit, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigit >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__ToneDigit, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ToneDigitVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigit >::insert(std::vector< pj::ToneDigit >::iterator,std::vector< pj::ToneDigit >::value_type const &)\n"
    "    std::vector< pj::ToneDigit >::insert(std::vector< pj::ToneDigit >::iterator,std::vector< pj::ToneDigit >::size_type,std::vector< pj::ToneDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  std::vector< pj::ToneDigit >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_reserve" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitVector_reserve" "', argument " "2"" of type '" "std::vector< pj::ToneDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigit >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigit >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitVector_capacity" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  result = ((std::vector< pj::ToneDigit > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneDigitVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigit > *arg1 = (std::vector< pj::ToneDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneDigitVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneDigitVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigit > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ToneDigitVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToneDigitMapVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_iterator" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_ToneDigitMapDigit_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (bool)std_vector_Sl_pj_ToneDigitMapDigit_Sg____nonzero__((std::vector< pj::ToneDigitMapDigit > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___bool__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (bool)std_vector_Sl_pj_ToneDigitMapDigit_Sg____bool__((std::vector< pj::ToneDigitMapDigit > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___len__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = std_vector_Sl_pj_ToneDigitMapDigit_Sg____len__((std::vector< pj::ToneDigitMapDigit > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_pop" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  try {
    result = std_vector_Sl_pj_ToneDigitMapDigit_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::ToneDigitMapDigit >::value_type(static_cast< const std::vector< pj::ToneDigitMapDigit >::value_type& >(result))), SWIGTYPE_p_pj__ToneDigitMapDigit, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitMapVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val3);
  try {
    result = (std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *)std_vector_Sl_pj_ToneDigitMapDigit_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg3 ;
  std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ToneDigitMapVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitMapVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val3);
  {
    std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *ptr = (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ToneDigitMapVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitMapVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val3);
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ToneDigitMapVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ToneDigitMapVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::__setslice__(std::vector< pj::ToneDigitMapDigit >::difference_type,std::vector< pj::ToneDigitMapDigit >::difference_type,std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &)\n"
    "    std::vector< pj::ToneDigitMapDigit >::__setslice__(std::vector< pj::ToneDigitMapDigit >::difference_type,std::vector< pj::ToneDigitMapDigit >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitMapVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val3);
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *)std_vector_Sl_pj_ToneDigitMapDigit_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *ptr = (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitMapVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDigitMapVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDigitMapVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::__delitem__(std::vector< pj::ToneDigitMapDigit >::difference_type)\n"
    "    std::vector< pj::ToneDigitMapDigit >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  try {
    result = (std::vector< pj::ToneDigitMapDigit >::value_type *) &std_vector_Sl_pj_ToneDigitMapDigit_Sg____getitem____SWIG_1((std::vector< pj::ToneDigitMapDigit > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDigitMapVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDigitMapVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::ToneDigitMapDigit >::__getitem__(std::vector< pj::ToneDigitMapDigit >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::difference_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitMapVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_ToneDigitMapDigit_Sg____setitem____SWIG_2(arg1,arg2,(pj::ToneDigitMapDigit const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_ToneDigitMapVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitMapVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDigitMapDigit, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitMapVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::__setitem__(PySliceObject *,std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > const &)\n"
    "    std::vector< pj::ToneDigitMapDigit >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::ToneDigitMapDigit >::__setitem__(std::vector< pj::ToneDigitMapDigit >::difference_type,std::vector< pj::ToneDigitMapDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_append" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitMapVector_append" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_append" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp2);
  std_vector_Sl_pj_ToneDigitMapDigit_Sg__append(arg1,(pj::ToneDigitMapDigit const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitMapVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneDigitMapVector")) SWIG_fail;
  result = (std::vector< pj::ToneDigitMapDigit > *)new std::vector< pj::ToneDigitMapDigit >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitMapVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ToneDigitMapVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *ptr = (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ToneDigitMapVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ToneDigitMapVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::ToneDigitMapDigit > *)new std::vector< pj::ToneDigitMapDigit >((std::vector< pj::ToneDigitMapDigit > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_empty" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (bool)((std::vector< pj::ToneDigitMapDigit > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_size" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = ((std::vector< pj::ToneDigitMapDigit > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_clear" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_swap" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitMapVector_swap" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_swap" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::ToneDigitMapDigit > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = ((std::vector< pj::ToneDigitMapDigit > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::ToneDigitMapDigit >::allocator_type(static_cast< const std::vector< pj::ToneDigitMapDigit >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__ToneDigitMapDigit_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_begin" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_end" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_rend" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitMapVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_ToneDigitMapVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ToneDigitMapVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val1);
  result = (std::vector< pj::ToneDigitMapDigit > *)new std::vector< pj::ToneDigitMapDigit >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_resize" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector_resize" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_erase" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_ToneDigitMapDigit_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator arg2 ;
  std::vector< pj::ToneDigitMapDigit >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_erase" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_erase" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_erase" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_erase" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_ToneDigitMapDigit_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_ToneDigitMapVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_ToneDigitMapVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::erase(std::vector< pj::ToneDigitMapDigit >::iterator)\n"
    "    std::vector< pj::ToneDigitMapDigit >::erase(std::vector< pj::ToneDigitMapDigit >::iterator,std::vector< pj::ToneDigitMapDigit >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitMapVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit >::size_type arg1 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::ToneDigitMapDigit > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_ToneDigitMapVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ToneDigitMapVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ToneDigitMapVector" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ToneDigitMapVector" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp2);
  result = (std::vector< pj::ToneDigitMapDigit > *)new std::vector< pj::ToneDigitMapDigit >(arg1,(std::vector< pj::ToneDigitMapDigit >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitMapVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_ToneDigitMapVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ToneDigitMapVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ToneDigitMapVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__ToneDigitMapDigit, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ToneDigitMapVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_ToneDigitMapVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::vector()\n"
    "    std::vector< pj::ToneDigitMapDigit >::vector(std::vector< pj::ToneDigitMapDigit > const &)\n"
    "    std::vector< pj::ToneDigitMapDigit >::vector(std::vector< pj::ToneDigitMapDigit >::size_type)\n"
    "    std::vector< pj::ToneDigitMapDigit >::vector(std::vector< pj::ToneDigitMapDigit >::size_type,std::vector< pj::ToneDigitMapDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_push_back" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitMapVector_push_back" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_push_back" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::ToneDigitMapDigit >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_front" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (std::vector< pj::ToneDigitMapDigit >::value_type *) &((std::vector< pj::ToneDigitMapDigit > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_back" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = (std::vector< pj::ToneDigitMapDigit >::value_type *) &((std::vector< pj::ToneDigitMapDigit > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_assign" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector_assign" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitMapVector_assign" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_assign" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::ToneDigitMapDigit >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type arg2 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_resize" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector_resize" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitMapVector_resize" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_resize" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::ToneDigitMapDigit >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneDigitMapVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDigitMapDigit, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitMapVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::resize(std::vector< pj::ToneDigitMapDigit >::size_type)\n"
    "    std::vector< pj::ToneDigitMapDigit >::resize(std::vector< pj::ToneDigitMapDigit >::size_type,std::vector< pj::ToneDigitMapDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator arg2 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneDigitMapVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_insert" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ToneDigitMapVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp3);
  result = std_vector_Sl_pj_ToneDigitMapDigit_Sg__insert__SWIG_0(arg1,arg2,(pj::ToneDigitMapDigit const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::ToneDigitMapDigit >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::iterator arg2 ;
  std::vector< pj::ToneDigitMapDigit >::size_type arg3 ;
  std::vector< pj::ToneDigitMapDigit >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:ToneDigitMapVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_insert" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "ToneDigitMapVector_insert" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneDigitMapVector_insert" "', argument " "3"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__ToneDigitMapDigit,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ToneDigitMapVector_insert" "', argument " "4"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapVector_insert" "', argument " "4"" of type '" "std::vector< pj::ToneDigitMapDigit >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit >::value_type * >(argp4);
  std_vector_Sl_pj_ToneDigitMapDigit_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::ToneDigitMapDigit const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__ToneDigitMapDigit, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ToneDigitMapVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::ToneDigitMapDigit >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__ToneDigitMapDigit, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_ToneDigitMapVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneDigitMapVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::ToneDigitMapDigit >::insert(std::vector< pj::ToneDigitMapDigit >::iterator,std::vector< pj::ToneDigitMapDigit >::value_type const &)\n"
    "    std::vector< pj::ToneDigitMapDigit >::insert(std::vector< pj::ToneDigitMapDigit >::iterator,std::vector< pj::ToneDigitMapDigit >::size_type,std::vector< pj::ToneDigitMapDigit >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_reserve" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapVector_reserve" "', argument " "2"" of type '" "std::vector< pj::ToneDigitMapDigit >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::ToneDigitMapDigit >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::ToneDigitMapDigit >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapVector_capacity" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  result = ((std::vector< pj::ToneDigitMapDigit > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneDigitMapVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::ToneDigitMapDigit > *arg1 = (std::vector< pj::ToneDigitMapDigit > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneDigitMapVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneDigitMapVector" "', argument " "1"" of type '" "std::vector< pj::ToneDigitMapDigit > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::ToneDigitMapDigit > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ToneDigitMapVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaFormatVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_iterator" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_MediaFormat_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (bool)std_vector_Sl_pj_MediaFormat_Sm__Sg____nonzero__((std::vector< pj::MediaFormat * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___bool__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (bool)std_vector_Sl_pj_MediaFormat_Sm__Sg____bool__((std::vector< pj::MediaFormat * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___len__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = std_vector_Sl_pj_MediaFormat_Sm__Sg____len__((std::vector< pj::MediaFormat * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_pop" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  try {
    result = (std::vector< pj::MediaFormat * >::value_type)std_vector_Sl_pj_MediaFormat_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  std::vector< pj::MediaFormat * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MediaFormatVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val3);
  try {
    result = (std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *)std_vector_Sl_pj_MediaFormat_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  std::vector< pj::MediaFormat * >::difference_type arg3 ;
  std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MediaFormatVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MediaFormatVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val3);
  {
    std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > > *ptr = (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MediaFormatVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaFormatVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  std::vector< pj::MediaFormat * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MediaFormatVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_MediaFormatVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_MediaFormatVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::__setslice__(std::vector< pj::MediaFormat * >::difference_type,std::vector< pj::MediaFormat * >::difference_type,std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &)\n"
    "    std::vector< pj::MediaFormat * >::__setslice__(std::vector< pj::MediaFormat * >::difference_type,std::vector< pj::MediaFormat * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  std::vector< pj::MediaFormat * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MediaFormatVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *)std_vector_Sl_pj_MediaFormat_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > > *ptr = (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MediaFormatVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaFormatVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_MediaFormatVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MediaFormatVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::__delitem__(std::vector< pj::MediaFormat * >::difference_type)\n"
    "    std::vector< pj::MediaFormat * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::MediaFormat * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  try {
    result = (std::vector< pj::MediaFormat * >::value_type)std_vector_Sl_pj_MediaFormat_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_MediaFormatVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MediaFormatVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::MediaFormat * >::__getitem__(std::vector< pj::MediaFormat * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::difference_type arg2 ;
  std::vector< pj::MediaFormat * >::value_type arg3 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MediaFormatVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp3);
  try {
    std_vector_Sl_pj_MediaFormat_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_MediaFormatVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MediaFormatVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__MediaFormat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MediaFormatVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::__setitem__(PySliceObject *,std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > const &)\n"
    "    std::vector< pj::MediaFormat * >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::MediaFormat * >::__setitem__(std::vector< pj::MediaFormat * >::difference_type,std::vector< pj::MediaFormat * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::value_type arg2 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_append" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaFormatVector_append" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp2);
  std_vector_Sl_pj_MediaFormat_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaFormatVector")) SWIG_fail;
  result = (std::vector< pj::MediaFormat * > *)new std::vector< pj::MediaFormat * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MediaFormatVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > > *ptr = (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_MediaFormatVector" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_MediaFormatVector" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::MediaFormat * > *)new std::vector< pj::MediaFormat * >((std::vector< pj::MediaFormat * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_empty" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (bool)((std::vector< pj::MediaFormat * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_size" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = ((std::vector< pj::MediaFormat * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_clear" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_swap" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaFormatVector_swap" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaFormatVector_swap" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::MediaFormat * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = ((std::vector< pj::MediaFormat * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::MediaFormat * >::allocator_type(static_cast< const std::vector< pj::MediaFormat * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__MediaFormat_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_begin" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_end" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_rend" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_MediaFormatVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MediaFormatVector" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val1);
  result = (std::vector< pj::MediaFormat * > *)new std::vector< pj::MediaFormat * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_resize" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector_resize" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::MediaFormat * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_erase" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_erase" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_erase" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_MediaFormat_Sm__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::iterator arg2 ;
  std::vector< pj::MediaFormat * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::MediaFormat * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_erase" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_erase" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_erase" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_erase" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_erase" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_MediaFormat_Sm__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_MediaFormatVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_MediaFormatVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::erase(std::vector< pj::MediaFormat * >::iterator)\n"
    "    std::vector< pj::MediaFormat * >::erase(std::vector< pj::MediaFormat * >::iterator,std::vector< pj::MediaFormat * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * >::size_type arg1 ;
  std::vector< pj::MediaFormat * >::value_type arg2 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::MediaFormat * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_MediaFormatVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_MediaFormatVector" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_MediaFormatVector" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp2);
  result = (std::vector< pj::MediaFormat * > *)new std::vector< pj::MediaFormat * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_MediaFormatVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_MediaFormatVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_MediaFormatVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__MediaFormat, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_MediaFormatVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_MediaFormatVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::vector()\n"
    "    std::vector< pj::MediaFormat * >::vector(std::vector< pj::MediaFormat * > const &)\n"
    "    std::vector< pj::MediaFormat * >::vector(std::vector< pj::MediaFormat * >::size_type)\n"
    "    std::vector< pj::MediaFormat * >::vector(std::vector< pj::MediaFormat * >::size_type,std::vector< pj::MediaFormat * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::value_type arg2 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_push_back" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaFormatVector_push_back" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_front" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (std::vector< pj::MediaFormat * >::value_type)((std::vector< pj::MediaFormat * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_back" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = (std::vector< pj::MediaFormat * >::value_type)((std::vector< pj::MediaFormat * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::size_type arg2 ;
  std::vector< pj::MediaFormat * >::value_type arg3 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_assign" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector_assign" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MediaFormatVector_assign" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::size_type arg2 ;
  std::vector< pj::MediaFormat * >::value_type arg3 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_resize" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector_resize" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MediaFormatVector_resize" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_MediaFormatVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__MediaFormat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MediaFormatVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::resize(std::vector< pj::MediaFormat * >::size_type)\n"
    "    std::vector< pj::MediaFormat * >::resize(std::vector< pj::MediaFormat * >::size_type,std::vector< pj::MediaFormat * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::iterator arg2 ;
  std::vector< pj::MediaFormat * >::value_type arg3 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::MediaFormat * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:MediaFormatVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_insert" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_insert" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_insert" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "MediaFormatVector_insert" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp3);
  result = std_vector_Sl_pj_MediaFormat_Sm__Sg__insert__SWIG_0(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::MediaFormat * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::iterator arg2 ;
  std::vector< pj::MediaFormat * >::size_type arg3 ;
  std::vector< pj::MediaFormat * >::value_type arg4 = (std::vector< pj::MediaFormat * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:MediaFormatVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_insert" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_insert" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "MediaFormatVector_insert" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "MediaFormatVector_insert" "', argument " "3"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "MediaFormatVector_insert" "', argument " "4"" of type '" "std::vector< pj::MediaFormat * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::MediaFormat * >::value_type >(argp4);
  std_vector_Sl_pj_MediaFormat_Sm__Sg__insert__SWIG_1(arg1,arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__MediaFormat, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_MediaFormatVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::MediaFormat*,std::allocator< pj::MediaFormat * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::MediaFormat * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pj__MediaFormat, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_MediaFormatVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'MediaFormatVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::MediaFormat * >::insert(std::vector< pj::MediaFormat * >::iterator,std::vector< pj::MediaFormat * >::value_type)\n"
    "    std::vector< pj::MediaFormat * >::insert(std::vector< pj::MediaFormat * >::iterator,std::vector< pj::MediaFormat * >::size_type,std::vector< pj::MediaFormat * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  std::vector< pj::MediaFormat * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_reserve" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVector_reserve" "', argument " "2"" of type '" "std::vector< pj::MediaFormat * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::MediaFormat * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::MediaFormat * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVector_capacity" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  result = ((std::vector< pj::MediaFormat * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaFormatVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::MediaFormat * > *arg1 = (std::vector< pj::MediaFormat * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaFormatVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaFormatVector" "', argument " "1"" of type '" "std::vector< pj::MediaFormat * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::MediaFormat * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaFormatVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AudioDevInfoVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_iterator" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_AudioDevInfo_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (bool)std_vector_Sl_pj_AudioDevInfo_Sm__Sg____nonzero__((std::vector< pj::AudioDevInfo * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___bool__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (bool)std_vector_Sl_pj_AudioDevInfo_Sm__Sg____bool__((std::vector< pj::AudioDevInfo * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___len__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = std_vector_Sl_pj_AudioDevInfo_Sm__Sg____len__((std::vector< pj::AudioDevInfo * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_pop" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  try {
    result = (std::vector< pj::AudioDevInfo * >::value_type)std_vector_Sl_pj_AudioDevInfo_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioDevInfoVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val3);
  try {
    result = (std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *)std_vector_Sl_pj_AudioDevInfo_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg3 ;
  std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AudioDevInfoVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioDevInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val3);
  {
    std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > *ptr = (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioDevInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioDevInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioDevInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudioDevInfoVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AudioDevInfoVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::__setslice__(std::vector< pj::AudioDevInfo * >::difference_type,std::vector< pj::AudioDevInfo * >::difference_type,std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &)\n"
    "    std::vector< pj::AudioDevInfo * >::__setslice__(std::vector< pj::AudioDevInfo * >::difference_type,std::vector< pj::AudioDevInfo * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioDevInfoVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *)std_vector_Sl_pj_AudioDevInfo_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > *ptr = (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioDevInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioDevInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AudioDevInfoVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudioDevInfoVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::__delitem__(std::vector< pj::AudioDevInfo * >::difference_type)\n"
    "    std::vector< pj::AudioDevInfo * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioDevInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  try {
    result = (std::vector< pj::AudioDevInfo * >::value_type)std_vector_Sl_pj_AudioDevInfo_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AudioDevInfoVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudioDevInfoVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::AudioDevInfo * >::__getitem__(std::vector< pj::AudioDevInfo * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::difference_type arg2 ;
  std::vector< pj::AudioDevInfo * >::value_type arg3 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioDevInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp3);
  try {
    std_vector_Sl_pj_AudioDevInfo_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_AudioDevInfoVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioDevInfoVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__AudioDevInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioDevInfoVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::__setitem__(PySliceObject *,std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > const &)\n"
    "    std::vector< pj::AudioDevInfo * >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::AudioDevInfo * >::__setitem__(std::vector< pj::AudioDevInfo * >::difference_type,std::vector< pj::AudioDevInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::value_type arg2 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_append" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioDevInfoVector_append" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp2);
  std_vector_Sl_pj_AudioDevInfo_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioDevInfoVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AudioDevInfoVector")) SWIG_fail;
  result = (std::vector< pj::AudioDevInfo * > *)new std::vector< pj::AudioDevInfo * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioDevInfoVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AudioDevInfoVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > *ptr = (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_AudioDevInfoVector" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_AudioDevInfoVector" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::AudioDevInfo * > *)new std::vector< pj::AudioDevInfo * >((std::vector< pj::AudioDevInfo * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_empty" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (bool)((std::vector< pj::AudioDevInfo * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_size" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = ((std::vector< pj::AudioDevInfo * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_clear" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_swap" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioDevInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioDevInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::AudioDevInfo * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = ((std::vector< pj::AudioDevInfo * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::AudioDevInfo * >::allocator_type(static_cast< const std::vector< pj::AudioDevInfo * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__AudioDevInfo_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_begin" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_end" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_rend" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioDevInfoVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_AudioDevInfoVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AudioDevInfoVector" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val1);
  result = (std::vector< pj::AudioDevInfo * > *)new std::vector< pj::AudioDevInfo * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioDevInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_AudioDevInfo_Sm__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::iterator arg2 ;
  std::vector< pj::AudioDevInfo * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AudioDevInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_AudioDevInfo_Sm__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_AudioDevInfoVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_AudioDevInfoVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::erase(std::vector< pj::AudioDevInfo * >::iterator)\n"
    "    std::vector< pj::AudioDevInfo * >::erase(std::vector< pj::AudioDevInfo * >::iterator,std::vector< pj::AudioDevInfo * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_AudioDevInfoVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * >::size_type arg1 ;
  std::vector< pj::AudioDevInfo * >::value_type arg2 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::AudioDevInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_AudioDevInfoVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_AudioDevInfoVector" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_AudioDevInfoVector" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp2);
  result = (std::vector< pj::AudioDevInfo * > *)new std::vector< pj::AudioDevInfo * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioDevInfoVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_AudioDevInfoVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_AudioDevInfoVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_AudioDevInfoVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__AudioDevInfo, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_AudioDevInfoVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_AudioDevInfoVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::vector()\n"
    "    std::vector< pj::AudioDevInfo * >::vector(std::vector< pj::AudioDevInfo * > const &)\n"
    "    std::vector< pj::AudioDevInfo * >::vector(std::vector< pj::AudioDevInfo * >::size_type)\n"
    "    std::vector< pj::AudioDevInfo * >::vector(std::vector< pj::AudioDevInfo * >::size_type,std::vector< pj::AudioDevInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::value_type arg2 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_push_back" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioDevInfoVector_push_back" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_front" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (std::vector< pj::AudioDevInfo * >::value_type)((std::vector< pj::AudioDevInfo * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_back" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = (std::vector< pj::AudioDevInfo * >::value_type)((std::vector< pj::AudioDevInfo * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::size_type arg2 ;
  std::vector< pj::AudioDevInfo * >::value_type arg3 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_assign" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector_assign" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioDevInfoVector_assign" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::size_type arg2 ;
  std::vector< pj::AudioDevInfo * >::value_type arg3 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioDevInfoVector_resize" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudioDevInfoVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__AudioDevInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioDevInfoVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::resize(std::vector< pj::AudioDevInfo * >::size_type)\n"
    "    std::vector< pj::AudioDevInfo * >::resize(std::vector< pj::AudioDevInfo * >::size_type,std::vector< pj::AudioDevInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::iterator arg2 ;
  std::vector< pj::AudioDevInfo * >::value_type arg3 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::AudioDevInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioDevInfoVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioDevInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp3);
  result = std_vector_Sl_pj_AudioDevInfo_Sm__Sg__insert__SWIG_0(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::AudioDevInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::iterator arg2 ;
  std::vector< pj::AudioDevInfo * >::size_type arg3 ;
  std::vector< pj::AudioDevInfo * >::value_type arg4 = (std::vector< pj::AudioDevInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AudioDevInfoVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "AudioDevInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioDevInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioDevInfoVector_insert" "', argument " "4"" of type '" "std::vector< pj::AudioDevInfo * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::AudioDevInfo * >::value_type >(argp4);
  std_vector_Sl_pj_AudioDevInfo_Sm__Sg__insert__SWIG_1(arg1,arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__AudioDevInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioDevInfoVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::AudioDevInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pj__AudioDevInfo, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AudioDevInfoVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioDevInfoVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::AudioDevInfo * >::insert(std::vector< pj::AudioDevInfo * >::iterator,std::vector< pj::AudioDevInfo * >::value_type)\n"
    "    std::vector< pj::AudioDevInfo * >::insert(std::vector< pj::AudioDevInfo * >::iterator,std::vector< pj::AudioDevInfo * >::size_type,std::vector< pj::AudioDevInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  std::vector< pj::AudioDevInfo * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfoVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_reserve" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfoVector_reserve" "', argument " "2"" of type '" "std::vector< pj::AudioDevInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::AudioDevInfo * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfoVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::AudioDevInfo * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfoVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfoVector_capacity" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  result = ((std::vector< pj::AudioDevInfo * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioDevInfoVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::AudioDevInfo * > *arg1 = (std::vector< pj::AudioDevInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioDevInfoVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioDevInfoVector" "', argument " "1"" of type '" "std::vector< pj::AudioDevInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::AudioDevInfo * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioDevInfoVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CodecInfoVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_iterator" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_CodecInfo_Sm__Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (bool)std_vector_Sl_pj_CodecInfo_Sm__Sg____nonzero__((std::vector< pj::CodecInfo * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___bool__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (bool)std_vector_Sl_pj_CodecInfo_Sm__Sg____bool__((std::vector< pj::CodecInfo * > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___len__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = std_vector_Sl_pj_CodecInfo_Sm__Sg____len__((std::vector< pj::CodecInfo * > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_pop" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  try {
    result = (std::vector< pj::CodecInfo * >::value_type)std_vector_Sl_pj_CodecInfo_Sm__Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  std::vector< pj::CodecInfo * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CodecInfoVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val3);
  try {
    result = (std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *)std_vector_Sl_pj_CodecInfo_Sm__Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  std::vector< pj::CodecInfo * >::difference_type arg3 ;
  std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CodecInfoVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CodecInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val3);
  {
    std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > *ptr = (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CodecInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CodecInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  std::vector< pj::CodecInfo * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CodecInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CodecInfoVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CodecInfoVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::__setslice__(std::vector< pj::CodecInfo * >::difference_type,std::vector< pj::CodecInfo * >::difference_type,std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &)\n"
    "    std::vector< pj::CodecInfo * >::__setslice__(std::vector< pj::CodecInfo * >::difference_type,std::vector< pj::CodecInfo * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  std::vector< pj::CodecInfo * >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CodecInfoVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val3);
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *)std_vector_Sl_pj_CodecInfo_Sm__Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > *ptr = (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CodecInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CodecInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_CodecInfoVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CodecInfoVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::__delitem__(std::vector< pj::CodecInfo * >::difference_type)\n"
    "    std::vector< pj::CodecInfo * >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CodecInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  try {
    result = (std::vector< pj::CodecInfo * >::value_type)std_vector_Sl_pj_CodecInfo_Sm__Sg____getitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_CodecInfoVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CodecInfoVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::CodecInfo * >::__getitem__(std::vector< pj::CodecInfo * >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::difference_type arg2 ;
  std::vector< pj::CodecInfo * >::value_type arg3 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CodecInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp3);
  try {
    std_vector_Sl_pj_CodecInfo_Sm__Sg____setitem____SWIG_2(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_CodecInfoVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CodecInfoVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__CodecInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CodecInfoVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::__setitem__(PySliceObject *,std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > const &)\n"
    "    std::vector< pj::CodecInfo * >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::CodecInfo * >::__setitem__(std::vector< pj::CodecInfo * >::difference_type,std::vector< pj::CodecInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::value_type arg2 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_append" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CodecInfoVector_append" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp2);
  std_vector_Sl_pj_CodecInfo_Sm__Sg__append(arg1,arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CodecInfoVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CodecInfoVector")) SWIG_fail;
  result = (std::vector< pj::CodecInfo * > *)new std::vector< pj::CodecInfo * >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CodecInfoVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CodecInfoVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > *ptr = (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CodecInfoVector" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CodecInfoVector" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::CodecInfo * > *)new std::vector< pj::CodecInfo * >((std::vector< pj::CodecInfo * > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_empty" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (bool)((std::vector< pj::CodecInfo * > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_size" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = ((std::vector< pj::CodecInfo * > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_clear" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_swap" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CodecInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CodecInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::CodecInfo * > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = ((std::vector< pj::CodecInfo * > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::CodecInfo * >::allocator_type(static_cast< const std::vector< pj::CodecInfo * >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__CodecInfo_p_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_begin" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_end" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_rend" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CodecInfoVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CodecInfoVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CodecInfoVector" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val1);
  result = (std::vector< pj::CodecInfo * > *)new std::vector< pj::CodecInfo * >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CodecInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_CodecInfo_Sm__Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::iterator arg2 ;
  std::vector< pj::CodecInfo * >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::CodecInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_CodecInfo_Sm__Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_CodecInfoVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_CodecInfoVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::erase(std::vector< pj::CodecInfo * >::iterator)\n"
    "    std::vector< pj::CodecInfo * >::erase(std::vector< pj::CodecInfo * >::iterator,std::vector< pj::CodecInfo * >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_CodecInfoVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * >::size_type arg1 ;
  std::vector< pj::CodecInfo * >::value_type arg2 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CodecInfo * > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CodecInfoVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CodecInfoVector" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CodecInfoVector" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp2);
  result = (std::vector< pj::CodecInfo * > *)new std::vector< pj::CodecInfo * >(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CodecInfoVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CodecInfoVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CodecInfoVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CodecInfoVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__CodecInfo, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CodecInfoVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CodecInfoVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::vector()\n"
    "    std::vector< pj::CodecInfo * >::vector(std::vector< pj::CodecInfo * > const &)\n"
    "    std::vector< pj::CodecInfo * >::vector(std::vector< pj::CodecInfo * >::size_type)\n"
    "    std::vector< pj::CodecInfo * >::vector(std::vector< pj::CodecInfo * >::size_type,std::vector< pj::CodecInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::value_type arg2 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_push_back" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CodecInfoVector_push_back" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp2);
  (arg1)->push_back(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_front" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (std::vector< pj::CodecInfo * >::value_type)((std::vector< pj::CodecInfo * > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_back" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = (std::vector< pj::CodecInfo * >::value_type)((std::vector< pj::CodecInfo * > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::size_type arg2 ;
  std::vector< pj::CodecInfo * >::value_type arg3 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_assign" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector_assign" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CodecInfoVector_assign" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp3);
  (arg1)->assign(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::size_type arg2 ;
  std::vector< pj::CodecInfo * >::value_type arg3 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CodecInfoVector_resize" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp3);
  (arg1)->resize(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CodecInfoVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__CodecInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CodecInfoVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::resize(std::vector< pj::CodecInfo * >::size_type)\n"
    "    std::vector< pj::CodecInfo * >::resize(std::vector< pj::CodecInfo * >::size_type,std::vector< pj::CodecInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::iterator arg2 ;
  std::vector< pj::CodecInfo * >::value_type arg3 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::CodecInfo * >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CodecInfoVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CodecInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp3);
  result = std_vector_Sl_pj_CodecInfo_Sm__Sg__insert__SWIG_0(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CodecInfo * >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::iterator arg2 ;
  std::vector< pj::CodecInfo * >::size_type arg3 ;
  std::vector< pj::CodecInfo * >::value_type arg4 = (std::vector< pj::CodecInfo * >::value_type) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CodecInfoVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CodecInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CodecInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CodecInfoVector_insert" "', argument " "4"" of type '" "std::vector< pj::CodecInfo * >::value_type""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::CodecInfo * >::value_type >(argp4);
  std_vector_Sl_pj_CodecInfo_Sm__Sg__insert__SWIG_1(arg1,arg2,arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__CodecInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CodecInfoVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CodecInfo * >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_pj__CodecInfo, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CodecInfoVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CodecInfoVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CodecInfo * >::insert(std::vector< pj::CodecInfo * >::iterator,std::vector< pj::CodecInfo * >::value_type)\n"
    "    std::vector< pj::CodecInfo * >::insert(std::vector< pj::CodecInfo * >::iterator,std::vector< pj::CodecInfo * >::size_type,std::vector< pj::CodecInfo * >::value_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  std::vector< pj::CodecInfo * >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfoVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_reserve" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfoVector_reserve" "', argument " "2"" of type '" "std::vector< pj::CodecInfo * >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CodecInfo * >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfoVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CodecInfo * >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfoVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfoVector_capacity" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  result = ((std::vector< pj::CodecInfo * > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CodecInfoVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CodecInfo * > *arg1 = (std::vector< pj::CodecInfo * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CodecInfoVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CodecInfoVector" "', argument " "1"" of type '" "std::vector< pj::CodecInfo * > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CodecInfo * > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CodecInfoVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaFormat_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormat *arg1 = (pj::MediaFormat *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormat_id_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormat_id_set" "', argument " "1"" of type '" "pj::MediaFormat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormat_id_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormat_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormat *arg1 = (pj::MediaFormat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormat_id_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormat_id_get" "', argument " "1"" of type '" "pj::MediaFormat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormat * >(argp1);
  result = (pj_uint32_t) ((arg1)->id);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormat_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormat *arg1 = (pj::MediaFormat *) 0 ;
  pjmedia_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormat_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormat_type_set" "', argument " "1"" of type '" "pj::MediaFormat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormat_type_set" "', argument " "2"" of type '" "pjmedia_type""'");
  } 
  arg2 = static_cast< pjmedia_type >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormat_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormat *arg1 = (pj::MediaFormat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormat_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormat_type_get" "', argument " "1"" of type '" "pj::MediaFormat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormat * >(argp1);
  result = (pjmedia_type) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaFormat")) SWIG_fail;
  result = (pj::MediaFormat *)new pj::MediaFormat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormat *arg1 = (pj::MediaFormat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaFormat" "', argument " "1"" of type '" "pj::MediaFormat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormat * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaFormat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaFormat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaFormatAudio_clockRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatAudio_clockRate_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_clockRate_set" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatAudio_clockRate_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->clockRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_clockRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatAudio_clockRate_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_clockRate_get" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  result = (unsigned int) ((arg1)->clockRate);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_channelCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatAudio_channelCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_channelCount_set" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatAudio_channelCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->channelCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_channelCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatAudio_channelCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_channelCount_get" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  result = (unsigned int) ((arg1)->channelCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_frameTimeUsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatAudio_frameTimeUsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_frameTimeUsec_set" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatAudio_frameTimeUsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->frameTimeUsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_frameTimeUsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatAudio_frameTimeUsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_frameTimeUsec_get" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  result = (unsigned int) ((arg1)->frameTimeUsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_bitsPerSample_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatAudio_bitsPerSample_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_bitsPerSample_set" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatAudio_bitsPerSample_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->bitsPerSample = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_bitsPerSample_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatAudio_bitsPerSample_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_bitsPerSample_get" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  result = (unsigned int) ((arg1)->bitsPerSample);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_avgBps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatAudio_avgBps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_avgBps_set" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatAudio_avgBps_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->avgBps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_avgBps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatAudio_avgBps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_avgBps_get" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  result = (pj_uint32_t) ((arg1)->avgBps);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_maxBps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatAudio_maxBps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_maxBps_set" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatAudio_maxBps_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->maxBps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatAudio_maxBps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatAudio_maxBps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatAudio_maxBps_get" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  result = (pj_uint32_t) ((arg1)->maxBps);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatAudio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaFormatAudio")) SWIG_fail;
  result = (pj::MediaFormatAudio *)new pj::MediaFormatAudio();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormatAudio, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaFormatAudio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatAudio *arg1 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaFormatAudio",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatAudio, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaFormatAudio" "', argument " "1"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatAudio * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaFormatAudio_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaFormatAudio, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaFormatVideo_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVideo_width_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_width_set" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVideo_width_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->width = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVideo_width_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_width_get" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  result = (unsigned int) ((arg1)->width);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVideo_height_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_height_set" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVideo_height_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->height = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVideo_height_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_height_get" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  result = (unsigned int) ((arg1)->height);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_fpsNum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVideo_fpsNum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_fpsNum_set" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVideo_fpsNum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->fpsNum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_fpsNum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVideo_fpsNum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_fpsNum_get" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  result = (int) ((arg1)->fpsNum);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_fpsDenum_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVideo_fpsDenum_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_fpsDenum_set" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVideo_fpsDenum_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->fpsDenum = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_fpsDenum_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVideo_fpsDenum_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_fpsDenum_get" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  result = (int) ((arg1)->fpsDenum);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_avgBps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVideo_avgBps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_avgBps_set" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVideo_avgBps_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->avgBps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_avgBps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVideo_avgBps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_avgBps_get" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  result = (pj_uint32_t) ((arg1)->avgBps);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_maxBps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFormatVideo_maxBps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_maxBps_set" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFormatVideo_maxBps_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->maxBps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFormatVideo_maxBps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFormatVideo_maxBps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFormatVideo_maxBps_get" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  result = (pj_uint32_t) ((arg1)->maxBps);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFormatVideo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaFormatVideo")) SWIG_fail;
  result = (pj::MediaFormatVideo *)new pj::MediaFormatVideo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormatVideo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaFormatVideo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFormatVideo *arg1 = (pj::MediaFormatVideo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaFormatVideo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFormatVideo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaFormatVideo" "', argument " "1"" of type '" "pj::MediaFormatVideo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFormatVideo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaFormatVideo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaFormatVideo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ConfPortInfo_portId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ConfPortInfo_portId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_portId_set" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConfPortInfo_portId_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->portId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_portId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConfPortInfo_portId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_portId_get" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  result = (int) ((arg1)->portId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ConfPortInfo_name_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_name_set" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConfPortInfo_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ConfPortInfo_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->name = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConfPortInfo_name_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_name_get" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  result = (pj::string *) & ((arg1)->name);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_format_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  pj::MediaFormatAudio *arg2 = (pj::MediaFormatAudio *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ConfPortInfo_format_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_format_set" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConfPortInfo_format_set" "', argument " "2"" of type '" "pj::MediaFormatAudio *""'"); 
  }
  arg2 = reinterpret_cast< pj::MediaFormatAudio * >(argp2);
  if (arg1) (arg1)->format = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_format_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaFormatAudio *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConfPortInfo_format_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_format_get" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  result = (pj::MediaFormatAudio *)& ((arg1)->format);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFormatAudio, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_txLevelAdj_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ConfPortInfo_txLevelAdj_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_txLevelAdj_set" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConfPortInfo_txLevelAdj_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->txLevelAdj = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_txLevelAdj_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConfPortInfo_txLevelAdj_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_txLevelAdj_get" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  result = (float) ((arg1)->txLevelAdj);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_rxLevelAdj_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ConfPortInfo_rxLevelAdj_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_rxLevelAdj_set" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ConfPortInfo_rxLevelAdj_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->rxLevelAdj = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_rxLevelAdj_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConfPortInfo_rxLevelAdj_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_rxLevelAdj_get" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  result = (float) ((arg1)->rxLevelAdj);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_listeners_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  pj::IntVector *arg2 = (pj::IntVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ConfPortInfo_listeners_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_listeners_set" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConfPortInfo_listeners_set" "', argument " "2"" of type '" "pj::IntVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::IntVector * >(argp2);
  if (arg1) (arg1)->listeners = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ConfPortInfo_listeners_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::IntVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ConfPortInfo_listeners_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConfPortInfo_listeners_get" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  result = (pj::IntVector *)& ((arg1)->listeners);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_int_std__allocatorT_int_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ConfPortInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ConfPortInfo")) SWIG_fail;
  result = (pj::ConfPortInfo *)new pj::ConfPortInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ConfPortInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ConfPortInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ConfPortInfo *arg1 = (pj::ConfPortInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ConfPortInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ConfPortInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ConfPortInfo" "', argument " "1"" of type '" "pj::ConfPortInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::ConfPortInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ConfPortInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__ConfPortInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_Media(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Media *arg1 = (pj::Media *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Media",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Media, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Media" "', argument " "1"" of type '" "pj::Media *""'"); 
  }
  arg1 = reinterpret_cast< pj::Media * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Media_getType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Media *arg1 = (pj::Media *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Media_getType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Media, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Media_getType" "', argument " "1"" of type '" "pj::Media const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Media * >(argp1);
  result = (pjmedia_type)((pj::Media const *)arg1)->getType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Media_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Media, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AudioMedia_getPortInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ConfPortInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMedia_getPortInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_getPortInfo" "', argument " "1"" of type '" "pj::AudioMedia const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  try {
    result = ((pj::AudioMedia const *)arg1)->getPortInfo();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ConfPortInfo(static_cast< const pj::ConfPortInfo& >(result))), SWIGTYPE_p_pj__ConfPortInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_getPortId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMedia_getPortId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_getPortId" "', argument " "1"" of type '" "pj::AudioMedia const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  result = (int)((pj::AudioMedia const *)arg1)->getPortId();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_getPortInfoFromId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ConfPortInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMedia_getPortInfoFromId",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "AudioMedia_getPortInfoFromId" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  try {
    result = pj::AudioMedia::getPortInfoFromId(arg1);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::ConfPortInfo(static_cast< const pj::ConfPortInfo& >(result))), SWIGTYPE_p_pj__ConfPortInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_startTransmit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  pj::AudioMedia *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMedia_startTransmit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_startTransmit" "', argument " "1"" of type '" "pj::AudioMedia const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AudioMedia,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMedia_startTransmit" "', argument " "2"" of type '" "pj::AudioMedia const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMedia_startTransmit" "', argument " "2"" of type '" "pj::AudioMedia const &""'"); 
  }
  arg2 = reinterpret_cast< pj::AudioMedia * >(argp2);
  try {
    ((pj::AudioMedia const *)arg1)->startTransmit((pj::AudioMedia const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_stopTransmit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  pj::AudioMedia *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMedia_stopTransmit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_stopTransmit" "', argument " "1"" of type '" "pj::AudioMedia const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AudioMedia,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMedia_stopTransmit" "', argument " "2"" of type '" "pj::AudioMedia const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMedia_stopTransmit" "', argument " "2"" of type '" "pj::AudioMedia const &""'"); 
  }
  arg2 = reinterpret_cast< pj::AudioMedia * >(argp2);
  try {
    ((pj::AudioMedia const *)arg1)->stopTransmit((pj::AudioMedia const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_adjustRxLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMedia_adjustRxLevel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_adjustRxLevel" "', argument " "1"" of type '" "pj::AudioMedia *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMedia_adjustRxLevel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  try {
    (arg1)->adjustRxLevel(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_adjustTxLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMedia_adjustTxLevel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_adjustTxLevel" "', argument " "1"" of type '" "pj::AudioMedia *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMedia_adjustTxLevel" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  try {
    (arg1)->adjustTxLevel(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_getRxLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMedia_getRxLevel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_getRxLevel" "', argument " "1"" of type '" "pj::AudioMedia const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  try {
    result = (unsigned int)((pj::AudioMedia const *)arg1)->getRxLevel();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_getTxLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMedia_getTxLevel",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_getTxLevel" "', argument " "1"" of type '" "pj::AudioMedia const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  try {
    result = (unsigned int)((pj::AudioMedia const *)arg1)->getTxLevel();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMedia_typecastFromMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Media *arg1 = (pj::Media *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMedia *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMedia_typecastFromMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Media, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMedia_typecastFromMedia" "', argument " "1"" of type '" "pj::Media *""'"); 
  }
  arg1 = reinterpret_cast< pj::Media * >(argp1);
  result = (pj::AudioMedia *)pj::AudioMedia::typecastFromMedia(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioMedia" "', argument " "1"" of type '" "pj::AudioMedia *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioMedia_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AudioMedia, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_formatId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  pjmedia_format_id arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayerInfo_formatId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_formatId_set" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaPlayerInfo_formatId_set" "', argument " "2"" of type '" "pjmedia_format_id""'");
  } 
  arg2 = static_cast< pjmedia_format_id >(val2);
  if (arg1) (arg1)->formatId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_formatId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_format_id result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayerInfo_formatId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_formatId_get" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  result = (pjmedia_format_id) ((arg1)->formatId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_payloadBitsPerSample_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayerInfo_payloadBitsPerSample_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_payloadBitsPerSample_set" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaPlayerInfo_payloadBitsPerSample_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->payloadBitsPerSample = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_payloadBitsPerSample_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayerInfo_payloadBitsPerSample_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_payloadBitsPerSample_get" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  result = (unsigned int) ((arg1)->payloadBitsPerSample);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_sizeBytes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayerInfo_sizeBytes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_sizeBytes_set" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaPlayerInfo_sizeBytes_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->sizeBytes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_sizeBytes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayerInfo_sizeBytes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_sizeBytes_get" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  result = (pj_uint32_t) ((arg1)->sizeBytes);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_sizeSamples_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayerInfo_sizeSamples_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_sizeSamples_set" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaPlayerInfo_sizeSamples_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->sizeSamples = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayerInfo_sizeSamples_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayerInfo_sizeSamples_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayerInfo_sizeSamples_get" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  result = (pj_uint32_t) ((arg1)->sizeSamples);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioMediaPlayerInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AudioMediaPlayerInfo")) SWIG_fail;
  result = (pj::AudioMediaPlayerInfo *)new pj::AudioMediaPlayerInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMediaPlayerInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioMediaPlayerInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayerInfo *arg1 = (pj::AudioMediaPlayerInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioMediaPlayerInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayerInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioMediaPlayerInfo" "', argument " "1"" of type '" "pj::AudioMediaPlayerInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayerInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioMediaPlayerInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AudioMediaPlayerInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AudioMediaPlayer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AudioMediaPlayer")) SWIG_fail;
  result = (pj::AudioMediaPlayer *)new pj::AudioMediaPlayer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMediaPlayer, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlayer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  pj::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaPlayer_createPlayer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_createPlayer" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaPlayer_createPlayer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlayer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaPlayer_createPlayer" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->createPlayer((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlayer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayer_createPlayer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_createPlayer" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaPlayer_createPlayer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlayer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->createPlayer((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlayer(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaPlayer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_AudioMediaPlayer_createPlayer__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaPlayer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudioMediaPlayer_createPlayer__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaPlayer_createPlayer'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudioMediaPlayer::createPlayer(pj::string const &,unsigned int)\n"
    "    pj::AudioMediaPlayer::createPlayer(pj::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlaylist__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  pj::StringVector *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  unsigned int arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AudioMediaPlayer_createPlaylist",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  try {
    (arg1)->createPlaylist((pj::StringVector const &)*arg2,(pj::string const &)*arg3,arg4);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlaylist__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  pj::StringVector *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaPlayer_createPlaylist",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    (arg1)->createPlaylist((pj::StringVector const &)*arg2,(pj::string const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlaylist__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  pj::StringVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayer_createPlaylist",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaPlayer_createPlaylist" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->createPlaylist((pj::StringVector const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_createPlaylist(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaPlayer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<std::string,std::allocator< std::string > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_AudioMediaPlayer_createPlaylist__SWIG_2(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaPlayer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<std::string,std::allocator< std::string > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_AudioMediaPlayer_createPlaylist__SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaPlayer, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<std::string,std::allocator< std::string > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_AudioMediaPlayer_createPlaylist__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaPlayer_createPlaylist'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudioMediaPlayer::createPlaylist(pj::StringVector const &,pj::string const &,unsigned int)\n"
    "    pj::AudioMediaPlayer::createPlaylist(pj::StringVector const &,pj::string const &)\n"
    "    pj::AudioMediaPlayer::createPlaylist(pj::StringVector const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_getInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMediaPlayerInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayer_getInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_getInfo" "', argument " "1"" of type '" "pj::AudioMediaPlayer const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  try {
    result = ((pj::AudioMediaPlayer const *)arg1)->getInfo();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::AudioMediaPlayerInfo(static_cast< const pj::AudioMediaPlayerInfo& >(result))), SWIGTYPE_p_pj__AudioMediaPlayerInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_getPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayer_getPos",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_getPos" "', argument " "1"" of type '" "pj::AudioMediaPlayer const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  try {
    result = (pj_uint32_t)((pj::AudioMediaPlayer const *)arg1)->getPos();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_setPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaPlayer_setPos",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_setPos" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioMediaPlayer_setPos" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  try {
    (arg1)->setPos(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_typecastFromAudioMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMediaPlayer *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayer_typecastFromAudioMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_typecastFromAudioMedia" "', argument " "1"" of type '" "pj::AudioMedia *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  result = (pj::AudioMediaPlayer *)pj::AudioMediaPlayer::typecastFromAudioMedia(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioMediaPlayer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioMediaPlayer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioMediaPlayer" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaPlayer_onEof(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaPlayer *arg1 = (pj::AudioMediaPlayer *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaPlayer_onEof",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaPlayer, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaPlayer_onEof" "', argument " "1"" of type '" "pj::AudioMediaPlayer *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaPlayer * >(argp1);
  result = (bool)(arg1)->onEof();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioMediaPlayer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AudioMediaPlayer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_AudioMediaRecorder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaRecorder *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AudioMediaRecorder")) SWIG_fail;
  result = (pj::AudioMediaRecorder *)new pj::AudioMediaRecorder();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMediaRecorder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaRecorder_createRecorder__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaRecorder *arg1 = (pj::AudioMediaRecorder *) 0 ;
  pj::string *arg2 = 0 ;
  unsigned int arg3 ;
  pj_ssize_t arg4 ;
  unsigned int arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  unsigned int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOOO:AudioMediaRecorder_createRecorder",&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaRecorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "1"" of type '" "pj::AudioMediaRecorder *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaRecorder * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "4"" of type '" "pj_ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaRecorder_createRecorder" "', argument " "4"" of type '" "pj_ssize_t""'");
    } else {
      pj_ssize_t * temp = reinterpret_cast< pj_ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "5"" of type '" "unsigned int""'");
  } 
  arg5 = static_cast< unsigned int >(val5);
  try {
    (arg1)->createRecorder((pj::string const &)*arg2,arg3,arg4,arg5);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaRecorder_createRecorder__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaRecorder *arg1 = (pj::AudioMediaRecorder *) 0 ;
  pj::string *arg2 = 0 ;
  unsigned int arg3 ;
  pj_ssize_t arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  void *argp4 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:AudioMediaRecorder_createRecorder",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaRecorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "1"" of type '" "pj::AudioMediaRecorder *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaRecorder * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  {
    res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj_ssize_t,  0  | 0);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "4"" of type '" "pj_ssize_t""'"); 
    }  
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaRecorder_createRecorder" "', argument " "4"" of type '" "pj_ssize_t""'");
    } else {
      pj_ssize_t * temp = reinterpret_cast< pj_ssize_t * >(argp4);
      arg4 = *temp;
      if (SWIG_IsNewObj(res4)) delete temp;
    }
  }
  try {
    (arg1)->createRecorder((pj::string const &)*arg2,arg3,arg4);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaRecorder_createRecorder__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaRecorder *arg1 = (pj::AudioMediaRecorder *) 0 ;
  pj::string *arg2 = 0 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudioMediaRecorder_createRecorder",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaRecorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "1"" of type '" "pj::AudioMediaRecorder *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaRecorder * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->createRecorder((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaRecorder_createRecorder__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaRecorder *arg1 = (pj::AudioMediaRecorder *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioMediaRecorder_createRecorder",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaRecorder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "1"" of type '" "pj::AudioMediaRecorder *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaRecorder * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioMediaRecorder_createRecorder" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->createRecorder((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioMediaRecorder_createRecorder(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[6];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaRecorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_AudioMediaRecorder_createRecorder__SWIG_3(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaRecorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudioMediaRecorder_createRecorder__SWIG_2(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaRecorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_AudioMediaRecorder_createRecorder__SWIG_1(self, args);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudioMediaRecorder, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj_ssize_t, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_AudioMediaRecorder_createRecorder__SWIG_0(self, args);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudioMediaRecorder_createRecorder'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudioMediaRecorder::createRecorder(pj::string const &,unsigned int,pj_ssize_t,unsigned int)\n"
    "    pj::AudioMediaRecorder::createRecorder(pj::string const &,unsigned int,pj_ssize_t)\n"
    "    pj::AudioMediaRecorder::createRecorder(pj::string const &,unsigned int)\n"
    "    pj::AudioMediaRecorder::createRecorder(pj::string const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudioMediaRecorder_typecastFromAudioMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMedia *arg1 = (pj::AudioMedia *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMediaRecorder *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioMediaRecorder_typecastFromAudioMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioMediaRecorder_typecastFromAudioMedia" "', argument " "1"" of type '" "pj::AudioMedia *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMedia * >(argp1);
  result = (pj::AudioMediaRecorder *)pj::AudioMediaRecorder::typecastFromAudioMedia(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMediaRecorder, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioMediaRecorder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioMediaRecorder *arg1 = (pj::AudioMediaRecorder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioMediaRecorder",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioMediaRecorder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioMediaRecorder" "', argument " "1"" of type '" "pj::AudioMediaRecorder *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioMediaRecorder * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioMediaRecorder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AudioMediaRecorder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ToneDesc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDesc *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneDesc")) SWIG_fail;
  result = (pj::ToneDesc *)new pj::ToneDesc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDesc, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneDesc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDesc *arg1 = (pj::ToneDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneDesc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDesc, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneDesc" "', argument " "1"" of type '" "pj::ToneDesc *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDesc * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ToneDesc_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__ToneDesc, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ToneDigit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneDigit")) SWIG_fail;
  result = (pj::ToneDigit *)new pj::ToneDigit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneDigit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigit *arg1 = (pj::ToneDigit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneDigit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneDigit" "', argument " "1"" of type '" "pj::ToneDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigit * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ToneDigit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__ToneDigit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ToneDigitMapDigit_digit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapDigit_digit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapDigit_digit_set" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneDigitMapDigit_digit_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneDigitMapDigit_digit_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->digit = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapDigit_digit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapDigit_digit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapDigit_digit_get" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  result = (pj::string *) & ((arg1)->digit);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapDigit_freq1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapDigit_freq1_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapDigit_freq1_set" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapDigit_freq1_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->freq1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapDigit_freq1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapDigit_freq1_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapDigit_freq1_get" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  result = (int) ((arg1)->freq1);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapDigit_freq2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneDigitMapDigit_freq2_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapDigit_freq2_set" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneDigitMapDigit_freq2_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->freq2 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneDigitMapDigit_freq2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneDigitMapDigit_freq2_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneDigitMapDigit_freq2_get" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  result = (int) ((arg1)->freq2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ToneDigitMapDigit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneDigitMapDigit")) SWIG_fail;
  result = (pj::ToneDigitMapDigit *)new pj::ToneDigitMapDigit();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneDigitMapDigit, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneDigitMapDigit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneDigitMapDigit *arg1 = (pj::ToneDigitMapDigit *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneDigitMapDigit",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneDigitMapDigit, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneDigitMapDigit" "', argument " "1"" of type '" "pj::ToneDigitMapDigit *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneDigitMapDigit * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ToneDigitMapDigit_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__ToneDigitMapDigit, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ToneGenerator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_ToneGenerator")) SWIG_fail;
  result = (pj::ToneGenerator *)new pj::ToneGenerator();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ToneGenerator, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ToneGenerator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_ToneGenerator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ToneGenerator" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_createToneGenerator__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneGenerator_createToneGenerator",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_createToneGenerator" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneGenerator_createToneGenerator" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneGenerator_createToneGenerator" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->createToneGenerator(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_createToneGenerator__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneGenerator_createToneGenerator",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_createToneGenerator" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ToneGenerator_createToneGenerator" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    (arg1)->createToneGenerator(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_createToneGenerator__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneGenerator_createToneGenerator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_createToneGenerator" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  try {
    (arg1)->createToneGenerator();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_createToneGenerator(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ToneGenerator_createToneGenerator__SWIG_2(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_ToneGenerator_createToneGenerator__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ToneGenerator_createToneGenerator__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneGenerator_createToneGenerator'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ToneGenerator::createToneGenerator(unsigned int,unsigned int)\n"
    "    pj::ToneGenerator::createToneGenerator(unsigned int)\n"
    "    pj::ToneGenerator::createToneGenerator()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_isBusy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneGenerator_isBusy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_isBusy" "', argument " "1"" of type '" "pj::ToneGenerator const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  result = (bool)((pj::ToneGenerator const *)arg1)->isBusy();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneGenerator_stop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_stop" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  try {
    (arg1)->stop();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneGenerator_rewind",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_rewind" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  try {
    (arg1)->rewind();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_play__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  pj::ToneDescVector *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneGenerator_play",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_play" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  {
    std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *ptr = (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneGenerator_play" "', argument " "2"" of type '" "pj::ToneDescVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneGenerator_play" "', argument " "2"" of type '" "pj::ToneDescVector const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneGenerator_play" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->play((pj::ToneDescVector const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_play__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  pj::ToneDescVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneGenerator_play",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_play" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  {
    std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *ptr = (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneGenerator_play" "', argument " "2"" of type '" "pj::ToneDescVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneGenerator_play" "', argument " "2"" of type '" "pj::ToneDescVector const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->play((pj::ToneDescVector const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_play(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ToneGenerator_play__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<pj::ToneDesc,std::allocator< pj::ToneDesc > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ToneGenerator_play__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneGenerator_play'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ToneGenerator::play(pj::ToneDescVector const &,bool)\n"
    "    pj::ToneGenerator::play(pj::ToneDescVector const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_playDigits__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  pj::ToneDigitVector *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:ToneGenerator_playDigits",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_playDigits" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  {
    std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *ptr = (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneGenerator_playDigits" "', argument " "2"" of type '" "pj::ToneDigitVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneGenerator_playDigits" "', argument " "2"" of type '" "pj::ToneDigitVector const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ToneGenerator_playDigits" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->playDigits((pj::ToneDigitVector const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_playDigits__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  pj::ToneDigitVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneGenerator_playDigits",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_playDigits" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  {
    std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *ptr = (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneGenerator_playDigits" "', argument " "2"" of type '" "pj::ToneDigitVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneGenerator_playDigits" "', argument " "2"" of type '" "pj::ToneDigitVector const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->playDigits((pj::ToneDigitVector const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_playDigits(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ToneGenerator_playDigits__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__ToneGenerator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = swig::asptr(argv[1], (std::vector<pj::ToneDigit,std::allocator< pj::ToneDigit > >**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_ToneGenerator_playDigits__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ToneGenerator_playDigits'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::ToneGenerator::playDigits(pj::ToneDigitVector const &,bool)\n"
    "    pj::ToneGenerator::playDigits(pj::ToneDigitVector const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_getDigitMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ToneDigitMapVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:ToneGenerator_getDigitMap",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_getDigitMap" "', argument " "1"" of type '" "pj::ToneGenerator const *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  try {
    result = ((pj::ToneGenerator const *)arg1)->getDigitMap();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ToneGenerator_setDigitMap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::ToneGenerator *arg1 = (pj::ToneGenerator *) 0 ;
  pj::ToneDigitMapVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:ToneGenerator_setDigitMap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__ToneGenerator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ToneGenerator_setDigitMap" "', argument " "1"" of type '" "pj::ToneGenerator *""'"); 
  }
  arg1 = reinterpret_cast< pj::ToneGenerator * >(argp1);
  {
    std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *ptr = (std::vector<pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ToneGenerator_setDigitMap" "', argument " "2"" of type '" "pj::ToneDigitMapVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ToneGenerator_setDigitMap" "', argument " "2"" of type '" "pj::ToneDigitMapVector const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->setDigitMap((pj::ToneDigitMapVector const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *ToneGenerator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__ToneGenerator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AudioDevInfo_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_name_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_name_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioDevInfo_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioDevInfo_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->name = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_name_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_name_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (pj::string *) & ((arg1)->name);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_inputCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_inputCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_inputCount_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfo_inputCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->inputCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_inputCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_inputCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_inputCount_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (unsigned int) ((arg1)->inputCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_outputCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_outputCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_outputCount_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfo_outputCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->outputCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_outputCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_outputCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_outputCount_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (unsigned int) ((arg1)->outputCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_defaultSamplesPerSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_defaultSamplesPerSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_defaultSamplesPerSec_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfo_defaultSamplesPerSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->defaultSamplesPerSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_defaultSamplesPerSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_defaultSamplesPerSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_defaultSamplesPerSec_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (unsigned int) ((arg1)->defaultSamplesPerSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_driver_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_driver_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_driver_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioDevInfo_driver_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudioDevInfo_driver_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->driver = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_driver_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_driver_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_driver_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (pj::string *) & ((arg1)->driver);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_caps_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_caps_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_caps_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfo_caps_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->caps = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_caps_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_caps_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_caps_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (unsigned int) ((arg1)->caps);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_routes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_routes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_routes_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudioDevInfo_routes_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->routes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_routes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_routes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_routes_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (unsigned int) ((arg1)->routes);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_extFmt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  pj::MediaFormatVector *arg2 = (pj::MediaFormatVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudioDevInfo_extFmt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_extFmt_set" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudioDevInfo_extFmt_set" "', argument " "2"" of type '" "pj::MediaFormatVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::MediaFormatVector * >(argp2);
  if (arg1) (arg1)->extFmt = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudioDevInfo_extFmt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaFormatVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudioDevInfo_extFmt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudioDevInfo_extFmt_get" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  result = (pj::MediaFormatVector *)& ((arg1)->extFmt);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AudioDevInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *arg1 = (pj::AudioDevInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AudioDevInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudioDevInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AudioDevInfo" "', argument " "1"" of type '" "pj::AudioDevInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudioDevInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AudioDevInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudioDevInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AudioDevInfo")) SWIG_fail;
  result = (pj::AudioDevInfo *)new pj::AudioDevInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioDevInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudioDevInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AudioDevInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AudDevManager_getCaptureDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getCaptureDev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getCaptureDev" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (int)((pj::AudDevManager const *)arg1)->getCaptureDev();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getCaptureDevMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMedia *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getCaptureDevMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getCaptureDevMedia" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (pj::AudioMedia *) &(arg1)->getCaptureDevMedia();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getPlaybackDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getPlaybackDev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getPlaybackDev" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (int)((pj::AudDevManager const *)arg1)->getPlaybackDev();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getPlaybackDevMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMedia *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getPlaybackDevMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getPlaybackDevMedia" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (pj::AudioMedia *) &(arg1)->getPlaybackDevMedia();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudioMedia, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setCaptureDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setCaptureDev",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setCaptureDev" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setCaptureDev" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  try {
    ((pj::AudDevManager const *)arg1)->setCaptureDev(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setPlaybackDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setPlaybackDev",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setPlaybackDev" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setPlaybackDev" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  try {
    ((pj::AudDevManager const *)arg1)->setPlaybackDev(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_enumDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioDevInfoVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_enumDev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_enumDev" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (pj::AudioDevInfoVector *) &(arg1)->enumDev();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<pj::AudioDevInfo*,std::allocator< pj::AudioDevInfo * > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setNullDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_setNullDev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setNullDev" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    (arg1)->setNullDev();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setNoDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaPort *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_setNoDev",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setNoDev" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  result = (pj::MediaPort *)(arg1)->setNoDev();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setEcOptions(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setEcOptions",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setEcOptions" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setEcOptions" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setEcOptions" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  try {
    (arg1)->setEcOptions(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getEcTail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getEcTail",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getEcTail" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getEcTail();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_sndIsActive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_sndIsActive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_sndIsActive" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  result = (bool)((pj::AudDevManager const *)arg1)->sndIsActive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_refreshDevs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_refreshDevs",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_refreshDevs" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    (arg1)->refreshDevs();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getDevCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getDevCount",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getDevCount" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  result = (unsigned int)((pj::AudDevManager const *)arg1)->getDevCount();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getDevInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::AudioDevInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_getDevInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getDevInfo" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_getDevInfo" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  try {
    result = ((pj::AudDevManager const *)arg1)->getDevInfo(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::AudioDevInfo(static_cast< const pj::AudioDevInfo& >(result))), SWIGTYPE_p_pj__AudioDevInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_lookupDev(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pj::string *arg2 = 0 ;
  pj::string *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_lookupDev",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_lookupDev" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudDevManager_lookupDev" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudDevManager_lookupDev" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "AudDevManager_lookupDev" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudDevManager_lookupDev" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    result = (int)((pj::AudDevManager const *)arg1)->lookupDev((pj::string const &)*arg2,(pj::string const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_capName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pjmedia_aud_dev_cap arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_capName",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_capName" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_capName" "', argument " "2"" of type '" "pjmedia_aud_dev_cap""'");
  } 
  arg2 = static_cast< pjmedia_aud_dev_cap >(val2);
  result = ((pj::AudDevManager const *)arg1)->capName(arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setExtFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pj::MediaFormatAudio *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setExtFormat",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setExtFormat" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__MediaFormatAudio,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudDevManager_setExtFormat" "', argument " "2"" of type '" "pj::MediaFormatAudio const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudDevManager_setExtFormat" "', argument " "2"" of type '" "pj::MediaFormatAudio const &""'"); 
  }
  arg2 = reinterpret_cast< pj::MediaFormatAudio * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setExtFormat" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setExtFormat((pj::MediaFormatAudio const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setExtFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pj::MediaFormatAudio *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setExtFormat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setExtFormat" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__MediaFormatAudio,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AudDevManager_setExtFormat" "', argument " "2"" of type '" "pj::MediaFormatAudio const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AudDevManager_setExtFormat" "', argument " "2"" of type '" "pj::MediaFormatAudio const &""'"); 
  }
  arg2 = reinterpret_cast< pj::MediaFormatAudio * >(argp2);
  try {
    (arg1)->setExtFormat((pj::MediaFormatAudio const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setExtFormat(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__MediaFormatAudio, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_AudDevManager_setExtFormat__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__MediaFormatAudio, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setExtFormat__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setExtFormat'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setExtFormat(pj::MediaFormatAudio const &,bool)\n"
    "    pj::AudDevManager::setExtFormat(pj::MediaFormatAudio const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getExtFormat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaFormatAudio result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getExtFormat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getExtFormat" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = ((pj::AudDevManager const *)arg1)->getExtFormat();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::MediaFormatAudio(static_cast< const pj::MediaFormatAudio& >(result))), SWIGTYPE_p_pj__MediaFormatAudio, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputLatency__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setInputLatency",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setInputLatency" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setInputLatency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setInputLatency" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setInputLatency(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputLatency__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setInputLatency",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setInputLatency" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setInputLatency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    (arg1)->setInputLatency(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputLatency(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setInputLatency__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setInputLatency__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setInputLatency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setInputLatency(unsigned int,bool)\n"
    "    pj::AudDevManager::setInputLatency(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getInputLatency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getInputLatency",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getInputLatency" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getInputLatency();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputLatency__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setOutputLatency",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setOutputLatency" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setOutputLatency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setOutputLatency" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setOutputLatency(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputLatency__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setOutputLatency",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setOutputLatency" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setOutputLatency" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    (arg1)->setOutputLatency(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputLatency(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setOutputLatency__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setOutputLatency__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setOutputLatency'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setOutputLatency(unsigned int,bool)\n"
    "    pj::AudDevManager::setOutputLatency(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getOutputLatency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getOutputLatency",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getOutputLatency" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getOutputLatency();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputVolume__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setInputVolume",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setInputVolume" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setInputVolume" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setInputVolume" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setInputVolume(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputVolume__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setInputVolume",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setInputVolume" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setInputVolume" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    (arg1)->setInputVolume(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputVolume(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setInputVolume__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setInputVolume__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setInputVolume'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setInputVolume(unsigned int,bool)\n"
    "    pj::AudDevManager::setInputVolume(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getInputVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getInputVolume",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getInputVolume" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getInputVolume();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputVolume__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setOutputVolume",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setOutputVolume" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setOutputVolume" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setOutputVolume" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setOutputVolume(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputVolume__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setOutputVolume",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setOutputVolume" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setOutputVolume" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    (arg1)->setOutputVolume(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputVolume(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setOutputVolume__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setOutputVolume__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setOutputVolume'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setOutputVolume(unsigned int,bool)\n"
    "    pj::AudDevManager::setOutputVolume(unsigned int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getOutputVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getOutputVolume",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getOutputVolume" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getOutputVolume();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getInputSignal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getInputSignal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getInputSignal" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getInputSignal();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getOutputSignal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getOutputSignal",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getOutputSignal" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (unsigned int)((pj::AudDevManager const *)arg1)->getOutputSignal();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputRoute__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pjmedia_aud_dev_route arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setInputRoute",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setInputRoute" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setInputRoute" "', argument " "2"" of type '" "pjmedia_aud_dev_route""'");
  } 
  arg2 = static_cast< pjmedia_aud_dev_route >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setInputRoute" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setInputRoute(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputRoute__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pjmedia_aud_dev_route arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setInputRoute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setInputRoute" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setInputRoute" "', argument " "2"" of type '" "pjmedia_aud_dev_route""'");
  } 
  arg2 = static_cast< pjmedia_aud_dev_route >(val2);
  try {
    (arg1)->setInputRoute(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setInputRoute(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setInputRoute__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setInputRoute__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setInputRoute'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setInputRoute(pjmedia_aud_dev_route,bool)\n"
    "    pj::AudDevManager::setInputRoute(pjmedia_aud_dev_route)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getInputRoute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_aud_dev_route result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getInputRoute",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getInputRoute" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (pjmedia_aud_dev_route)((pj::AudDevManager const *)arg1)->getInputRoute();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputRoute__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pjmedia_aud_dev_route arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setOutputRoute",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setOutputRoute" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setOutputRoute" "', argument " "2"" of type '" "pjmedia_aud_dev_route""'");
  } 
  arg2 = static_cast< pjmedia_aud_dev_route >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setOutputRoute" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setOutputRoute(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputRoute__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  pjmedia_aud_dev_route arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setOutputRoute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setOutputRoute" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setOutputRoute" "', argument " "2"" of type '" "pjmedia_aud_dev_route""'");
  } 
  arg2 = static_cast< pjmedia_aud_dev_route >(val2);
  try {
    (arg1)->setOutputRoute(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setOutputRoute(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setOutputRoute__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setOutputRoute__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setOutputRoute'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setOutputRoute(pjmedia_aud_dev_route,bool)\n"
    "    pj::AudDevManager::setOutputRoute(pjmedia_aud_dev_route)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getOutputRoute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_aud_dev_route result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getOutputRoute",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getOutputRoute" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (pjmedia_aud_dev_route)((pj::AudDevManager const *)arg1)->getOutputRoute();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setVad__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setVad",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setVad" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setVad" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setVad" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setVad(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setVad__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setVad",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setVad" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setVad" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  try {
    (arg1)->setVad(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setVad(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setVad__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setVad__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setVad'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setVad(bool,bool)\n"
    "    pj::AudDevManager::setVad(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getVad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getVad",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getVad" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (bool)((pj::AudDevManager const *)arg1)->getVad();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setCng__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setCng",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setCng" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setCng" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setCng" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setCng(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setCng__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setCng",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setCng" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setCng" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  try {
    (arg1)->setCng(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setCng(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setCng__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setCng__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setCng'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setCng(bool,bool)\n"
    "    pj::AudDevManager::setCng(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getCng(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getCng",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getCng" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (bool)((pj::AudDevManager const *)arg1)->getCng();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setPlc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  bool arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:AudDevManager_setPlc",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setPlc" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setPlc" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "AudDevManager_setPlc" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->setPlc(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setPlc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AudDevManager_setPlc",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_setPlc" "', argument " "1"" of type '" "pj::AudDevManager *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AudDevManager_setPlc" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  try {
    (arg1)->setPlc(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AudDevManager_setPlc(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_AudDevManager_setPlc__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__AudDevManager, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_AudDevManager_setPlc__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'AudDevManager_setPlc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::AudDevManager::setPlc(bool,bool)\n"
    "    pj::AudDevManager::setPlc(bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_AudDevManager_getPlc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AudDevManager *arg1 = (pj::AudDevManager *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AudDevManager_getPlc",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AudDevManager_getPlc" "', argument " "1"" of type '" "pj::AudDevManager const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AudDevManager * >(argp1);
  try {
    result = (bool)((pj::AudDevManager const *)arg1)->getPlc();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AudDevManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AudDevManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CodecInfo_codecId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfo_codecId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfo_codecId_set" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CodecInfo_codecId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CodecInfo_codecId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->codecId = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfo_codecId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfo_codecId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfo_codecId_get" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  result = (pj::string *) & ((arg1)->codecId);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfo_priority_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  pj_uint8_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfo_priority_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfo_priority_set" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CodecInfo_priority_set" "', argument " "2"" of type '" "pj_uint8_t""'");
  } 
  arg2 = static_cast< pj_uint8_t >(val2);
  if (arg1) (arg1)->priority = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfo_priority_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint8_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfo_priority_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfo_priority_get" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  result = (pj_uint8_t) ((arg1)->priority);
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfo_desc_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CodecInfo_desc_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfo_desc_set" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CodecInfo_desc_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CodecInfo_desc_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->desc = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CodecInfo_desc_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CodecInfo_desc_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CodecInfo_desc_get" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  result = (pj::string *) & ((arg1)->desc);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CodecInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CodecInfo")) SWIG_fail;
  result = (pj::CodecInfo *)new pj::CodecInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CodecInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CodecInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CodecInfo *arg1 = (pj::CodecInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CodecInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CodecInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CodecInfo" "', argument " "1"" of type '" "pj::CodecInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CodecInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CodecInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CodecInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PresenceStatus_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  pjsua_buddy_status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresenceStatus_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_status_set" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PresenceStatus_status_set" "', argument " "2"" of type '" "pjsua_buddy_status""'");
  } 
  arg2 = static_cast< pjsua_buddy_status >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_buddy_status result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresenceStatus_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_status_get" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  result = (pjsua_buddy_status) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_statusText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresenceStatus_statusText_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_statusText_set" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresenceStatus_statusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PresenceStatus_statusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->statusText = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_statusText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresenceStatus_statusText_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_statusText_get" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  result = (pj::string *) & ((arg1)->statusText);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_activity_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  pjrpid_activity arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresenceStatus_activity_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_activity_set" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PresenceStatus_activity_set" "', argument " "2"" of type '" "pjrpid_activity""'");
  } 
  arg2 = static_cast< pjrpid_activity >(val2);
  if (arg1) (arg1)->activity = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_activity_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjrpid_activity result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresenceStatus_activity_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_activity_get" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  result = (pjrpid_activity) ((arg1)->activity);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_note_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresenceStatus_note_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_note_set" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresenceStatus_note_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PresenceStatus_note_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->note = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_note_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresenceStatus_note_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_note_get" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  result = (pj::string *) & ((arg1)->note);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_rpidId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresenceStatus_rpidId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_rpidId_set" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresenceStatus_rpidId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PresenceStatus_rpidId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->rpidId = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresenceStatus_rpidId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresenceStatus_rpidId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresenceStatus_rpidId_get" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  result = (pj::string *) & ((arg1)->rpidId);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PresenceStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PresenceStatus")) SWIG_fail;
  result = (pj::PresenceStatus *)new pj::PresenceStatus();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__PresenceStatus, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PresenceStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresenceStatus *arg1 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PresenceStatus",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresenceStatus, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PresenceStatus" "', argument " "1"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresenceStatus * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PresenceStatus_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__PresenceStatus, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BuddyConfig_uri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyConfig_uri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyConfig_uri_set" "', argument " "1"" of type '" "pj::BuddyConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyConfig_uri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyConfig_uri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->uri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyConfig_uri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyConfig_uri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyConfig_uri_get" "', argument " "1"" of type '" "pj::BuddyConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  result = (pj::string *) & ((arg1)->uri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyConfig_subscribe_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyConfig_subscribe_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyConfig_subscribe_set" "', argument " "1"" of type '" "pj::BuddyConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyConfig_subscribe_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->subscribe = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyConfig_subscribe_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyConfig_subscribe_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyConfig_subscribe_get" "', argument " "1"" of type '" "pj::BuddyConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  result = (bool) ((arg1)->subscribe);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyConfig_readObject" "', argument " "1"" of type '" "pj::BuddyConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyConfig_writeObject" "', argument " "1"" of type '" "pj::BuddyConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::BuddyConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BuddyConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuddyConfig")) SWIG_fail;
  result = (pj::BuddyConfig *)new pj::BuddyConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__BuddyConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuddyConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyConfig *arg1 = (pj::BuddyConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuddyConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuddyConfig" "', argument " "1"" of type '" "pj::BuddyConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuddyConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__BuddyConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_BuddyInfo_uri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_uri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_uri_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyInfo_uri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyInfo_uri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->uri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_uri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_uri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_uri_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pj::string *) & ((arg1)->uri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_contact_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_contact_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_contact_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyInfo_contact_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyInfo_contact_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contact = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_contact_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_contact_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_contact_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pj::string *) & ((arg1)->contact);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_presMonitorEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_presMonitorEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_presMonitorEnabled_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyInfo_presMonitorEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->presMonitorEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_presMonitorEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_presMonitorEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_presMonitorEnabled_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (bool) ((arg1)->presMonitorEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subState_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pjsip_evsub_state arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_subState_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subState_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyInfo_subState_set" "', argument " "2"" of type '" "pjsip_evsub_state""'");
  } 
  arg2 = static_cast< pjsip_evsub_state >(val2);
  if (arg1) (arg1)->subState = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subState_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_evsub_state result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_subState_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subState_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pjsip_evsub_state) ((arg1)->subState);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subStateName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_subStateName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subStateName_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyInfo_subStateName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyInfo_subStateName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->subStateName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subStateName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_subStateName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subStateName_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pj::string *) & ((arg1)->subStateName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subTermCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_subTermCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subTermCode_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "BuddyInfo_subTermCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->subTermCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subTermCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_subTermCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subTermCode_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pjsip_status_code) ((arg1)->subTermCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subTermReason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_subTermReason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subTermReason_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyInfo_subTermReason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "BuddyInfo_subTermReason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->subTermReason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_subTermReason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_subTermReason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_subTermReason_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pj::string *) & ((arg1)->subTermReason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_presStatus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  pj::PresenceStatus *arg2 = (pj::PresenceStatus *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:BuddyInfo_presStatus_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_presStatus_set" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BuddyInfo_presStatus_set" "', argument " "2"" of type '" "pj::PresenceStatus *""'"); 
  }
  arg2 = reinterpret_cast< pj::PresenceStatus * >(argp2);
  if (arg1) (arg1)->presStatus = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_BuddyInfo_presStatus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::PresenceStatus *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:BuddyInfo_presStatus_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BuddyInfo_presStatus_get" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  result = (pj::PresenceStatus *)& ((arg1)->presStatus);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__PresenceStatus, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_BuddyInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_BuddyInfo")) SWIG_fail;
  result = (pj::BuddyInfo *)new pj::BuddyInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__BuddyInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_BuddyInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::BuddyInfo *arg1 = (pj::BuddyInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_BuddyInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__BuddyInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BuddyInfo" "', argument " "1"" of type '" "pj::BuddyInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::BuddyInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *BuddyInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__BuddyInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Buddy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  pj::Buddy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Buddy",&obj0)) SWIG_fail;
  arg1 = obj0;
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::Buddy *)new SwigDirector_Buddy(arg1); 
  } else {
    result = (pj::Buddy *)new pj::Buddy(); 
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Buddy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Buddy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Buddy" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  pj::Account *arg2 = 0 ;
  pj::BuddyConfig *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Buddy_create",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_create" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__Account,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buddy_create" "', argument " "2"" of type '" "pj::Account &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buddy_create" "', argument " "2"" of type '" "pj::Account &""'"); 
  }
  arg2 = reinterpret_cast< pj::Account * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__BuddyConfig,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Buddy_create" "', argument " "3"" of type '" "pj::BuddyConfig const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buddy_create" "', argument " "3"" of type '" "pj::BuddyConfig const &""'"); 
  }
  arg3 = reinterpret_cast< pj::BuddyConfig * >(argp3);
  try {
    (arg1)->create(*arg2,(pj::BuddyConfig const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_isValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Buddy_isValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_isValid" "', argument " "1"" of type '" "pj::Buddy const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  result = (bool)((pj::Buddy const *)arg1)->isValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_getInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::BuddyInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Buddy_getInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_getInfo" "', argument " "1"" of type '" "pj::Buddy const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  try {
    result = ((pj::Buddy const *)arg1)->getInfo();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::BuddyInfo(static_cast< const pj::BuddyInfo& >(result))), SWIGTYPE_p_pj__BuddyInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_subscribePresence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Buddy_subscribePresence",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_subscribePresence" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Buddy_subscribePresence" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  try {
    (arg1)->subscribePresence(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_updatePresence(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Buddy_updatePresence",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_updatePresence" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  try {
    (arg1)->updatePresence();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_sendInstantMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  pj::SendInstantMessageParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Buddy_sendInstantMessage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_sendInstantMessage" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SendInstantMessageParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buddy_sendInstantMessage" "', argument " "2"" of type '" "pj::SendInstantMessageParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buddy_sendInstantMessage" "', argument " "2"" of type '" "pj::SendInstantMessageParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::SendInstantMessageParam * >(argp2);
  try {
    (arg1)->sendInstantMessage((pj::SendInstantMessageParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_sendTypingIndication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  pj::SendTypingIndicationParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Buddy_sendTypingIndication",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_sendTypingIndication" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SendTypingIndicationParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Buddy_sendTypingIndication" "', argument " "2"" of type '" "pj::SendTypingIndicationParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Buddy_sendTypingIndication" "', argument " "2"" of type '" "pj::SendTypingIndicationParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp2);
  try {
    (arg1)->sendTypingIndication((pj::SendTypingIndicationParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Buddy_onBuddyState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Buddy_onBuddyState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Buddy_onBuddyState" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Buddy::onBuddyState();
    } else {
      (arg1)->onBuddyState();
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Buddy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Buddy *arg1 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Buddy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Buddy" "', argument " "1"" of type '" "pj::Buddy *""'"); 
  }
  arg1 = reinterpret_cast< pj::Buddy * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Buddy_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Buddy, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountRegConfig_registrarUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_registrarUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_registrarUri_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountRegConfig_registrarUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountRegConfig_registrarUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->registrarUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_registrarUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_registrarUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_registrarUri_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (pj::string *) & ((arg1)->registrarUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_registerOnAdd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_registerOnAdd_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_registerOnAdd_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_registerOnAdd_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->registerOnAdd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_registerOnAdd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_registerOnAdd_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_registerOnAdd_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (bool) ((arg1)->registerOnAdd);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_headers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  pj::SipHeaderVector *arg2 = (pj::SipHeaderVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_headers_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_headers_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountRegConfig_headers_set" "', argument " "2"" of type '" "pj::SipHeaderVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipHeaderVector * >(argp2);
  if (arg1) (arg1)->headers = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_headers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipHeaderVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_headers_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_headers_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (pj::SipHeaderVector *)& ((arg1)->headers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_timeoutSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_timeoutSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_timeoutSec_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_timeoutSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->timeoutSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_timeoutSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_timeoutSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_timeoutSec_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (unsigned int) ((arg1)->timeoutSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_retryIntervalSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_retryIntervalSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_retryIntervalSec_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_retryIntervalSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->retryIntervalSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_retryIntervalSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_retryIntervalSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_retryIntervalSec_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (unsigned int) ((arg1)->retryIntervalSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_firstRetryIntervalSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_firstRetryIntervalSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_firstRetryIntervalSec_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_firstRetryIntervalSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->firstRetryIntervalSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_firstRetryIntervalSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_firstRetryIntervalSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_firstRetryIntervalSec_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (unsigned int) ((arg1)->firstRetryIntervalSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_delayBeforeRefreshSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_delayBeforeRefreshSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_delayBeforeRefreshSec_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_delayBeforeRefreshSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->delayBeforeRefreshSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_delayBeforeRefreshSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_delayBeforeRefreshSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_delayBeforeRefreshSec_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (unsigned int) ((arg1)->delayBeforeRefreshSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_dropCallsOnFail_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_dropCallsOnFail_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_dropCallsOnFail_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_dropCallsOnFail_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->dropCallsOnFail = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_dropCallsOnFail_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_dropCallsOnFail_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_dropCallsOnFail_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (bool) ((arg1)->dropCallsOnFail);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_unregWaitSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_unregWaitSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_unregWaitSec_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_unregWaitSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->unregWaitSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_unregWaitSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_unregWaitSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_unregWaitSec_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (unsigned int) ((arg1)->unregWaitSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_proxyUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_proxyUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_proxyUse_set" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountRegConfig_proxyUse_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->proxyUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_proxyUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountRegConfig_proxyUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_proxyUse_get" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  result = (unsigned int) ((arg1)->proxyUse);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_readObject" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountRegConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountRegConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountRegConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountRegConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountRegConfig_writeObject" "', argument " "1"" of type '" "pj::AccountRegConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountRegConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountRegConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountRegConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountRegConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountRegConfig")) SWIG_fail;
  result = (pj::AccountRegConfig *)new pj::AccountRegConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountRegConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountRegConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountRegConfig *arg1 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountRegConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountRegConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountRegConfig" "', argument " "1"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountRegConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountRegConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountRegConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountSipConfig_authCreds_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::AuthCredInfoVector *arg2 = (pj::AuthCredInfoVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_authCreds_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_authCreds_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_authCreds_set" "', argument " "2"" of type '" "pj::AuthCredInfoVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::AuthCredInfoVector * >(argp2);
  if (arg1) (arg1)->authCreds = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_authCreds_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AuthCredInfoVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_authCreds_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_authCreds_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::AuthCredInfoVector *)& ((arg1)->authCreds);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_proxies_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::StringVector *arg2 = (pj::StringVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_proxies_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_proxies_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_proxies_set" "', argument " "2"" of type '" "pj::StringVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::StringVector * >(argp2);
  if (arg1) (arg1)->proxies = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_proxies_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::StringVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_proxies_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_proxies_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::StringVector *)& ((arg1)->proxies);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_contactForced_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_contactForced_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_contactForced_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_contactForced_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountSipConfig_contactForced_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contactForced = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_contactForced_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_contactForced_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_contactForced_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::string *) & ((arg1)->contactForced);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_contactParams_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_contactParams_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_contactParams_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_contactParams_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountSipConfig_contactParams_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contactParams = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_contactParams_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_contactParams_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_contactParams_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::string *) & ((arg1)->contactParams);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_contactUriParams_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_contactUriParams_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_contactUriParams_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_contactUriParams_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountSipConfig_contactUriParams_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contactUriParams = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_contactUriParams_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_contactUriParams_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_contactUriParams_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::string *) & ((arg1)->contactUriParams);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_authInitialEmpty_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_authInitialEmpty_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_authInitialEmpty_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountSipConfig_authInitialEmpty_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->authInitialEmpty = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_authInitialEmpty_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_authInitialEmpty_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_authInitialEmpty_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (bool) ((arg1)->authInitialEmpty);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_authInitialAlgorithm_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_authInitialAlgorithm_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_authInitialAlgorithm_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_authInitialAlgorithm_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountSipConfig_authInitialAlgorithm_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->authInitialAlgorithm = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_authInitialAlgorithm_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_authInitialAlgorithm_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_authInitialAlgorithm_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::string *) & ((arg1)->authInitialAlgorithm);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_transportId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::TransportId arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_transportId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_transportId_set" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountSipConfig_transportId_set" "', argument " "2"" of type '" "pj::TransportId""'");
  } 
  arg2 = static_cast< pj::TransportId >(val2);
  if (arg1) (arg1)->transportId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_transportId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TransportId result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountSipConfig_transportId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_transportId_get" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  result = (pj::TransportId) ((arg1)->transportId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_readObject" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountSipConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountSipConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountSipConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountSipConfig_writeObject" "', argument " "1"" of type '" "pj::AccountSipConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountSipConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountSipConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountSipConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountSipConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountSipConfig")) SWIG_fail;
  result = (pj::AccountSipConfig *)new pj::AccountSipConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountSipConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountSipConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountSipConfig *arg1 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountSipConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountSipConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountSipConfig" "', argument " "1"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountSipConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountSipConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountSipConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountCallConfig_holdType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  pjsua_call_hold_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_holdType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_holdType_set" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountCallConfig_holdType_set" "', argument " "2"" of type '" "pjsua_call_hold_type""'");
  } 
  arg2 = static_cast< pjsua_call_hold_type >(val2);
  if (arg1) (arg1)->holdType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_holdType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_call_hold_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountCallConfig_holdType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_holdType_get" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  result = (pjsua_call_hold_type) ((arg1)->holdType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_prackUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  pjsua_100rel_use arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_prackUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_prackUse_set" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountCallConfig_prackUse_set" "', argument " "2"" of type '" "pjsua_100rel_use""'");
  } 
  arg2 = static_cast< pjsua_100rel_use >(val2);
  if (arg1) (arg1)->prackUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_prackUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_100rel_use result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountCallConfig_prackUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_prackUse_get" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  result = (pjsua_100rel_use) ((arg1)->prackUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_timerUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  pjsua_sip_timer_use arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_timerUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_timerUse_set" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountCallConfig_timerUse_set" "', argument " "2"" of type '" "pjsua_sip_timer_use""'");
  } 
  arg2 = static_cast< pjsua_sip_timer_use >(val2);
  if (arg1) (arg1)->timerUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_timerUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_sip_timer_use result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountCallConfig_timerUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_timerUse_get" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  result = (pjsua_sip_timer_use) ((arg1)->timerUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_timerMinSESec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_timerMinSESec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_timerMinSESec_set" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountCallConfig_timerMinSESec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->timerMinSESec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_timerMinSESec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountCallConfig_timerMinSESec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_timerMinSESec_get" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  result = (unsigned int) ((arg1)->timerMinSESec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_timerSessExpiresSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_timerSessExpiresSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_timerSessExpiresSec_set" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountCallConfig_timerSessExpiresSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->timerSessExpiresSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_timerSessExpiresSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountCallConfig_timerSessExpiresSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_timerSessExpiresSec_get" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  result = (unsigned int) ((arg1)->timerSessExpiresSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_readObject" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountCallConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountCallConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountCallConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountCallConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountCallConfig_writeObject" "', argument " "1"" of type '" "pj::AccountCallConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountCallConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountCallConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountCallConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountCallConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountCallConfig")) SWIG_fail;
  result = (pj::AccountCallConfig *)new pj::AccountCallConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountCallConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountCallConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountCallConfig *arg1 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountCallConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountCallConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountCallConfig" "', argument " "1"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountCallConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountCallConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountCallConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountPresConfig_headers_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  pj::SipHeaderVector *arg2 = (pj::SipHeaderVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_headers_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_headers_set" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountPresConfig_headers_set" "', argument " "2"" of type '" "pj::SipHeaderVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipHeaderVector * >(argp2);
  if (arg1) (arg1)->headers = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_headers_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipHeaderVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountPresConfig_headers_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_headers_get" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  result = (pj::SipHeaderVector *)& ((arg1)->headers);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_publishEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_publishEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_publishEnabled_set" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountPresConfig_publishEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->publishEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_publishEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountPresConfig_publishEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_publishEnabled_get" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  result = (bool) ((arg1)->publishEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_publishQueue_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_publishQueue_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_publishQueue_set" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountPresConfig_publishQueue_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->publishQueue = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_publishQueue_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountPresConfig_publishQueue_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_publishQueue_get" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  result = (bool) ((arg1)->publishQueue);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_publishShutdownWaitMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_publishShutdownWaitMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_publishShutdownWaitMsec_set" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountPresConfig_publishShutdownWaitMsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->publishShutdownWaitMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_publishShutdownWaitMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountPresConfig_publishShutdownWaitMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_publishShutdownWaitMsec_get" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  result = (unsigned int) ((arg1)->publishShutdownWaitMsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_pidfTupleId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_pidfTupleId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_pidfTupleId_set" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountPresConfig_pidfTupleId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountPresConfig_pidfTupleId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->pidfTupleId = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_pidfTupleId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountPresConfig_pidfTupleId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_pidfTupleId_get" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  result = (pj::string *) & ((arg1)->pidfTupleId);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_readObject" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountPresConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountPresConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountPresConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountPresConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountPresConfig_writeObject" "', argument " "1"" of type '" "pj::AccountPresConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountPresConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountPresConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountPresConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountPresConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountPresConfig")) SWIG_fail;
  result = (pj::AccountPresConfig *)new pj::AccountPresConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountPresConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountPresConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountPresConfig *arg1 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountPresConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountPresConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountPresConfig" "', argument " "1"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountPresConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountPresConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountPresConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountMwiConfig_enabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMwiConfig_enabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMwiConfig_enabled_set" "', argument " "1"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMwiConfig_enabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->enabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMwiConfig_enabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMwiConfig_enabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMwiConfig_enabled_get" "', argument " "1"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  result = (bool) ((arg1)->enabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMwiConfig_expirationSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMwiConfig_expirationSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMwiConfig_expirationSec_set" "', argument " "1"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMwiConfig_expirationSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->expirationSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMwiConfig_expirationSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMwiConfig_expirationSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMwiConfig_expirationSec_get" "', argument " "1"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  result = (unsigned int) ((arg1)->expirationSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMwiConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMwiConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMwiConfig_readObject" "', argument " "1"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountMwiConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountMwiConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMwiConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMwiConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMwiConfig_writeObject" "', argument " "1"" of type '" "pj::AccountMwiConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountMwiConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountMwiConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountMwiConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountMwiConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountMwiConfig")) SWIG_fail;
  result = (pj::AccountMwiConfig *)new pj::AccountMwiConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountMwiConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountMwiConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMwiConfig *arg1 = (pj::AccountMwiConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountMwiConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMwiConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountMwiConfig" "', argument " "1"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMwiConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountMwiConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountMwiConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountNatConfig_sipStunUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pjsua_stun_use arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_sipStunUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipStunUse_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_sipStunUse_set" "', argument " "2"" of type '" "pjsua_stun_use""'");
  } 
  arg2 = static_cast< pjsua_stun_use >(val2);
  if (arg1) (arg1)->sipStunUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipStunUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_stun_use result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_sipStunUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipStunUse_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pjsua_stun_use) ((arg1)->sipStunUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_mediaStunUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pjsua_stun_use arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_mediaStunUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_mediaStunUse_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_mediaStunUse_set" "', argument " "2"" of type '" "pjsua_stun_use""'");
  } 
  arg2 = static_cast< pjsua_stun_use >(val2);
  if (arg1) (arg1)->mediaStunUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_mediaStunUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_stun_use result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_mediaStunUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_mediaStunUse_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pjsua_stun_use) ((arg1)->mediaStunUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceEnabled_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->iceEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceEnabled_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (bool) ((arg1)->iceEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceMaxHostCands_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceMaxHostCands_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceMaxHostCands_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceMaxHostCands_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->iceMaxHostCands = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceMaxHostCands_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceMaxHostCands_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceMaxHostCands_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->iceMaxHostCands);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceAggressiveNomination_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceAggressiveNomination_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceAggressiveNomination_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceAggressiveNomination_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->iceAggressiveNomination = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceAggressiveNomination_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceAggressiveNomination_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceAggressiveNomination_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (bool) ((arg1)->iceAggressiveNomination);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceNominatedCheckDelayMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceNominatedCheckDelayMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceNominatedCheckDelayMsec_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceNominatedCheckDelayMsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->iceNominatedCheckDelayMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceNominatedCheckDelayMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceNominatedCheckDelayMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceNominatedCheckDelayMsec_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (unsigned int) ((arg1)->iceNominatedCheckDelayMsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceWaitNominationTimeoutMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceWaitNominationTimeoutMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceWaitNominationTimeoutMsec_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceWaitNominationTimeoutMsec_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->iceWaitNominationTimeoutMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceWaitNominationTimeoutMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceWaitNominationTimeoutMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceWaitNominationTimeoutMsec_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->iceWaitNominationTimeoutMsec);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceNoRtcp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceNoRtcp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceNoRtcp_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceNoRtcp_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->iceNoRtcp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceNoRtcp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceNoRtcp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceNoRtcp_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (bool) ((arg1)->iceNoRtcp);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceAlwaysUpdate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_iceAlwaysUpdate_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceAlwaysUpdate_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_iceAlwaysUpdate_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->iceAlwaysUpdate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_iceAlwaysUpdate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_iceAlwaysUpdate_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_iceAlwaysUpdate_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (bool) ((arg1)->iceAlwaysUpdate);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_turnEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnEnabled_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_turnEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->turnEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_turnEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnEnabled_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (bool) ((arg1)->turnEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnServer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_turnServer_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnServer_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_turnServer_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_turnServer_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->turnServer = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnServer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_turnServer_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnServer_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj::string *) & ((arg1)->turnServer);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnConnType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj_turn_tp_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_turnConnType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnConnType_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_turnConnType_set" "', argument " "2"" of type '" "pj_turn_tp_type""'");
  } 
  arg2 = static_cast< pj_turn_tp_type >(val2);
  if (arg1) (arg1)->turnConnType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnConnType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_turn_tp_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_turnConnType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnConnType_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj_turn_tp_type) ((arg1)->turnConnType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnUserName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_turnUserName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnUserName_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_turnUserName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_turnUserName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->turnUserName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnUserName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_turnUserName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnUserName_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj::string *) & ((arg1)->turnUserName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnPasswordType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_turnPasswordType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnPasswordType_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_turnPasswordType_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->turnPasswordType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnPasswordType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_turnPasswordType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnPasswordType_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->turnPasswordType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnPassword_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_turnPassword_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnPassword_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_turnPassword_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_turnPassword_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->turnPassword = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_turnPassword_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_turnPassword_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_turnPassword_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj::string *) & ((arg1)->turnPassword);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_contactRewriteUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_contactRewriteUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_contactRewriteUse_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_contactRewriteUse_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->contactRewriteUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_contactRewriteUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_contactRewriteUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_contactRewriteUse_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->contactRewriteUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_contactRewriteMethod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_contactRewriteMethod_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_contactRewriteMethod_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_contactRewriteMethod_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->contactRewriteMethod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_contactRewriteMethod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_contactRewriteMethod_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_contactRewriteMethod_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->contactRewriteMethod);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_contactUseSrcPort_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_contactUseSrcPort_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_contactUseSrcPort_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_contactUseSrcPort_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->contactUseSrcPort = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_contactUseSrcPort_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_contactUseSrcPort_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_contactUseSrcPort_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->contactUseSrcPort);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_viaRewriteUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_viaRewriteUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_viaRewriteUse_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_viaRewriteUse_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->viaRewriteUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_viaRewriteUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_viaRewriteUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_viaRewriteUse_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->viaRewriteUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sdpNatRewriteUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_sdpNatRewriteUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sdpNatRewriteUse_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_sdpNatRewriteUse_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sdpNatRewriteUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sdpNatRewriteUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_sdpNatRewriteUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sdpNatRewriteUse_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->sdpNatRewriteUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipOutboundUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_sipOutboundUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipOutboundUse_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_sipOutboundUse_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sipOutboundUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipOutboundUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_sipOutboundUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipOutboundUse_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (int) ((arg1)->sipOutboundUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipOutboundInstanceId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_sipOutboundInstanceId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipOutboundInstanceId_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_sipOutboundInstanceId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_sipOutboundInstanceId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->sipOutboundInstanceId = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipOutboundInstanceId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_sipOutboundInstanceId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipOutboundInstanceId_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj::string *) & ((arg1)->sipOutboundInstanceId);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipOutboundRegId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_sipOutboundRegId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipOutboundRegId_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_sipOutboundRegId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_sipOutboundRegId_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->sipOutboundRegId = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_sipOutboundRegId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_sipOutboundRegId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_sipOutboundRegId_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj::string *) & ((arg1)->sipOutboundRegId);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_udpKaIntervalSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_udpKaIntervalSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_udpKaIntervalSec_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountNatConfig_udpKaIntervalSec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->udpKaIntervalSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_udpKaIntervalSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_udpKaIntervalSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_udpKaIntervalSec_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (unsigned int) ((arg1)->udpKaIntervalSec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_udpKaData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_udpKaData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_udpKaData_set" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_udpKaData_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_udpKaData_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->udpKaData = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_udpKaData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountNatConfig_udpKaData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_udpKaData_get" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  result = (pj::string *) & ((arg1)->udpKaData);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_readObject" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountNatConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountNatConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountNatConfig_writeObject" "', argument " "1"" of type '" "pj::AccountNatConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountNatConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountNatConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountNatConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountNatConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountNatConfig")) SWIG_fail;
  result = (pj::AccountNatConfig *)new pj::AccountNatConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountNatConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountNatConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountNatConfig *arg1 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountNatConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountNatConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountNatConfig" "', argument " "1"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountNatConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountNatConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountNatConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountMediaConfig_transportConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  pj::TransportConfig *arg2 = (pj::TransportConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_transportConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_transportConfig_set" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountMediaConfig_transportConfig_set" "', argument " "2"" of type '" "pj::TransportConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::TransportConfig * >(argp2);
  if (arg1) (arg1)->transportConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_transportConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TransportConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMediaConfig_transportConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_transportConfig_get" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  result = (pj::TransportConfig *)& ((arg1)->transportConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TransportConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_lockCodecEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_lockCodecEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_lockCodecEnabled_set" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMediaConfig_lockCodecEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->lockCodecEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_lockCodecEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMediaConfig_lockCodecEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_lockCodecEnabled_get" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  result = (bool) ((arg1)->lockCodecEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_streamKaEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_streamKaEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_streamKaEnabled_set" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMediaConfig_streamKaEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->streamKaEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_streamKaEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMediaConfig_streamKaEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_streamKaEnabled_get" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  result = (bool) ((arg1)->streamKaEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_srtpUse_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  pjmedia_srtp_use arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_srtpUse_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_srtpUse_set" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMediaConfig_srtpUse_set" "', argument " "2"" of type '" "pjmedia_srtp_use""'");
  } 
  arg2 = static_cast< pjmedia_srtp_use >(val2);
  if (arg1) (arg1)->srtpUse = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_srtpUse_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_srtp_use result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMediaConfig_srtpUse_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_srtpUse_get" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  result = (pjmedia_srtp_use) ((arg1)->srtpUse);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_srtpSecureSignaling_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_srtpSecureSignaling_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_srtpSecureSignaling_set" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMediaConfig_srtpSecureSignaling_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->srtpSecureSignaling = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_srtpSecureSignaling_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMediaConfig_srtpSecureSignaling_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_srtpSecureSignaling_get" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  result = (int) ((arg1)->srtpSecureSignaling);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_ipv6Use_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  pjsua_ipv6_use arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_ipv6Use_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_ipv6Use_set" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountMediaConfig_ipv6Use_set" "', argument " "2"" of type '" "pjsua_ipv6_use""'");
  } 
  arg2 = static_cast< pjsua_ipv6_use >(val2);
  if (arg1) (arg1)->ipv6Use = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_ipv6Use_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_ipv6_use result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountMediaConfig_ipv6Use_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_ipv6Use_get" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  result = (pjsua_ipv6_use) ((arg1)->ipv6Use);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_readObject" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountMediaConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountMediaConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountMediaConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountMediaConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountMediaConfig_writeObject" "', argument " "1"" of type '" "pj::AccountMediaConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountMediaConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountMediaConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountMediaConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountMediaConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountMediaConfig")) SWIG_fail;
  result = (pj::AccountMediaConfig *)new pj::AccountMediaConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountMediaConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountMediaConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountMediaConfig *arg1 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountMediaConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountMediaConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountMediaConfig" "', argument " "1"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountMediaConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountMediaConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountMediaConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountVideoConfig_autoShowIncoming_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_autoShowIncoming_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_autoShowIncoming_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_autoShowIncoming_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->autoShowIncoming = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_autoShowIncoming_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_autoShowIncoming_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_autoShowIncoming_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (bool) ((arg1)->autoShowIncoming);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_autoTransmitOutgoing_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_autoTransmitOutgoing_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_autoTransmitOutgoing_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_autoTransmitOutgoing_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->autoTransmitOutgoing = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_autoTransmitOutgoing_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_autoTransmitOutgoing_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_autoTransmitOutgoing_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (bool) ((arg1)->autoTransmitOutgoing);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_windowFlags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_windowFlags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_windowFlags_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_windowFlags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->windowFlags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_windowFlags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_windowFlags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_windowFlags_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (unsigned int) ((arg1)->windowFlags);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_defaultCaptureDevice_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  pjmedia_vid_dev_index arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_defaultCaptureDevice_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_defaultCaptureDevice_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_defaultCaptureDevice_set" "', argument " "2"" of type '" "pjmedia_vid_dev_index""'");
  } 
  arg2 = static_cast< pjmedia_vid_dev_index >(val2);
  if (arg1) (arg1)->defaultCaptureDevice = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_defaultCaptureDevice_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_vid_dev_index result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_defaultCaptureDevice_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_defaultCaptureDevice_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (pjmedia_vid_dev_index) ((arg1)->defaultCaptureDevice);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_defaultRenderDevice_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  pjmedia_vid_dev_index arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_defaultRenderDevice_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_defaultRenderDevice_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_defaultRenderDevice_set" "', argument " "2"" of type '" "pjmedia_vid_dev_index""'");
  } 
  arg2 = static_cast< pjmedia_vid_dev_index >(val2);
  if (arg1) (arg1)->defaultRenderDevice = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_defaultRenderDevice_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_vid_dev_index result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_defaultRenderDevice_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_defaultRenderDevice_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (pjmedia_vid_dev_index) ((arg1)->defaultRenderDevice);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_rateControlMethod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  pjmedia_vid_stream_rc_method arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_rateControlMethod_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_rateControlMethod_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_rateControlMethod_set" "', argument " "2"" of type '" "pjmedia_vid_stream_rc_method""'");
  } 
  arg2 = static_cast< pjmedia_vid_stream_rc_method >(val2);
  if (arg1) (arg1)->rateControlMethod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_rateControlMethod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_vid_stream_rc_method result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_rateControlMethod_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_rateControlMethod_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (pjmedia_vid_stream_rc_method) ((arg1)->rateControlMethod);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_rateControlBandwidth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_rateControlBandwidth_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_rateControlBandwidth_set" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountVideoConfig_rateControlBandwidth_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->rateControlBandwidth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_rateControlBandwidth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountVideoConfig_rateControlBandwidth_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_rateControlBandwidth_get" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  result = (unsigned int) ((arg1)->rateControlBandwidth);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_readObject" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountVideoConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountVideoConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountVideoConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountVideoConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountVideoConfig_writeObject" "', argument " "1"" of type '" "pj::AccountVideoConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountVideoConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountVideoConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountVideoConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountVideoConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountVideoConfig")) SWIG_fail;
  result = (pj::AccountVideoConfig *)new pj::AccountVideoConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountVideoConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountVideoConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountVideoConfig *arg1 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountVideoConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountVideoConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountVideoConfig" "', argument " "1"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountVideoConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountVideoConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountVideoConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountConfig_priority_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_priority_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_priority_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountConfig_priority_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->priority = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_priority_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_priority_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_priority_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (int) ((arg1)->priority);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_idUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_idUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_idUri_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_idUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountConfig_idUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->idUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_idUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_idUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_idUri_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::string *) & ((arg1)->idUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_regConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountRegConfig *arg2 = (pj::AccountRegConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_regConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_regConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_regConfig_set" "', argument " "2"" of type '" "pj::AccountRegConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountRegConfig * >(argp2);
  if (arg1) (arg1)->regConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_regConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountRegConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_regConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_regConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountRegConfig *)& ((arg1)->regConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountRegConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_sipConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountSipConfig *arg2 = (pj::AccountSipConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_sipConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_sipConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_sipConfig_set" "', argument " "2"" of type '" "pj::AccountSipConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountSipConfig * >(argp2);
  if (arg1) (arg1)->sipConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_sipConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountSipConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_sipConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_sipConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountSipConfig *)& ((arg1)->sipConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountSipConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_callConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountCallConfig *arg2 = (pj::AccountCallConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_callConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_callConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_callConfig_set" "', argument " "2"" of type '" "pj::AccountCallConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountCallConfig * >(argp2);
  if (arg1) (arg1)->callConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_callConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountCallConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_callConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_callConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountCallConfig *)& ((arg1)->callConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountCallConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_presConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountPresConfig *arg2 = (pj::AccountPresConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_presConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_presConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_presConfig_set" "', argument " "2"" of type '" "pj::AccountPresConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountPresConfig * >(argp2);
  if (arg1) (arg1)->presConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_presConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountPresConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_presConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_presConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountPresConfig *)& ((arg1)->presConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountPresConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_mwiConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountMwiConfig *arg2 = (pj::AccountMwiConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_mwiConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_mwiConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_mwiConfig_set" "', argument " "2"" of type '" "pj::AccountMwiConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountMwiConfig * >(argp2);
  if (arg1) (arg1)->mwiConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_mwiConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountMwiConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_mwiConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_mwiConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountMwiConfig *)& ((arg1)->mwiConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountMwiConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_natConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountNatConfig *arg2 = (pj::AccountNatConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_natConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_natConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_natConfig_set" "', argument " "2"" of type '" "pj::AccountNatConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountNatConfig * >(argp2);
  if (arg1) (arg1)->natConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_natConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountNatConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_natConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_natConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountNatConfig *)& ((arg1)->natConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountNatConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_mediaConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountMediaConfig *arg2 = (pj::AccountMediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_mediaConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_mediaConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_mediaConfig_set" "', argument " "2"" of type '" "pj::AccountMediaConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountMediaConfig * >(argp2);
  if (arg1) (arg1)->mediaConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_mediaConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountMediaConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_mediaConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_mediaConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountMediaConfig *)& ((arg1)->mediaConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountMediaConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_videoConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::AccountVideoConfig *arg2 = (pj::AccountVideoConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_videoConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_videoConfig_set" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_videoConfig_set" "', argument " "2"" of type '" "pj::AccountVideoConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountVideoConfig * >(argp2);
  if (arg1) (arg1)->videoConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_videoConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountVideoConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountConfig_videoConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_videoConfig_get" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  result = (pj::AccountVideoConfig *)& ((arg1)->videoConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountVideoConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountConfig")) SWIG_fail;
  result = (pj::AccountConfig *)new pj::AccountConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_readObject" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountConfig_writeObject" "', argument " "1"" of type '" "pj::AccountConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::AccountConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountConfig *arg1 = (pj::AccountConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountConfig" "', argument " "1"" of type '" "pj::AccountConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_AccountInfo_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  pjsua_acc_id arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_id_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_id_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_id_set" "', argument " "2"" of type '" "pjsua_acc_id""'");
  } 
  arg2 = static_cast< pjsua_acc_id >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_acc_id result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_id_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_id_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (pjsua_acc_id) ((arg1)->id);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_isDefault_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_isDefault_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_isDefault_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_isDefault_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->isDefault = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_isDefault_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_isDefault_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_isDefault_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (bool) ((arg1)->isDefault);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_uri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_uri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_uri_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountInfo_uri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountInfo_uri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->uri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_uri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_uri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_uri_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (pj::string *) & ((arg1)->uri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regIsConfigured_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_regIsConfigured_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regIsConfigured_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_regIsConfigured_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->regIsConfigured = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regIsConfigured_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_regIsConfigured_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regIsConfigured_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (bool) ((arg1)->regIsConfigured);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regIsActive_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_regIsActive_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regIsActive_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_regIsActive_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->regIsActive = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regIsActive_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_regIsActive_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regIsActive_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (bool) ((arg1)->regIsActive);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regExpiresSec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_regExpiresSec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regExpiresSec_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_regExpiresSec_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->regExpiresSec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regExpiresSec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_regExpiresSec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regExpiresSec_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (int) ((arg1)->regExpiresSec);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regStatus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_regStatus_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regStatus_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_regStatus_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->regStatus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regStatus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_regStatus_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regStatus_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (pjsip_status_code) ((arg1)->regStatus);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regStatusText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_regStatusText_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regStatusText_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountInfo_regStatusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountInfo_regStatusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->regStatusText = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regStatusText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_regStatusText_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regStatusText_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (pj::string *) & ((arg1)->regStatusText);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regLastErr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_regLastErr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regLastErr_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_regLastErr_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->regLastErr = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_regLastErr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_regLastErr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_regLastErr_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (pj_status_t) ((arg1)->regLastErr);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_onlineStatus_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_onlineStatus_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_onlineStatus_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "AccountInfo_onlineStatus_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->onlineStatus = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_onlineStatus_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_onlineStatus_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_onlineStatus_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (bool) ((arg1)->onlineStatus);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_onlineStatusText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:AccountInfo_onlineStatusText_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_onlineStatusText_set" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "AccountInfo_onlineStatusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "AccountInfo_onlineStatusText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->onlineStatusText = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_AccountInfo_onlineStatusText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:AccountInfo_onlineStatusText_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "AccountInfo_onlineStatusText_get" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  result = (pj::string *) & ((arg1)->onlineStatusText);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_AccountInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_AccountInfo")) SWIG_fail;
  result = (pj::AccountInfo *)new pj::AccountInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AccountInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_AccountInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::AccountInfo *arg1 = (pj::AccountInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_AccountInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__AccountInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_AccountInfo" "', argument " "1"" of type '" "pj::AccountInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::AccountInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *AccountInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__AccountInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnIncomingCallParam_callId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingCallParam *arg1 = (pj::OnIncomingCallParam *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingCallParam_callId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingCallParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingCallParam_callId_set" "', argument " "1"" of type '" "pj::OnIncomingCallParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingCallParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnIncomingCallParam_callId_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->callId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingCallParam_callId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingCallParam *arg1 = (pj::OnIncomingCallParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingCallParam_callId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingCallParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingCallParam_callId_get" "', argument " "1"" of type '" "pj::OnIncomingCallParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingCallParam * >(argp1);
  result = (int) ((arg1)->callId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingCallParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingCallParam *arg1 = (pj::OnIncomingCallParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingCallParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingCallParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingCallParam_rdata_set" "', argument " "1"" of type '" "pj::OnIncomingCallParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingCallParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnIncomingCallParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingCallParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingCallParam *arg1 = (pj::OnIncomingCallParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingCallParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingCallParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingCallParam_rdata_get" "', argument " "1"" of type '" "pj::OnIncomingCallParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingCallParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnIncomingCallParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingCallParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnIncomingCallParam")) SWIG_fail;
  result = (pj::OnIncomingCallParam *)new pj::OnIncomingCallParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnIncomingCallParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnIncomingCallParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingCallParam *arg1 = (pj::OnIncomingCallParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnIncomingCallParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingCallParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnIncomingCallParam" "', argument " "1"" of type '" "pj::OnIncomingCallParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingCallParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnIncomingCallParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnIncomingCallParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnRegStartedParam_renew_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStartedParam *arg1 = (pj::OnRegStartedParam *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnRegStartedParam_renew_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStartedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStartedParam_renew_set" "', argument " "1"" of type '" "pj::OnRegStartedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStartedParam * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnRegStartedParam_renew_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->renew = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStartedParam_renew_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStartedParam *arg1 = (pj::OnRegStartedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnRegStartedParam_renew_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStartedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStartedParam_renew_get" "', argument " "1"" of type '" "pj::OnRegStartedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStartedParam * >(argp1);
  result = (bool) ((arg1)->renew);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnRegStartedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStartedParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnRegStartedParam")) SWIG_fail;
  result = (pj::OnRegStartedParam *)new pj::OnRegStartedParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnRegStartedParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnRegStartedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStartedParam *arg1 = (pj::OnRegStartedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnRegStartedParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStartedParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnRegStartedParam" "', argument " "1"" of type '" "pj::OnRegStartedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStartedParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnRegStartedParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnRegStartedParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnRegStateParam_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnRegStateParam_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_status_set" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnRegStateParam_status_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnRegStateParam_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_status_get" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  result = (pj_status_t) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_code_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnRegStateParam_code_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_code_set" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnRegStateParam_code_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_code_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnRegStateParam_code_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_code_get" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->code);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnRegStateParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_reason_set" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnRegStateParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnRegStateParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnRegStateParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_reason_get" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnRegStateParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_rdata_set" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnRegStateParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnRegStateParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_rdata_get" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_expiration_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnRegStateParam_expiration_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_expiration_set" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnRegStateParam_expiration_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->expiration = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnRegStateParam_expiration_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnRegStateParam_expiration_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnRegStateParam_expiration_get" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  result = (int) ((arg1)->expiration);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnRegStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnRegStateParam")) SWIG_fail;
  result = (pj::OnRegStateParam *)new pj::OnRegStateParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnRegStateParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnRegStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnRegStateParam *arg1 = (pj::OnRegStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnRegStateParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnRegStateParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnRegStateParam" "', argument " "1"" of type '" "pj::OnRegStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnRegStateParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnRegStateParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnRegStateParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_srvPres_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingSubscribeParam_srvPres_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_srvPres_set" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnIncomingSubscribeParam_srvPres_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->srvPres = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_srvPres_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingSubscribeParam_srvPres_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_srvPres_get" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  result = (void *) ((arg1)->srvPres);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_fromUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingSubscribeParam_fromUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_fromUri_set" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnIncomingSubscribeParam_fromUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnIncomingSubscribeParam_fromUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->fromUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_fromUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingSubscribeParam_fromUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_fromUri_get" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  result = (pj::string *) & ((arg1)->fromUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingSubscribeParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_rdata_set" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnIncomingSubscribeParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingSubscribeParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_rdata_get" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_code_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingSubscribeParam_code_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_code_set" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnIncomingSubscribeParam_code_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_code_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingSubscribeParam_code_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_code_get" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->code);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingSubscribeParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_reason_set" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnIncomingSubscribeParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnIncomingSubscribeParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingSubscribeParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_reason_get" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_txOption_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  pj::SipTxOption *arg2 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnIncomingSubscribeParam_txOption_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_txOption_set" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnIncomingSubscribeParam_txOption_set" "', argument " "2"" of type '" "pj::SipTxOption *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxOption * >(argp2);
  if (arg1) (arg1)->txOption = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnIncomingSubscribeParam_txOption_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnIncomingSubscribeParam_txOption_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnIncomingSubscribeParam_txOption_get" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  result = (pj::SipTxOption *)& ((arg1)->txOption);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnIncomingSubscribeParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnIncomingSubscribeParam")) SWIG_fail;
  result = (pj::OnIncomingSubscribeParam *)new pj::OnIncomingSubscribeParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnIncomingSubscribeParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnIncomingSubscribeParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnIncomingSubscribeParam *arg1 = (pj::OnIncomingSubscribeParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnIncomingSubscribeParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnIncomingSubscribeParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnIncomingSubscribeParam" "', argument " "1"" of type '" "pj::OnIncomingSubscribeParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnIncomingSubscribeParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnIncomingSubscribeParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnInstantMessageParam_fromUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageParam_fromUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_fromUri_set" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageParam_fromUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageParam_fromUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->fromUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_fromUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageParam_fromUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_fromUri_get" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->fromUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_toUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageParam_toUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_toUri_set" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageParam_toUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageParam_toUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->toUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_toUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageParam_toUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_toUri_get" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->toUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_contactUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageParam_contactUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_contactUri_set" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageParam_contactUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageParam_contactUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contactUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_contactUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageParam_contactUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_contactUri_get" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->contactUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_contentType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageParam_contentType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_contentType_set" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageParam_contentType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageParam_contentType_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contentType = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_contentType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageParam_contentType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_contentType_get" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->contentType);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_msgBody_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageParam_msgBody_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_msgBody_set" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageParam_msgBody_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageParam_msgBody_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->msgBody = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_msgBody_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageParam_msgBody_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_msgBody_get" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  result = (pj::string *) & ((arg1)->msgBody);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_rdata_set" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageParam_rdata_get" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnInstantMessageParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnInstantMessageParam")) SWIG_fail;
  result = (pj::OnInstantMessageParam *)new pj::OnInstantMessageParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnInstantMessageParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnInstantMessageParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageParam *arg1 = (pj::OnInstantMessageParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnInstantMessageParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnInstantMessageParam" "', argument " "1"" of type '" "pj::OnInstantMessageParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnInstantMessageParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnInstantMessageParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_userData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageStatusParam_userData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_userData_set" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageStatusParam_userData_set" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  if (arg1) (arg1)->userData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_userData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::Token result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageStatusParam_userData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_userData_get" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  result = (pj::Token) ((arg1)->userData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_toUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageStatusParam_toUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_toUri_set" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageStatusParam_toUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageStatusParam_toUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->toUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_toUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageStatusParam_toUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_toUri_get" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  result = (pj::string *) & ((arg1)->toUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_msgBody_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageStatusParam_msgBody_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_msgBody_set" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageStatusParam_msgBody_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageStatusParam_msgBody_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->msgBody = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_msgBody_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageStatusParam_msgBody_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_msgBody_get" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  result = (pj::string *) & ((arg1)->msgBody);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_code_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageStatusParam_code_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_code_set" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnInstantMessageStatusParam_code_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->code = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_code_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageStatusParam_code_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_code_get" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->code);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageStatusParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_reason_set" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageStatusParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnInstantMessageStatusParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageStatusParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_reason_get" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnInstantMessageStatusParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_rdata_set" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnInstantMessageStatusParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnInstantMessageStatusParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnInstantMessageStatusParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnInstantMessageStatusParam_rdata_get" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnInstantMessageStatusParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnInstantMessageStatusParam")) SWIG_fail;
  result = (pj::OnInstantMessageStatusParam *)new pj::OnInstantMessageStatusParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnInstantMessageStatusParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnInstantMessageStatusParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnInstantMessageStatusParam *arg1 = (pj::OnInstantMessageStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnInstantMessageStatusParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnInstantMessageStatusParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnInstantMessageStatusParam" "', argument " "1"" of type '" "pj::OnInstantMessageStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnInstantMessageStatusParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnInstantMessageStatusParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_fromUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTypingIndicationParam_fromUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_fromUri_set" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnTypingIndicationParam_fromUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnTypingIndicationParam_fromUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->fromUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_fromUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTypingIndicationParam_fromUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_fromUri_get" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  result = (pj::string *) & ((arg1)->fromUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_toUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTypingIndicationParam_toUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_toUri_set" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnTypingIndicationParam_toUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnTypingIndicationParam_toUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->toUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_toUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTypingIndicationParam_toUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_toUri_get" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  result = (pj::string *) & ((arg1)->toUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_contactUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTypingIndicationParam_contactUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_contactUri_set" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnTypingIndicationParam_contactUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnTypingIndicationParam_contactUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->contactUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_contactUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTypingIndicationParam_contactUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_contactUri_get" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  result = (pj::string *) & ((arg1)->contactUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_isTyping_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTypingIndicationParam_isTyping_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_isTyping_set" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnTypingIndicationParam_isTyping_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->isTyping = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_isTyping_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTypingIndicationParam_isTyping_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_isTyping_get" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  result = (bool) ((arg1)->isTyping);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTypingIndicationParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_rdata_set" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnTypingIndicationParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTypingIndicationParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTypingIndicationParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTypingIndicationParam_rdata_get" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnTypingIndicationParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnTypingIndicationParam")) SWIG_fail;
  result = (pj::OnTypingIndicationParam *)new pj::OnTypingIndicationParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnTypingIndicationParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnTypingIndicationParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTypingIndicationParam *arg1 = (pj::OnTypingIndicationParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnTypingIndicationParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTypingIndicationParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnTypingIndicationParam" "', argument " "1"" of type '" "pj::OnTypingIndicationParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnTypingIndicationParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnTypingIndicationParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnMwiInfoParam_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnMwiInfoParam *arg1 = (pj::OnMwiInfoParam *) 0 ;
  pjsip_evsub_state arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnMwiInfoParam_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnMwiInfoParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnMwiInfoParam_state_set" "', argument " "1"" of type '" "pj::OnMwiInfoParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnMwiInfoParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnMwiInfoParam_state_set" "', argument " "2"" of type '" "pjsip_evsub_state""'");
  } 
  arg2 = static_cast< pjsip_evsub_state >(val2);
  if (arg1) (arg1)->state = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnMwiInfoParam_state_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnMwiInfoParam *arg1 = (pj::OnMwiInfoParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_evsub_state result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnMwiInfoParam_state_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnMwiInfoParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnMwiInfoParam_state_get" "', argument " "1"" of type '" "pj::OnMwiInfoParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnMwiInfoParam * >(argp1);
  result = (pjsip_evsub_state) ((arg1)->state);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnMwiInfoParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnMwiInfoParam *arg1 = (pj::OnMwiInfoParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnMwiInfoParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnMwiInfoParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnMwiInfoParam_rdata_set" "', argument " "1"" of type '" "pj::OnMwiInfoParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnMwiInfoParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnMwiInfoParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnMwiInfoParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnMwiInfoParam *arg1 = (pj::OnMwiInfoParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnMwiInfoParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnMwiInfoParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnMwiInfoParam_rdata_get" "', argument " "1"" of type '" "pj::OnMwiInfoParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnMwiInfoParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnMwiInfoParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnMwiInfoParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnMwiInfoParam")) SWIG_fail;
  result = (pj::OnMwiInfoParam *)new pj::OnMwiInfoParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnMwiInfoParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnMwiInfoParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnMwiInfoParam *arg1 = (pj::OnMwiInfoParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnMwiInfoParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnMwiInfoParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnMwiInfoParam" "', argument " "1"" of type '" "pj::OnMwiInfoParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnMwiInfoParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnMwiInfoParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnMwiInfoParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PresNotifyParam_srvPres_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresNotifyParam_srvPres_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_srvPres_set" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresNotifyParam_srvPres_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->srvPres = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_srvPres_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresNotifyParam_srvPres_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_srvPres_get" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  result = (void *) ((arg1)->srvPres);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  pjsip_evsub_state arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresNotifyParam_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_state_set" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PresNotifyParam_state_set" "', argument " "2"" of type '" "pjsip_evsub_state""'");
  } 
  arg2 = static_cast< pjsip_evsub_state >(val2);
  if (arg1) (arg1)->state = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_state_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_evsub_state result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresNotifyParam_state_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_state_get" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  result = (pjsip_evsub_state) ((arg1)->state);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_stateStr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresNotifyParam_stateStr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_stateStr_set" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresNotifyParam_stateStr_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PresNotifyParam_stateStr_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->stateStr = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_stateStr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresNotifyParam_stateStr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_stateStr_get" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  result = (pj::string *) & ((arg1)->stateStr);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresNotifyParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_reason_set" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresNotifyParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "PresNotifyParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresNotifyParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_reason_get" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_withBody_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresNotifyParam_withBody_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_withBody_set" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PresNotifyParam_withBody_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->withBody = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_withBody_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresNotifyParam_withBody_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_withBody_get" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  result = (bool) ((arg1)->withBody);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_txOption_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  pj::SipTxOption *arg2 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PresNotifyParam_txOption_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_txOption_set" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "PresNotifyParam_txOption_set" "', argument " "2"" of type '" "pj::SipTxOption *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxOption * >(argp2);
  if (arg1) (arg1)->txOption = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_PresNotifyParam_txOption_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:PresNotifyParam_txOption_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PresNotifyParam_txOption_get" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  result = (pj::SipTxOption *)& ((arg1)->txOption);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_PresNotifyParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_PresNotifyParam")) SWIG_fail;
  result = (pj::PresNotifyParam *)new pj::PresNotifyParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__PresNotifyParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PresNotifyParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PresNotifyParam *arg1 = (pj::PresNotifyParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PresNotifyParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PresNotifyParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PresNotifyParam" "', argument " "1"" of type '" "pj::PresNotifyParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::PresNotifyParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PresNotifyParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__PresNotifyParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_FindBuddyMatch_match(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::FindBuddyMatch *arg1 = (pj::FindBuddyMatch *) 0 ;
  pj::string *arg2 = 0 ;
  pj::Buddy *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:FindBuddyMatch_match",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__FindBuddyMatch, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "FindBuddyMatch_match" "', argument " "1"" of type '" "pj::FindBuddyMatch *""'"); 
  }
  arg1 = reinterpret_cast< pj::FindBuddyMatch * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "FindBuddyMatch_match" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FindBuddyMatch_match" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__Buddy,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "FindBuddyMatch_match" "', argument " "3"" of type '" "pj::Buddy const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "FindBuddyMatch_match" "', argument " "3"" of type '" "pj::Buddy const &""'"); 
  }
  arg3 = reinterpret_cast< pj::Buddy * >(argp3);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      result = (bool)(arg1)->pj::FindBuddyMatch::match((pj::string const &)*arg2,(pj::Buddy const &)*arg3);
    } else {
      result = (bool)(arg1)->match((pj::string const &)*arg2,(pj::Buddy const &)*arg3);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_FindBuddyMatch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::FindBuddyMatch *arg1 = (pj::FindBuddyMatch *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_FindBuddyMatch",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__FindBuddyMatch, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_FindBuddyMatch" "', argument " "1"" of type '" "pj::FindBuddyMatch *""'"); 
  }
  arg1 = reinterpret_cast< pj::FindBuddyMatch * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_FindBuddyMatch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  pj::FindBuddyMatch *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_FindBuddyMatch",&obj0)) SWIG_fail;
  arg1 = obj0;
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::FindBuddyMatch *)new SwigDirector_FindBuddyMatch(arg1); 
  } else {
    result = (pj::FindBuddyMatch *)new pj::FindBuddyMatch(); 
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__FindBuddyMatch, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_FindBuddyMatch(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::FindBuddyMatch *arg1 = (pj::FindBuddyMatch *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_FindBuddyMatch",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__FindBuddyMatch, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_FindBuddyMatch" "', argument " "1"" of type '" "pj::FindBuddyMatch *""'"); 
  }
  arg1 = reinterpret_cast< pj::FindBuddyMatch * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *FindBuddyMatch_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__FindBuddyMatch, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Account(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  pj::Account *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Account",&obj0)) SWIG_fail;
  arg1 = obj0;
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::Account *)new SwigDirector_Account(arg1); 
  } else {
    result = (pj::Account *)new pj::Account(); 
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Account, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Account(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Account",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Account" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_create__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::AccountConfig *arg2 = 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Account_create",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_create" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AccountConfig,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_create" "', argument " "2"" of type '" "pj::AccountConfig const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_create" "', argument " "2"" of type '" "pj::AccountConfig const &""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountConfig * >(argp2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Account_create" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->create((pj::AccountConfig const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_create__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::AccountConfig *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_create",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_create" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AccountConfig,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_create" "', argument " "2"" of type '" "pj::AccountConfig const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_create" "', argument " "2"" of type '" "pj::AccountConfig const &""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountConfig * >(argp2);
  try {
    (arg1)->create((pj::AccountConfig const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_create(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Account, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__AccountConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Account_create__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Account, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__AccountConfig, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Account_create__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Account_create'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Account::create(pj::AccountConfig const &,bool)\n"
    "    pj::Account::create(pj::AccountConfig const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Account_modify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::AccountConfig *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_modify",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_modify" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AccountConfig,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_modify" "', argument " "2"" of type '" "pj::AccountConfig const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_modify" "', argument " "2"" of type '" "pj::AccountConfig const &""'"); 
  }
  arg2 = reinterpret_cast< pj::AccountConfig * >(argp2);
  try {
    (arg1)->modify((pj::AccountConfig const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_isValid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_isValid",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_isValid" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  result = (bool)((pj::Account const *)arg1)->isValid();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_setDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_setDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_setDefault" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  try {
    (arg1)->setDefault();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_isDefault(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_isDefault",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_isDefault" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  result = (bool)((pj::Account const *)arg1)->isDefault();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_getId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_getId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_getId" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  result = (int)((pj::Account const *)arg1)->getId();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_lookup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  pj::Account *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_lookup",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Account_lookup" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (pj::Account *)pj::Account::lookup(arg1);
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Account, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_getInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AccountInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_getInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_getInfo" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  try {
    result = ((pj::Account const *)arg1)->getInfo();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::AccountInfo(static_cast< const pj::AccountInfo& >(result))), SWIGTYPE_p_pj__AccountInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_setRegistration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_setRegistration",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_setRegistration" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Account_setRegistration" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  try {
    (arg1)->setRegistration(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_setOnlineStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::PresenceStatus *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_setOnlineStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_setOnlineStatus" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__PresenceStatus,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_setOnlineStatus" "', argument " "2"" of type '" "pj::PresenceStatus const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_setOnlineStatus" "', argument " "2"" of type '" "pj::PresenceStatus const &""'"); 
  }
  arg2 = reinterpret_cast< pj::PresenceStatus * >(argp2);
  try {
    (arg1)->setOnlineStatus((pj::PresenceStatus const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_setTransport(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::TransportId arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_setTransport",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_setTransport" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Account_setTransport" "', argument " "2"" of type '" "pj::TransportId""'");
  } 
  arg2 = static_cast< pj::TransportId >(val2);
  try {
    (arg1)->setTransport(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_presNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::PresNotifyParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_presNotify",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_presNotify" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__PresNotifyParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_presNotify" "', argument " "2"" of type '" "pj::PresNotifyParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_presNotify" "', argument " "2"" of type '" "pj::PresNotifyParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::PresNotifyParam * >(argp2);
  try {
    (arg1)->presNotify((pj::PresNotifyParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_enumBuddies(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::BuddyVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Account_enumBuddies",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_enumBuddies" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  try {
    result = (pj::BuddyVector *) &((pj::Account const *)arg1)->enumBuddies();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<pj::Buddy*,std::allocator< pj::Buddy * > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_findBuddy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::string arg2 ;
  pj::FindBuddyMatch *arg3 = (pj::FindBuddyMatch *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  Swig::Director *director = 0;
  pj::Buddy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Account_findBuddy",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_findBuddy" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Account_findBuddy" "', argument " "2"" of type '" "pj::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_pj__FindBuddyMatch, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Account_findBuddy" "', argument " "3"" of type '" "pj::FindBuddyMatch *""'"); 
  }
  arg3 = reinterpret_cast< pj::FindBuddyMatch * >(argp3);
  try {
    result = (pj::Buddy *)((pj::Account const *)arg1)->findBuddy(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_findBuddy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::string arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  pj::Buddy *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_findBuddy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_findBuddy" "', argument " "1"" of type '" "pj::Account const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Account_findBuddy" "', argument " "2"" of type '" "pj::string""'"); 
    }
    arg2 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (pj::Buddy *)((pj::Account const *)arg1)->findBuddy(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Buddy, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_findBuddy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Account, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Account_findBuddy__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Account, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_pj__FindBuddyMatch, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_Account_findBuddy__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Account_findBuddy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Account::findBuddy(pj::string,pj::FindBuddyMatch *) const\n"
    "    pj::Account::findBuddy(pj::string) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Account_addBuddy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::Buddy *arg2 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_addBuddy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_addBuddy" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_addBuddy" "', argument " "2"" of type '" "pj::Buddy *""'"); 
  }
  arg2 = reinterpret_cast< pj::Buddy * >(argp2);
  (arg1)->addBuddy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_removeBuddy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::Buddy *arg2 = (pj::Buddy *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_removeBuddy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_removeBuddy" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__Buddy, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_removeBuddy" "', argument " "2"" of type '" "pj::Buddy *""'"); 
  }
  arg2 = reinterpret_cast< pj::Buddy * >(argp2);
  (arg1)->removeBuddy(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onIncomingCall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnIncomingCallParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onIncomingCall",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onIncomingCall" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnIncomingCallParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onIncomingCall" "', argument " "2"" of type '" "pj::OnIncomingCallParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onIncomingCall" "', argument " "2"" of type '" "pj::OnIncomingCallParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnIncomingCallParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onIncomingCall(*arg2);
    } else {
      (arg1)->onIncomingCall(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onRegStarted(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnRegStartedParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onRegStarted",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onRegStarted" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnRegStartedParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onRegStarted" "', argument " "2"" of type '" "pj::OnRegStartedParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onRegStarted" "', argument " "2"" of type '" "pj::OnRegStartedParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnRegStartedParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onRegStarted(*arg2);
    } else {
      (arg1)->onRegStarted(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onRegState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnRegStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onRegState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onRegState" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnRegStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onRegState" "', argument " "2"" of type '" "pj::OnRegStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onRegState" "', argument " "2"" of type '" "pj::OnRegStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnRegStateParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onRegState(*arg2);
    } else {
      (arg1)->onRegState(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onIncomingSubscribe(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnIncomingSubscribeParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onIncomingSubscribe",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onIncomingSubscribe" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnIncomingSubscribeParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onIncomingSubscribe" "', argument " "2"" of type '" "pj::OnIncomingSubscribeParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onIncomingSubscribe" "', argument " "2"" of type '" "pj::OnIncomingSubscribeParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnIncomingSubscribeParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onIncomingSubscribe(*arg2);
    } else {
      (arg1)->onIncomingSubscribe(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onInstantMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnInstantMessageParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onInstantMessage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onInstantMessage" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnInstantMessageParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onInstantMessage" "', argument " "2"" of type '" "pj::OnInstantMessageParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onInstantMessage" "', argument " "2"" of type '" "pj::OnInstantMessageParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnInstantMessageParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onInstantMessage(*arg2);
    } else {
      (arg1)->onInstantMessage(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onInstantMessageStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnInstantMessageStatusParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onInstantMessageStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onInstantMessageStatus" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnInstantMessageStatusParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onInstantMessageStatus" "', argument " "2"" of type '" "pj::OnInstantMessageStatusParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onInstantMessageStatus" "', argument " "2"" of type '" "pj::OnInstantMessageStatusParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onInstantMessageStatus(*arg2);
    } else {
      (arg1)->onInstantMessageStatus(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onTypingIndication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnTypingIndicationParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onTypingIndication",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onTypingIndication" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnTypingIndicationParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onTypingIndication" "', argument " "2"" of type '" "pj::OnTypingIndicationParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onTypingIndication" "', argument " "2"" of type '" "pj::OnTypingIndicationParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onTypingIndication(*arg2);
    } else {
      (arg1)->onTypingIndication(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Account_onMwiInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  pj::OnMwiInfoParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Account_onMwiInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Account_onMwiInfo" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnMwiInfoParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Account_onMwiInfo" "', argument " "2"" of type '" "pj::OnMwiInfoParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Account_onMwiInfo" "', argument " "2"" of type '" "pj::OnMwiInfoParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnMwiInfoParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Account::onMwiInfo(*arg2);
    } else {
      (arg1)->onMwiInfo(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Account(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Account *arg1 = (pj::Account *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Account",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Account, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Account" "', argument " "1"" of type '" "pj::Account *""'"); 
  }
  arg1 = reinterpret_cast< pj::Account * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Account_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Account, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MathStat_n_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MathStat_n_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_n_set" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MathStat_n_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->n = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_n_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MathStat_n_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_n_get" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  result = (int) ((arg1)->n);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_max_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MathStat_max_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_max_set" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MathStat_max_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->max = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_max_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MathStat_max_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_max_get" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  result = (int) ((arg1)->max);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_min_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MathStat_min_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_min_set" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MathStat_min_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->min = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_min_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MathStat_min_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_min_get" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  result = (int) ((arg1)->min);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_last_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MathStat_last_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_last_set" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MathStat_last_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->last = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_last_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MathStat_last_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_last_get" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  result = (int) ((arg1)->last);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_mean_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MathStat_mean_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_mean_set" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MathStat_mean_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->mean = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MathStat_mean_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MathStat_mean_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MathStat_mean_get" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  result = (int) ((arg1)->mean);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MathStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MathStat")) SWIG_fail;
  result = (pj::MathStat *)new pj::MathStat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MathStat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MathStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MathStat *arg1 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MathStat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MathStat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MathStat" "', argument " "1"" of type '" "pj::MathStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::MathStat * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MathStat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MathStat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RtcpStreamStat_update_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  pj::TimeVal *arg2 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_update_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_update_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStreamStat_update_set" "', argument " "2"" of type '" "pj::TimeVal *""'"); 
  }
  arg2 = reinterpret_cast< pj::TimeVal * >(argp2);
  if (arg1) (arg1)->update = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_update_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TimeVal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_update_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_update_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (pj::TimeVal *)& ((arg1)->update);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_updateCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_updateCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_updateCount_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_updateCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->updateCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_updateCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_updateCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_updateCount_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->updateCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_pkt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_pkt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_pkt_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_pkt_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->pkt = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_pkt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_pkt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_pkt_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->pkt);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_bytes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_bytes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_bytes_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_bytes_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->bytes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_bytes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_bytes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_bytes_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->bytes);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_discard_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_discard_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_discard_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_discard_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->discard = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_discard_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_discard_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_discard_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->discard);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_loss_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_loss_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_loss_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_loss_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->loss = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_loss_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_loss_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_loss_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->loss);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_reorder_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_reorder_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_reorder_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_reorder_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->reorder = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_reorder_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_reorder_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_reorder_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->reorder);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_dup_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_dup_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_dup_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStreamStat_dup_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->dup = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_dup_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_dup_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_dup_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (unsigned int) ((arg1)->dup);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_lossPeriodUsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  pj::MathStat *arg2 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_lossPeriodUsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_lossPeriodUsec_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStreamStat_lossPeriodUsec_set" "', argument " "2"" of type '" "pj::MathStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::MathStat * >(argp2);
  if (arg1) (arg1)->lossPeriodUsec = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_lossPeriodUsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MathStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_lossPeriodUsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_lossPeriodUsec_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (pj::MathStat *)& ((arg1)->lossPeriodUsec);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MathStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_jitterUsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  pj::MathStat *arg2 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStreamStat_jitterUsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_jitterUsec_set" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStreamStat_jitterUsec_set" "', argument " "2"" of type '" "pj::MathStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::MathStat * >(argp2);
  if (arg1) (arg1)->jitterUsec = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStreamStat_jitterUsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MathStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStreamStat_jitterUsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStreamStat_jitterUsec_get" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  result = (pj::MathStat *)& ((arg1)->jitterUsec);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MathStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtcpStreamStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RtcpStreamStat")) SWIG_fail;
  result = (pj::RtcpStreamStat *)new pj::RtcpStreamStat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpStreamStat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RtcpStreamStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStreamStat *arg1 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RtcpStreamStat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStreamStat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RtcpStreamStat" "', argument " "1"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStreamStat * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RtcpStreamStat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__RtcpStreamStat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RtcpSdes_cname_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_cname_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_cname_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_cname_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_cname_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->cname = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_cname_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_cname_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_cname_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->cname);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_name_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_name_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->name = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_name_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_name_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->name);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_email_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_email_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_email_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_email_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_email_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->email = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_email_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_email_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_email_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->email);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_phone_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_phone_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_phone_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_phone_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_phone_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->phone = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_phone_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_phone_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_phone_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->phone);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_loc_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_loc_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_loc_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_loc_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_loc_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->loc = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_loc_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_loc_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_loc_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->loc);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_tool_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_tool_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_tool_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_tool_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_tool_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->tool = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_tool_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_tool_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_tool_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->tool);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_note_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpSdes_note_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_note_set" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpSdes_note_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RtcpSdes_note_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->note = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpSdes_note_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpSdes_note_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpSdes_note_get" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  result = (pj::string *) & ((arg1)->note);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtcpSdes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RtcpSdes")) SWIG_fail;
  result = (pj::RtcpSdes *)new pj::RtcpSdes();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpSdes, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RtcpSdes(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpSdes *arg1 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RtcpSdes",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpSdes, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RtcpSdes" "', argument " "1"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpSdes * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RtcpSdes_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__RtcpSdes, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_RtcpStat_start_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::TimeVal *arg2 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_start_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_start_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_start_set" "', argument " "2"" of type '" "pj::TimeVal *""'"); 
  }
  arg2 = reinterpret_cast< pj::TimeVal * >(argp2);
  if (arg1) (arg1)->start = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_start_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TimeVal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_start_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_start_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::TimeVal *)& ((arg1)->start);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_txStat_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::RtcpStreamStat *arg2 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_txStat_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_txStat_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_txStat_set" "', argument " "2"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::RtcpStreamStat * >(argp2);
  if (arg1) (arg1)->txStat = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_txStat_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::RtcpStreamStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_txStat_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_txStat_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::RtcpStreamStat *)& ((arg1)->txStat);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rxStat_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::RtcpStreamStat *arg2 = (pj::RtcpStreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_rxStat_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rxStat_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_rxStat_set" "', argument " "2"" of type '" "pj::RtcpStreamStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::RtcpStreamStat * >(argp2);
  if (arg1) (arg1)->rxStat = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rxStat_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::RtcpStreamStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_rxStat_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rxStat_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::RtcpStreamStat *)& ((arg1)->rxStat);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpStreamStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rttUsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::MathStat *arg2 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_rttUsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rttUsec_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_rttUsec_set" "', argument " "2"" of type '" "pj::MathStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::MathStat * >(argp2);
  if (arg1) (arg1)->rttUsec = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rttUsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MathStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_rttUsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rttUsec_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::MathStat *)& ((arg1)->rttUsec);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MathStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rtpTxLastTs_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj_uint32_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_rtpTxLastTs_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rtpTxLastTs_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStat_rtpTxLastTs_set" "', argument " "2"" of type '" "pj_uint32_t""'");
  } 
  arg2 = static_cast< pj_uint32_t >(val2);
  if (arg1) (arg1)->rtpTxLastTs = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rtpTxLastTs_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint32_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_rtpTxLastTs_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rtpTxLastTs_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj_uint32_t) ((arg1)->rtpTxLastTs);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rtpTxLastSeq_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj_uint16_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_rtpTxLastSeq_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rtpTxLastSeq_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RtcpStat_rtpTxLastSeq_set" "', argument " "2"" of type '" "pj_uint16_t""'");
  } 
  arg2 = static_cast< pj_uint16_t >(val2);
  if (arg1) (arg1)->rtpTxLastSeq = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rtpTxLastSeq_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_uint16_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_rtpTxLastSeq_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rtpTxLastSeq_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj_uint16_t) ((arg1)->rtpTxLastSeq);
  resultobj = SWIG_From_unsigned_SS_short(static_cast< unsigned short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rxIpdvUsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::MathStat *arg2 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_rxIpdvUsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rxIpdvUsec_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_rxIpdvUsec_set" "', argument " "2"" of type '" "pj::MathStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::MathStat * >(argp2);
  if (arg1) (arg1)->rxIpdvUsec = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rxIpdvUsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MathStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_rxIpdvUsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rxIpdvUsec_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::MathStat *)& ((arg1)->rxIpdvUsec);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MathStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rxRawJitterUsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::MathStat *arg2 = (pj::MathStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_rxRawJitterUsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rxRawJitterUsec_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MathStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_rxRawJitterUsec_set" "', argument " "2"" of type '" "pj::MathStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::MathStat * >(argp2);
  if (arg1) (arg1)->rxRawJitterUsec = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_rxRawJitterUsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MathStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_rxRawJitterUsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_rxRawJitterUsec_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::MathStat *)& ((arg1)->rxRawJitterUsec);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MathStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_peerSdes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  pj::RtcpSdes *arg2 = (pj::RtcpSdes *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:RtcpStat_peerSdes_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_peerSdes_set" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RtcpStat_peerSdes_set" "', argument " "2"" of type '" "pj::RtcpSdes *""'"); 
  }
  arg2 = reinterpret_cast< pj::RtcpSdes * >(argp2);
  if (arg1) (arg1)->peerSdes = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_RtcpStat_peerSdes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::RtcpSdes *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:RtcpStat_peerSdes_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RtcpStat_peerSdes_get" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  result = (pj::RtcpSdes *)& ((arg1)->peerSdes);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpSdes, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_RtcpStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_RtcpStat")) SWIG_fail;
  result = (pj::RtcpStat *)new pj::RtcpStat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpStat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_RtcpStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::RtcpStat *arg1 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_RtcpStat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__RtcpStat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RtcpStat" "', argument " "1"" of type '" "pj::RtcpStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::RtcpStat * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *RtcpStat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__RtcpStat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_JbufState_frameSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_frameSize_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_frameSize_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_frameSize_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->frameSize = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_frameSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_frameSize_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_frameSize_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->frameSize);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_minPrefetch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_minPrefetch_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_minPrefetch_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_minPrefetch_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->minPrefetch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_minPrefetch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_minPrefetch_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_minPrefetch_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->minPrefetch);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_maxPrefetch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_maxPrefetch_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_maxPrefetch_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_maxPrefetch_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->maxPrefetch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_maxPrefetch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_maxPrefetch_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_maxPrefetch_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->maxPrefetch);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_burst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_burst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_burst_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_burst_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->burst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_burst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_burst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_burst_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->burst);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_prefetch_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_prefetch_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_prefetch_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_prefetch_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->prefetch = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_prefetch_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_prefetch_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_prefetch_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->prefetch);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_size_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_size_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_size_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->size = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_size_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_size_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->size);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_avgDelayMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_avgDelayMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_avgDelayMsec_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_avgDelayMsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->avgDelayMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_avgDelayMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_avgDelayMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_avgDelayMsec_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->avgDelayMsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_minDelayMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_minDelayMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_minDelayMsec_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_minDelayMsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->minDelayMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_minDelayMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_minDelayMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_minDelayMsec_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->minDelayMsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_maxDelayMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_maxDelayMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_maxDelayMsec_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_maxDelayMsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->maxDelayMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_maxDelayMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_maxDelayMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_maxDelayMsec_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->maxDelayMsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_devDelayMsec_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_devDelayMsec_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_devDelayMsec_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_devDelayMsec_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->devDelayMsec = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_devDelayMsec_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_devDelayMsec_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_devDelayMsec_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->devDelayMsec);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_avgBurst_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_avgBurst_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_avgBurst_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_avgBurst_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->avgBurst = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_avgBurst_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_avgBurst_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_avgBurst_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->avgBurst);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_lost_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_lost_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_lost_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_lost_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->lost = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_lost_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_lost_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_lost_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->lost);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_discard_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_discard_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_discard_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_discard_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->discard = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_discard_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_discard_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_discard_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->discard);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_empty_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JbufState_empty_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_empty_set" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "JbufState_empty_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->empty = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JbufState_empty_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JbufState_empty_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JbufState_empty_get" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  result = (unsigned int) ((arg1)->empty);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_JbufState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_JbufState")) SWIG_fail;
  result = (pj::JbufState *)new pj::JbufState();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__JbufState, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_JbufState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JbufState *arg1 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_JbufState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JbufState, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JbufState" "', argument " "1"" of type '" "pj::JbufState *""'"); 
  }
  arg1 = reinterpret_cast< pj::JbufState * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JbufState_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__JbufState, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_SdpSession_wholeSdp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SdpSession *arg1 = (pj::SdpSession *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SdpSession_wholeSdp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SdpSession_wholeSdp_set" "', argument " "1"" of type '" "pj::SdpSession *""'"); 
  }
  arg1 = reinterpret_cast< pj::SdpSession * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SdpSession_wholeSdp_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SdpSession_wholeSdp_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->wholeSdp = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_SdpSession_wholeSdp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SdpSession *arg1 = (pj::SdpSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SdpSession_wholeSdp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SdpSession_wholeSdp_get" "', argument " "1"" of type '" "pj::SdpSession *""'"); 
  }
  arg1 = reinterpret_cast< pj::SdpSession * >(argp1);
  result = (pj::string *) & ((arg1)->wholeSdp);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SdpSession_pjSdpSession_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SdpSession *arg1 = (pj::SdpSession *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:SdpSession_pjSdpSession_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SdpSession_pjSdpSession_set" "', argument " "1"" of type '" "pj::SdpSession *""'"); 
  }
  arg1 = reinterpret_cast< pj::SdpSession * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SdpSession_pjSdpSession_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->pjSdpSession = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SdpSession_pjSdpSession_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SdpSession *arg1 = (pj::SdpSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:SdpSession_pjSdpSession_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SdpSession_pjSdpSession_get" "', argument " "1"" of type '" "pj::SdpSession *""'"); 
  }
  arg1 = reinterpret_cast< pj::SdpSession * >(argp1);
  result = (void *) ((arg1)->pjSdpSession);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_SdpSession(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SdpSession *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_SdpSession")) SWIG_fail;
  result = (pj::SdpSession *)new pj::SdpSession();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SdpSession, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_SdpSession(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::SdpSession *arg1 = (pj::SdpSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_SdpSession",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__SdpSession, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SdpSession" "', argument " "1"" of type '" "pj::SdpSession *""'"); 
  }
  arg1 = reinterpret_cast< pj::SdpSession * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *SdpSession_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__SdpSession, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaFmtChangedEvent_newWidth_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFmtChangedEvent *arg1 = (pj::MediaFmtChangedEvent *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFmtChangedEvent_newWidth_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFmtChangedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFmtChangedEvent_newWidth_set" "', argument " "1"" of type '" "pj::MediaFmtChangedEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFmtChangedEvent * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFmtChangedEvent_newWidth_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->newWidth = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFmtChangedEvent_newWidth_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFmtChangedEvent *arg1 = (pj::MediaFmtChangedEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFmtChangedEvent_newWidth_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFmtChangedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFmtChangedEvent_newWidth_get" "', argument " "1"" of type '" "pj::MediaFmtChangedEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFmtChangedEvent * >(argp1);
  result = (unsigned int) ((arg1)->newWidth);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFmtChangedEvent_newHeight_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFmtChangedEvent *arg1 = (pj::MediaFmtChangedEvent *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaFmtChangedEvent_newHeight_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFmtChangedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFmtChangedEvent_newHeight_set" "', argument " "1"" of type '" "pj::MediaFmtChangedEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFmtChangedEvent * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaFmtChangedEvent_newHeight_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->newHeight = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaFmtChangedEvent_newHeight_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFmtChangedEvent *arg1 = (pj::MediaFmtChangedEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaFmtChangedEvent_newHeight_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFmtChangedEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaFmtChangedEvent_newHeight_get" "', argument " "1"" of type '" "pj::MediaFmtChangedEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFmtChangedEvent * >(argp1);
  result = (unsigned int) ((arg1)->newHeight);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaFmtChangedEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFmtChangedEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaFmtChangedEvent")) SWIG_fail;
  result = (pj::MediaFmtChangedEvent *)new pj::MediaFmtChangedEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaFmtChangedEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaFmtChangedEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaFmtChangedEvent *arg1 = (pj::MediaFmtChangedEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaFmtChangedEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaFmtChangedEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaFmtChangedEvent" "', argument " "1"" of type '" "pj::MediaFmtChangedEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaFmtChangedEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaFmtChangedEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaFmtChangedEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaEvent_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaEvent *arg1 = (pj::MediaEvent *) 0 ;
  pjmedia_event_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaEvent_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaEvent_type_set" "', argument " "1"" of type '" "pj::MediaEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaEvent * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaEvent_type_set" "', argument " "2"" of type '" "pjmedia_event_type""'");
  } 
  arg2 = static_cast< pjmedia_event_type >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaEvent_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaEvent *arg1 = (pj::MediaEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_event_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaEvent_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaEvent_type_get" "', argument " "1"" of type '" "pj::MediaEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaEvent * >(argp1);
  result = (pjmedia_event_type) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaEvent_pjMediaEvent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaEvent *arg1 = (pj::MediaEvent *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaEvent_pjMediaEvent_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaEvent_pjMediaEvent_set" "', argument " "1"" of type '" "pj::MediaEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaEvent * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaEvent_pjMediaEvent_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->pjMediaEvent = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaEvent_pjMediaEvent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaEvent *arg1 = (pj::MediaEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  void *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaEvent_pjMediaEvent_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaEvent, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaEvent_pjMediaEvent_get" "', argument " "1"" of type '" "pj::MediaEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaEvent * >(argp1);
  result = (void *) ((arg1)->pjMediaEvent);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaEvent")) SWIG_fail;
  result = (pj::MediaEvent *)new pj::MediaEvent();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaEvent, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaEvent *arg1 = (pj::MediaEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaEvent",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaEvent, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaEvent" "', argument " "1"" of type '" "pj::MediaEvent *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaEvent * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaEvent_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaEvent, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaTransportInfo_srcRtpName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaTransportInfo *arg1 = (pj::MediaTransportInfo *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaTransportInfo_srcRtpName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaTransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaTransportInfo_srcRtpName_set" "', argument " "1"" of type '" "pj::MediaTransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaTransportInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaTransportInfo_srcRtpName_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaTransportInfo_srcRtpName_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->srcRtpName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaTransportInfo_srcRtpName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaTransportInfo *arg1 = (pj::MediaTransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaTransportInfo_srcRtpName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaTransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaTransportInfo_srcRtpName_get" "', argument " "1"" of type '" "pj::MediaTransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaTransportInfo * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->srcRtpName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaTransportInfo_srcRtcpName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaTransportInfo *arg1 = (pj::MediaTransportInfo *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaTransportInfo_srcRtcpName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaTransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaTransportInfo_srcRtcpName_set" "', argument " "1"" of type '" "pj::MediaTransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaTransportInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaTransportInfo_srcRtcpName_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaTransportInfo_srcRtcpName_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->srcRtcpName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaTransportInfo_srcRtcpName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaTransportInfo *arg1 = (pj::MediaTransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaTransportInfo_srcRtcpName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaTransportInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaTransportInfo_srcRtcpName_get" "', argument " "1"" of type '" "pj::MediaTransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaTransportInfo * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->srcRtcpName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaTransportInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaTransportInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaTransportInfo")) SWIG_fail;
  result = (pj::MediaTransportInfo *)new pj::MediaTransportInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaTransportInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaTransportInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaTransportInfo *arg1 = (pj::MediaTransportInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaTransportInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaTransportInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaTransportInfo" "', argument " "1"" of type '" "pj::MediaTransportInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaTransportInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaTransportInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaTransportInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallSetting_flag_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallSetting_flag_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_flag_set" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallSetting_flag_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->flag = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_flag_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSetting_flag_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_flag_get" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  result = (unsigned int) ((arg1)->flag);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_reqKeyframeMethod_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallSetting_reqKeyframeMethod_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_reqKeyframeMethod_set" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallSetting_reqKeyframeMethod_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->reqKeyframeMethod = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_reqKeyframeMethod_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSetting_reqKeyframeMethod_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_reqKeyframeMethod_get" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  result = (unsigned int) ((arg1)->reqKeyframeMethod);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_audioCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallSetting_audioCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_audioCount_set" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallSetting_audioCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->audioCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_audioCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSetting_audioCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_audioCount_get" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  result = (unsigned int) ((arg1)->audioCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_videoCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallSetting_videoCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_videoCount_set" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallSetting_videoCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->videoCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSetting_videoCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSetting_videoCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_videoCount_get" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  result = (unsigned int) ((arg1)->videoCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallSetting__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj_bool_t arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CallSetting",&obj0)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_pj_bool_t,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CallSetting" "', argument " "1"" of type '" "pj_bool_t""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CallSetting" "', argument " "1"" of type '" "pj_bool_t""'");
    } else {
      pj_bool_t * temp = reinterpret_cast< pj_bool_t * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (pj::CallSetting *)new pj::CallSetting(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallSetting__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallSetting")) SWIG_fail;
  result = (pj::CallSetting *)new pj::CallSetting();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallSetting(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CallSetting__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_pj_bool_t, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CallSetting__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CallSetting'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::CallSetting::CallSetting(pj_bool_t)\n"
    "    pj::CallSetting::CallSetting()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallSetting_isEmpty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSetting_isEmpty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSetting_isEmpty" "', argument " "1"" of type '" "pj::CallSetting const *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  result = (bool)((pj::CallSetting const *)arg1)->isEmpty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CallSetting(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSetting *arg1 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallSetting",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSetting, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallSetting" "', argument " "1"" of type '" "pj::CallSetting *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSetting * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallSetting_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CallSetting, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallMediaInfo_index_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_index_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_index_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_index_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->index = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_index_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_index_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_index_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (unsigned int) ((arg1)->index);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  pjmedia_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_type_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_type_set" "', argument " "2"" of type '" "pjmedia_type""'");
  } 
  arg2 = static_cast< pjmedia_type >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_type_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (pjmedia_type) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_dir_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  pjmedia_dir arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_dir_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_dir_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_dir_set" "', argument " "2"" of type '" "pjmedia_dir""'");
  } 
  arg2 = static_cast< pjmedia_dir >(val2);
  if (arg1) (arg1)->dir = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_dir_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_dir result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_dir_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_dir_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (pjmedia_dir) ((arg1)->dir);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  pjsua_call_media_status arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_status_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_status_set" "', argument " "2"" of type '" "pjsua_call_media_status""'");
  } 
  arg2 = static_cast< pjsua_call_media_status >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_call_media_status result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_status_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (pjsua_call_media_status) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_audioConfSlot_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_audioConfSlot_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_audioConfSlot_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_audioConfSlot_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->audioConfSlot = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_audioConfSlot_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_audioConfSlot_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_audioConfSlot_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (int) ((arg1)->audioConfSlot);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_videoIncomingWindowId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  pjsua_vid_win_id arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_videoIncomingWindowId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_videoIncomingWindowId_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_videoIncomingWindowId_set" "', argument " "2"" of type '" "pjsua_vid_win_id""'");
  } 
  arg2 = static_cast< pjsua_vid_win_id >(val2);
  if (arg1) (arg1)->videoIncomingWindowId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_videoIncomingWindowId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_vid_win_id result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_videoIncomingWindowId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_videoIncomingWindowId_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (pjsua_vid_win_id) ((arg1)->videoIncomingWindowId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_videoCapDev_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  pjmedia_vid_dev_index arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfo_videoCapDev_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_videoCapDev_set" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfo_videoCapDev_set" "', argument " "2"" of type '" "pjmedia_vid_dev_index""'");
  } 
  arg2 = static_cast< pjmedia_vid_dev_index >(val2);
  if (arg1) (arg1)->videoCapDev = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfo_videoCapDev_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_vid_dev_index result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfo_videoCapDev_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfo_videoCapDev_get" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  result = (pjmedia_vid_dev_index) ((arg1)->videoCapDev);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallMediaInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallMediaInfo")) SWIG_fail;
  result = (pj::CallMediaInfo *)new pj::CallMediaInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallMediaInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CallMediaInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallMediaInfo *arg1 = (pj::CallMediaInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallMediaInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallMediaInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallMediaInfo" "', argument " "1"" of type '" "pj::CallMediaInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallMediaInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallMediaInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CallMediaInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallInfo_id_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pjsua_call_id arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_id_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_id_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_id_set" "', argument " "2"" of type '" "pjsua_call_id""'");
  } 
  arg2 = static_cast< pjsua_call_id >(val2);
  if (arg1) (arg1)->id = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_id_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_call_id result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_id_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_id_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pjsua_call_id) ((arg1)->id);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_role_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pjsip_role_e arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_role_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_role_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_role_set" "', argument " "2"" of type '" "pjsip_role_e""'");
  } 
  arg2 = static_cast< pjsip_role_e >(val2);
  if (arg1) (arg1)->role = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_role_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_role_e result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_role_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_role_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pjsip_role_e) ((arg1)->role);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_accId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pjsua_acc_id arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_accId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_accId_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_accId_set" "', argument " "2"" of type '" "pjsua_acc_id""'");
  } 
  arg2 = static_cast< pjsua_acc_id >(val2);
  if (arg1) (arg1)->accId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_accId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_acc_id result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_accId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_accId_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pjsua_acc_id) ((arg1)->accId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_localUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_localUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_localUri_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_localUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_localUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->localUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_localUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_localUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_localUri_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->localUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_localContact_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_localContact_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_localContact_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_localContact_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_localContact_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->localContact = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_localContact_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_localContact_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_localContact_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->localContact);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remoteUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_remoteUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remoteUri_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_remoteUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_remoteUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->remoteUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remoteUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_remoteUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remoteUri_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->remoteUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remoteContact_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_remoteContact_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remoteContact_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_remoteContact_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_remoteContact_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->remoteContact = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remoteContact_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_remoteContact_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remoteContact_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->remoteContact);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_callIdString_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_callIdString_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_callIdString_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_callIdString_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_callIdString_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->callIdString = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_callIdString_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_callIdString_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_callIdString_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->callIdString);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_setting_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::CallSetting *arg2 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_setting_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_setting_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_setting_set" "', argument " "2"" of type '" "pj::CallSetting *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallSetting * >(argp2);
  if (arg1) (arg1)->setting = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_setting_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_setting_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_setting_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::CallSetting *)& ((arg1)->setting);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pjsip_inv_state arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_state_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_state_set" "', argument " "2"" of type '" "pjsip_inv_state""'");
  } 
  arg2 = static_cast< pjsip_inv_state >(val2);
  if (arg1) (arg1)->state = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_state_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_inv_state result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_state_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_state_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pjsip_inv_state) ((arg1)->state);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_stateText_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_stateText_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_stateText_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_stateText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_stateText_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->stateText = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_stateText_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_stateText_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_stateText_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->stateText);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_lastStatusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_lastStatusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_lastStatusCode_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_lastStatusCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->lastStatusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_lastStatusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_lastStatusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_lastStatusCode_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pjsip_status_code) ((arg1)->lastStatusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_lastReason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_lastReason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_lastReason_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_lastReason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallInfo_lastReason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->lastReason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_lastReason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_lastReason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_lastReason_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::string *) & ((arg1)->lastReason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_media_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::CallMediaInfoVector *arg2 = (pj::CallMediaInfoVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_media_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_media_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_media_set" "', argument " "2"" of type '" "pj::CallMediaInfoVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallMediaInfoVector * >(argp2);
  if (arg1) (arg1)->media = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_media_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallMediaInfoVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_media_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_media_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::CallMediaInfoVector *)& ((arg1)->media);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_provMedia_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::CallMediaInfoVector *arg2 = (pj::CallMediaInfoVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_provMedia_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_provMedia_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_provMedia_set" "', argument " "2"" of type '" "pj::CallMediaInfoVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallMediaInfoVector * >(argp2);
  if (arg1) (arg1)->provMedia = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_provMedia_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallMediaInfoVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_provMedia_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_provMedia_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::CallMediaInfoVector *)& ((arg1)->provMedia);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_connectDuration_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::TimeVal *arg2 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_connectDuration_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_connectDuration_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_connectDuration_set" "', argument " "2"" of type '" "pj::TimeVal *""'"); 
  }
  arg2 = reinterpret_cast< pj::TimeVal * >(argp2);
  if (arg1) (arg1)->connectDuration = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_connectDuration_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TimeVal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_connectDuration_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_connectDuration_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::TimeVal *)& ((arg1)->connectDuration);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_totalDuration_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  pj::TimeVal *arg2 = (pj::TimeVal *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_totalDuration_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_totalDuration_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallInfo_totalDuration_set" "', argument " "2"" of type '" "pj::TimeVal *""'"); 
  }
  arg2 = reinterpret_cast< pj::TimeVal * >(argp2);
  if (arg1) (arg1)->totalDuration = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_totalDuration_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TimeVal *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_totalDuration_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_totalDuration_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (pj::TimeVal *)& ((arg1)->totalDuration);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__TimeVal, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remOfferer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_remOfferer_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remOfferer_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_remOfferer_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->remOfferer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remOfferer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_remOfferer_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remOfferer_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (bool) ((arg1)->remOfferer);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remAudioCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_remAudioCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remAudioCount_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_remAudioCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->remAudioCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remAudioCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_remAudioCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remAudioCount_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (unsigned int) ((arg1)->remAudioCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remVideoCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallInfo_remVideoCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remVideoCount_set" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallInfo_remVideoCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->remVideoCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallInfo_remVideoCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallInfo_remVideoCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallInfo_remVideoCount_get" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  result = (unsigned int) ((arg1)->remVideoCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallInfo")) SWIG_fail;
  result = (pj::CallInfo *)new pj::CallInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CallInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallInfo *arg1 = (pj::CallInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallInfo" "', argument " "1"" of type '" "pj::CallInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CallInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_StreamInfo_type_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pjmedia_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_type_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_type_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StreamInfo_type_set" "', argument " "2"" of type '" "pjmedia_type""'");
  } 
  arg2 = static_cast< pjmedia_type >(val2);
  if (arg1) (arg1)->type = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_type_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_type_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_type_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pjmedia_type) ((arg1)->type);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_proto_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pjmedia_tp_proto arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_proto_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_proto_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StreamInfo_proto_set" "', argument " "2"" of type '" "pjmedia_tp_proto""'");
  } 
  arg2 = static_cast< pjmedia_tp_proto >(val2);
  if (arg1) (arg1)->proto = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_proto_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_tp_proto result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_proto_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_proto_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pjmedia_tp_proto) ((arg1)->proto);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_dir_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pjmedia_dir arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_dir_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_dir_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StreamInfo_dir_set" "', argument " "2"" of type '" "pjmedia_dir""'");
  } 
  arg2 = static_cast< pjmedia_dir >(val2);
  if (arg1) (arg1)->dir = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_dir_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_dir result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_dir_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_dir_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pjmedia_dir) ((arg1)->dir);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_remoteRtpAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_remoteRtpAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_remoteRtpAddress_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamInfo_remoteRtpAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamInfo_remoteRtpAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->remoteRtpAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_remoteRtpAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_remoteRtpAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_remoteRtpAddress_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->remoteRtpAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_remoteRtcpAddress_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_remoteRtcpAddress_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_remoteRtcpAddress_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamInfo_remoteRtcpAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamInfo_remoteRtcpAddress_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->remoteRtcpAddress = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_remoteRtcpAddress_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_remoteRtcpAddress_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_remoteRtcpAddress_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->remoteRtcpAddress);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_txPt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_txPt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_txPt_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StreamInfo_txPt_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->txPt = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_txPt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_txPt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_txPt_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (unsigned int) ((arg1)->txPt);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_rxPt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_rxPt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_rxPt_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StreamInfo_rxPt_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->rxPt = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_rxPt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_rxPt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_rxPt_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (unsigned int) ((arg1)->rxPt);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_codecName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_codecName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_codecName_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamInfo_codecName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "StreamInfo_codecName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->codecName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_codecName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_codecName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_codecName_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pj::string *) & ((arg1)->codecName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_codecClockRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_codecClockRate_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_codecClockRate_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "StreamInfo_codecClockRate_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->codecClockRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_codecClockRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_codecClockRate_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_codecClockRate_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (unsigned int) ((arg1)->codecClockRate);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_codecParam_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  pj::CodecParam arg2 = (pj::CodecParam) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamInfo_codecParam_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_codecParam_set" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamInfo_codecParam_set" "', argument " "2"" of type '" "pj::CodecParam""'"); 
  }
  if (arg1) (arg1)->codecParam = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamInfo_codecParam_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CodecParam result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamInfo_codecParam_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamInfo_codecParam_get" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  result = (pj::CodecParam) ((arg1)->codecParam);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StreamInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_StreamInfo")) SWIG_fail;
  result = (pj::StreamInfo *)new pj::StreamInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__StreamInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StreamInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamInfo *arg1 = (pj::StreamInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StreamInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StreamInfo" "', argument " "1"" of type '" "pj::StreamInfo *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StreamInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__StreamInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_StreamStat_rtcp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamStat *arg1 = (pj::StreamStat *) 0 ;
  pj::RtcpStat *arg2 = (pj::RtcpStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamStat_rtcp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamStat_rtcp_set" "', argument " "1"" of type '" "pj::StreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamStat_rtcp_set" "', argument " "2"" of type '" "pj::RtcpStat *""'"); 
  }
  arg2 = reinterpret_cast< pj::RtcpStat * >(argp2);
  if (arg1) (arg1)->rtcp = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamStat_rtcp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamStat *arg1 = (pj::StreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::RtcpStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamStat_rtcp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamStat_rtcp_get" "', argument " "1"" of type '" "pj::StreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamStat * >(argp1);
  result = (pj::RtcpStat *)& ((arg1)->rtcp);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__RtcpStat, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamStat_jbuf_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamStat *arg1 = (pj::StreamStat *) 0 ;
  pj::JbufState *arg2 = (pj::JbufState *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:StreamStat_jbuf_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamStat_jbuf_set" "', argument " "1"" of type '" "pj::StreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamStat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__JbufState, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "StreamStat_jbuf_set" "', argument " "2"" of type '" "pj::JbufState *""'"); 
  }
  arg2 = reinterpret_cast< pj::JbufState * >(argp2);
  if (arg1) (arg1)->jbuf = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_StreamStat_jbuf_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamStat *arg1 = (pj::StreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::JbufState *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:StreamStat_jbuf_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamStat, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "StreamStat_jbuf_get" "', argument " "1"" of type '" "pj::StreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamStat * >(argp1);
  result = (pj::JbufState *)& ((arg1)->jbuf);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__JbufState, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_StreamStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamStat *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_StreamStat")) SWIG_fail;
  result = (pj::StreamStat *)new pj::StreamStat();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__StreamStat, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_StreamStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::StreamStat *arg1 = (pj::StreamStat *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_StreamStat",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__StreamStat, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_StreamStat" "', argument " "1"" of type '" "pj::StreamStat *""'"); 
  }
  arg1 = reinterpret_cast< pj::StreamStat * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *StreamStat_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__StreamStat, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallStateParam_e_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallStateParam *arg1 = (pj::OnCallStateParam *) 0 ;
  pj::SipEvent *arg2 = (pj::SipEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallStateParam_e_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallStateParam_e_set" "', argument " "1"" of type '" "pj::OnCallStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallStateParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallStateParam_e_set" "', argument " "2"" of type '" "pj::SipEvent *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipEvent * >(argp2);
  if (arg1) (arg1)->e = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallStateParam_e_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallStateParam *arg1 = (pj::OnCallStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallStateParam_e_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallStateParam_e_get" "', argument " "1"" of type '" "pj::OnCallStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallStateParam * >(argp1);
  result = (pj::SipEvent *)& ((arg1)->e);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallStateParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallStateParam")) SWIG_fail;
  result = (pj::OnCallStateParam *)new pj::OnCallStateParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallStateParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallStateParam *arg1 = (pj::OnCallStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallStateParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallStateParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallStateParam" "', argument " "1"" of type '" "pj::OnCallStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallStateParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallStateParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallStateParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallTsxStateParam_e_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTsxStateParam *arg1 = (pj::OnCallTsxStateParam *) 0 ;
  pj::SipEvent *arg2 = (pj::SipEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTsxStateParam_e_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTsxStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTsxStateParam_e_set" "', argument " "1"" of type '" "pj::OnCallTsxStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTsxStateParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallTsxStateParam_e_set" "', argument " "2"" of type '" "pj::SipEvent *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipEvent * >(argp2);
  if (arg1) (arg1)->e = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTsxStateParam_e_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTsxStateParam *arg1 = (pj::OnCallTsxStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTsxStateParam_e_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTsxStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTsxStateParam_e_get" "', argument " "1"" of type '" "pj::OnCallTsxStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTsxStateParam * >(argp1);
  result = (pj::SipEvent *)& ((arg1)->e);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallTsxStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTsxStateParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallTsxStateParam")) SWIG_fail;
  result = (pj::OnCallTsxStateParam *)new pj::OnCallTsxStateParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallTsxStateParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallTsxStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTsxStateParam *arg1 = (pj::OnCallTsxStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallTsxStateParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTsxStateParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallTsxStateParam" "', argument " "1"" of type '" "pj::OnCallTsxStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTsxStateParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallTsxStateParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallTsxStateParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_OnCallMediaStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaStateParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallMediaStateParam")) SWIG_fail;
  result = (pj::OnCallMediaStateParam *)new pj::OnCallMediaStateParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallMediaStateParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallMediaStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaStateParam *arg1 = (pj::OnCallMediaStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallMediaStateParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaStateParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallMediaStateParam" "', argument " "1"" of type '" "pj::OnCallMediaStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaStateParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallMediaStateParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallMediaStateParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallSdpCreatedParam_sdp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallSdpCreatedParam *arg1 = (pj::OnCallSdpCreatedParam *) 0 ;
  pj::SdpSession *arg2 = (pj::SdpSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallSdpCreatedParam_sdp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallSdpCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallSdpCreatedParam_sdp_set" "', argument " "1"" of type '" "pj::OnCallSdpCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallSdpCreatedParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallSdpCreatedParam_sdp_set" "', argument " "2"" of type '" "pj::SdpSession *""'"); 
  }
  arg2 = reinterpret_cast< pj::SdpSession * >(argp2);
  if (arg1) (arg1)->sdp = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallSdpCreatedParam_sdp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallSdpCreatedParam *arg1 = (pj::OnCallSdpCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SdpSession *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallSdpCreatedParam_sdp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallSdpCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallSdpCreatedParam_sdp_get" "', argument " "1"" of type '" "pj::OnCallSdpCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallSdpCreatedParam * >(argp1);
  result = (pj::SdpSession *)& ((arg1)->sdp);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallSdpCreatedParam_remSdp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallSdpCreatedParam *arg1 = (pj::OnCallSdpCreatedParam *) 0 ;
  pj::SdpSession *arg2 = (pj::SdpSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallSdpCreatedParam_remSdp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallSdpCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallSdpCreatedParam_remSdp_set" "', argument " "1"" of type '" "pj::OnCallSdpCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallSdpCreatedParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallSdpCreatedParam_remSdp_set" "', argument " "2"" of type '" "pj::SdpSession *""'"); 
  }
  arg2 = reinterpret_cast< pj::SdpSession * >(argp2);
  if (arg1) (arg1)->remSdp = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallSdpCreatedParam_remSdp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallSdpCreatedParam *arg1 = (pj::OnCallSdpCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SdpSession *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallSdpCreatedParam_remSdp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallSdpCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallSdpCreatedParam_remSdp_get" "', argument " "1"" of type '" "pj::OnCallSdpCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallSdpCreatedParam * >(argp1);
  result = (pj::SdpSession *)& ((arg1)->remSdp);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallSdpCreatedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallSdpCreatedParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallSdpCreatedParam")) SWIG_fail;
  result = (pj::OnCallSdpCreatedParam *)new pj::OnCallSdpCreatedParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallSdpCreatedParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallSdpCreatedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallSdpCreatedParam *arg1 = (pj::OnCallSdpCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallSdpCreatedParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallSdpCreatedParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallSdpCreatedParam" "', argument " "1"" of type '" "pj::OnCallSdpCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallSdpCreatedParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallSdpCreatedParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallSdpCreatedParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnStreamCreatedParam_stream_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  pj::MediaStream arg2 = (pj::MediaStream) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnStreamCreatedParam_stream_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamCreatedParam_stream_set" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnStreamCreatedParam_stream_set" "', argument " "2"" of type '" "pj::MediaStream""'"); 
  }
  if (arg1) (arg1)->stream = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamCreatedParam_stream_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaStream result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnStreamCreatedParam_stream_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamCreatedParam_stream_get" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  result = (pj::MediaStream) ((arg1)->stream);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamCreatedParam_streamIdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnStreamCreatedParam_streamIdx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamCreatedParam_streamIdx_set" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnStreamCreatedParam_streamIdx_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->streamIdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamCreatedParam_streamIdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnStreamCreatedParam_streamIdx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamCreatedParam_streamIdx_get" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  result = (unsigned int) ((arg1)->streamIdx);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamCreatedParam_pPort_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  pj::MediaPort arg2 = (pj::MediaPort) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnStreamCreatedParam_pPort_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamCreatedParam_pPort_set" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnStreamCreatedParam_pPort_set" "', argument " "2"" of type '" "pj::MediaPort""'"); 
  }
  if (arg1) (arg1)->pPort = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamCreatedParam_pPort_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaPort result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnStreamCreatedParam_pPort_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamCreatedParam_pPort_get" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  result = (pj::MediaPort) ((arg1)->pPort);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnStreamCreatedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnStreamCreatedParam")) SWIG_fail;
  result = (pj::OnStreamCreatedParam *)new pj::OnStreamCreatedParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnStreamCreatedParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnStreamCreatedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamCreatedParam *arg1 = (pj::OnStreamCreatedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnStreamCreatedParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamCreatedParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnStreamCreatedParam" "', argument " "1"" of type '" "pj::OnStreamCreatedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnStreamCreatedParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnStreamCreatedParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnStreamDestroyedParam_stream_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamDestroyedParam *arg1 = (pj::OnStreamDestroyedParam *) 0 ;
  pj::MediaStream arg2 = (pj::MediaStream) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnStreamDestroyedParam_stream_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamDestroyedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamDestroyedParam_stream_set" "', argument " "1"" of type '" "pj::OnStreamDestroyedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamDestroyedParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnStreamDestroyedParam_stream_set" "', argument " "2"" of type '" "pj::MediaStream""'"); 
  }
  if (arg1) (arg1)->stream = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamDestroyedParam_stream_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamDestroyedParam *arg1 = (pj::OnStreamDestroyedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaStream result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnStreamDestroyedParam_stream_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamDestroyedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamDestroyedParam_stream_get" "', argument " "1"" of type '" "pj::OnStreamDestroyedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamDestroyedParam * >(argp1);
  result = (pj::MediaStream) ((arg1)->stream);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamDestroyedParam_streamIdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamDestroyedParam *arg1 = (pj::OnStreamDestroyedParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnStreamDestroyedParam_streamIdx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamDestroyedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamDestroyedParam_streamIdx_set" "', argument " "1"" of type '" "pj::OnStreamDestroyedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamDestroyedParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnStreamDestroyedParam_streamIdx_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->streamIdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnStreamDestroyedParam_streamIdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamDestroyedParam *arg1 = (pj::OnStreamDestroyedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnStreamDestroyedParam_streamIdx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamDestroyedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnStreamDestroyedParam_streamIdx_get" "', argument " "1"" of type '" "pj::OnStreamDestroyedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamDestroyedParam * >(argp1);
  result = (unsigned int) ((arg1)->streamIdx);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnStreamDestroyedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamDestroyedParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnStreamDestroyedParam")) SWIG_fail;
  result = (pj::OnStreamDestroyedParam *)new pj::OnStreamDestroyedParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnStreamDestroyedParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnStreamDestroyedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnStreamDestroyedParam *arg1 = (pj::OnStreamDestroyedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnStreamDestroyedParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnStreamDestroyedParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnStreamDestroyedParam" "', argument " "1"" of type '" "pj::OnStreamDestroyedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnStreamDestroyedParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnStreamDestroyedParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnStreamDestroyedParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnDtmfDigitParam_digit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnDtmfDigitParam *arg1 = (pj::OnDtmfDigitParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnDtmfDigitParam_digit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnDtmfDigitParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnDtmfDigitParam_digit_set" "', argument " "1"" of type '" "pj::OnDtmfDigitParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnDtmfDigitParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnDtmfDigitParam_digit_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnDtmfDigitParam_digit_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->digit = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnDtmfDigitParam_digit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnDtmfDigitParam *arg1 = (pj::OnDtmfDigitParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnDtmfDigitParam_digit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnDtmfDigitParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnDtmfDigitParam_digit_get" "', argument " "1"" of type '" "pj::OnDtmfDigitParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnDtmfDigitParam * >(argp1);
  result = (pj::string *) & ((arg1)->digit);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnDtmfDigitParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnDtmfDigitParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnDtmfDigitParam")) SWIG_fail;
  result = (pj::OnDtmfDigitParam *)new pj::OnDtmfDigitParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnDtmfDigitParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnDtmfDigitParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnDtmfDigitParam *arg1 = (pj::OnDtmfDigitParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnDtmfDigitParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnDtmfDigitParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnDtmfDigitParam" "', argument " "1"" of type '" "pj::OnDtmfDigitParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnDtmfDigitParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnDtmfDigitParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnDtmfDigitParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallTransferRequestParam_dstUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferRequestParam_dstUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferRequestParam_dstUri_set" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallTransferRequestParam_dstUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnCallTransferRequestParam_dstUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->dstUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferRequestParam_dstUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferRequestParam_dstUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferRequestParam_dstUri_get" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  result = (pj::string *) & ((arg1)->dstUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferRequestParam_statusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferRequestParam_statusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferRequestParam_statusCode_set" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallTransferRequestParam_statusCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->statusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferRequestParam_statusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferRequestParam_statusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferRequestParam_statusCode_get" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->statusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferRequestParam_opt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  pj::CallSetting *arg2 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferRequestParam_opt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferRequestParam_opt_set" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallTransferRequestParam_opt_set" "', argument " "2"" of type '" "pj::CallSetting *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallSetting * >(argp2);
  if (arg1) (arg1)->opt = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferRequestParam_opt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferRequestParam_opt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferRequestParam_opt_get" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  result = (pj::CallSetting *)& ((arg1)->opt);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallTransferRequestParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallTransferRequestParam")) SWIG_fail;
  result = (pj::OnCallTransferRequestParam *)new pj::OnCallTransferRequestParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallTransferRequestParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallTransferRequestParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferRequestParam *arg1 = (pj::OnCallTransferRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallTransferRequestParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferRequestParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallTransferRequestParam" "', argument " "1"" of type '" "pj::OnCallTransferRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallTransferRequestParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallTransferRequestParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_statusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferStatusParam_statusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_statusCode_set" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallTransferStatusParam_statusCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->statusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_statusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferStatusParam_statusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_statusCode_get" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->statusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferStatusParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_reason_set" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallTransferStatusParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnCallTransferStatusParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferStatusParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_reason_get" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_finalNotify_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferStatusParam_finalNotify_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_finalNotify_set" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallTransferStatusParam_finalNotify_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->finalNotify = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_finalNotify_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferStatusParam_finalNotify_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_finalNotify_get" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  result = (bool) ((arg1)->finalNotify);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_cont_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallTransferStatusParam_cont_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_cont_set" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallTransferStatusParam_cont_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->cont = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallTransferStatusParam_cont_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallTransferStatusParam_cont_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallTransferStatusParam_cont_get" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  result = (bool) ((arg1)->cont);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallTransferStatusParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallTransferStatusParam")) SWIG_fail;
  result = (pj::OnCallTransferStatusParam *)new pj::OnCallTransferStatusParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallTransferStatusParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallTransferStatusParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallTransferStatusParam *arg1 = (pj::OnCallTransferStatusParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallTransferStatusParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallTransferStatusParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallTransferStatusParam" "', argument " "1"" of type '" "pj::OnCallTransferStatusParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallTransferStatusParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallTransferStatusParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallReplaceRequestParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_rdata_set" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallReplaceRequestParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallReplaceRequestParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_rdata_get" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_statusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallReplaceRequestParam_statusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_statusCode_set" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallReplaceRequestParam_statusCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->statusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_statusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallReplaceRequestParam_statusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_statusCode_get" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->statusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallReplaceRequestParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_reason_set" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallReplaceRequestParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnCallReplaceRequestParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallReplaceRequestParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_reason_get" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_opt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  pj::CallSetting *arg2 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallReplaceRequestParam_opt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_opt_set" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallReplaceRequestParam_opt_set" "', argument " "2"" of type '" "pj::CallSetting *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallSetting * >(argp2);
  if (arg1) (arg1)->opt = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplaceRequestParam_opt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallReplaceRequestParam_opt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplaceRequestParam_opt_get" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  result = (pj::CallSetting *)& ((arg1)->opt);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallReplaceRequestParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallReplaceRequestParam")) SWIG_fail;
  result = (pj::OnCallReplaceRequestParam *)new pj::OnCallReplaceRequestParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallReplaceRequestParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallReplaceRequestParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplaceRequestParam *arg1 = (pj::OnCallReplaceRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallReplaceRequestParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplaceRequestParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallReplaceRequestParam" "', argument " "1"" of type '" "pj::OnCallReplaceRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallReplaceRequestParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallReplaceRequestParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallReplacedParam_newCallId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplacedParam *arg1 = (pj::OnCallReplacedParam *) 0 ;
  pjsua_call_id arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallReplacedParam_newCallId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplacedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplacedParam_newCallId_set" "', argument " "1"" of type '" "pj::OnCallReplacedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplacedParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallReplacedParam_newCallId_set" "', argument " "2"" of type '" "pjsua_call_id""'");
  } 
  arg2 = static_cast< pjsua_call_id >(val2);
  if (arg1) (arg1)->newCallId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallReplacedParam_newCallId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplacedParam *arg1 = (pj::OnCallReplacedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_call_id result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallReplacedParam_newCallId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplacedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallReplacedParam_newCallId_get" "', argument " "1"" of type '" "pj::OnCallReplacedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplacedParam * >(argp1);
  result = (pjsua_call_id) ((arg1)->newCallId);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallReplacedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplacedParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallReplacedParam")) SWIG_fail;
  result = (pj::OnCallReplacedParam *)new pj::OnCallReplacedParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallReplacedParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallReplacedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallReplacedParam *arg1 = (pj::OnCallReplacedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallReplacedParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallReplacedParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallReplacedParam" "', argument " "1"" of type '" "pj::OnCallReplacedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallReplacedParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallReplacedParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallReplacedParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallRxOfferParam_offer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  pj::SdpSession *arg2 = (pj::SdpSession *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallRxOfferParam_offer_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRxOfferParam_offer_set" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallRxOfferParam_offer_set" "', argument " "2"" of type '" "pj::SdpSession *""'"); 
  }
  arg2 = reinterpret_cast< pj::SdpSession * >(argp2);
  if (arg1) (arg1)->offer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRxOfferParam_offer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SdpSession *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallRxOfferParam_offer_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRxOfferParam_offer_get" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  result = (pj::SdpSession *)& ((arg1)->offer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SdpSession, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRxOfferParam_statusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallRxOfferParam_statusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRxOfferParam_statusCode_set" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallRxOfferParam_statusCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->statusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRxOfferParam_statusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallRxOfferParam_statusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRxOfferParam_statusCode_get" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->statusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRxOfferParam_opt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  pj::CallSetting *arg2 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallRxOfferParam_opt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRxOfferParam_opt_set" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallRxOfferParam_opt_set" "', argument " "2"" of type '" "pj::CallSetting *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallSetting * >(argp2);
  if (arg1) (arg1)->opt = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRxOfferParam_opt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallRxOfferParam_opt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRxOfferParam_opt_get" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  result = (pj::CallSetting *)& ((arg1)->opt);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallRxOfferParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallRxOfferParam")) SWIG_fail;
  result = (pj::OnCallRxOfferParam *)new pj::OnCallRxOfferParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallRxOfferParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallRxOfferParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRxOfferParam *arg1 = (pj::OnCallRxOfferParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallRxOfferParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRxOfferParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallRxOfferParam" "', argument " "1"" of type '" "pj::OnCallRxOfferParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallRxOfferParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallRxOfferParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallRedirectedParam_targetUri_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRedirectedParam *arg1 = (pj::OnCallRedirectedParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallRedirectedParam_targetUri_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRedirectedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRedirectedParam_targetUri_set" "', argument " "1"" of type '" "pj::OnCallRedirectedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRedirectedParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallRedirectedParam_targetUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnCallRedirectedParam_targetUri_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->targetUri = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRedirectedParam_targetUri_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRedirectedParam *arg1 = (pj::OnCallRedirectedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallRedirectedParam_targetUri_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRedirectedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRedirectedParam_targetUri_get" "', argument " "1"" of type '" "pj::OnCallRedirectedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRedirectedParam * >(argp1);
  result = (pj::string *) & ((arg1)->targetUri);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRedirectedParam_e_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRedirectedParam *arg1 = (pj::OnCallRedirectedParam *) 0 ;
  pj::SipEvent *arg2 = (pj::SipEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallRedirectedParam_e_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRedirectedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRedirectedParam_e_set" "', argument " "1"" of type '" "pj::OnCallRedirectedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRedirectedParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallRedirectedParam_e_set" "', argument " "2"" of type '" "pj::SipEvent *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipEvent * >(argp2);
  if (arg1) (arg1)->e = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallRedirectedParam_e_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRedirectedParam *arg1 = (pj::OnCallRedirectedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallRedirectedParam_e_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRedirectedParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallRedirectedParam_e_get" "', argument " "1"" of type '" "pj::OnCallRedirectedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRedirectedParam * >(argp1);
  result = (pj::SipEvent *)& ((arg1)->e);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallRedirectedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRedirectedParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallRedirectedParam")) SWIG_fail;
  result = (pj::OnCallRedirectedParam *)new pj::OnCallRedirectedParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallRedirectedParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallRedirectedParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallRedirectedParam *arg1 = (pj::OnCallRedirectedParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallRedirectedParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallRedirectedParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallRedirectedParam" "', argument " "1"" of type '" "pj::OnCallRedirectedParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallRedirectedParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallRedirectedParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallRedirectedParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallMediaEventParam_medIdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaEventParam *arg1 = (pj::OnCallMediaEventParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallMediaEventParam_medIdx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaEventParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaEventParam_medIdx_set" "', argument " "1"" of type '" "pj::OnCallMediaEventParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaEventParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallMediaEventParam_medIdx_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->medIdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaEventParam_medIdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaEventParam *arg1 = (pj::OnCallMediaEventParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallMediaEventParam_medIdx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaEventParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaEventParam_medIdx_get" "', argument " "1"" of type '" "pj::OnCallMediaEventParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaEventParam * >(argp1);
  result = (unsigned int) ((arg1)->medIdx);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaEventParam_ev_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaEventParam *arg1 = (pj::OnCallMediaEventParam *) 0 ;
  pj::MediaEvent *arg2 = (pj::MediaEvent *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallMediaEventParam_ev_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaEventParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaEventParam_ev_set" "', argument " "1"" of type '" "pj::OnCallMediaEventParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaEventParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MediaEvent, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCallMediaEventParam_ev_set" "', argument " "2"" of type '" "pj::MediaEvent *""'"); 
  }
  arg2 = reinterpret_cast< pj::MediaEvent * >(argp2);
  if (arg1) (arg1)->ev = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaEventParam_ev_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaEventParam *arg1 = (pj::OnCallMediaEventParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaEvent *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallMediaEventParam_ev_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaEventParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaEventParam_ev_get" "', argument " "1"" of type '" "pj::OnCallMediaEventParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaEventParam * >(argp1);
  result = (pj::MediaEvent *)& ((arg1)->ev);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaEvent, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallMediaEventParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaEventParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallMediaEventParam")) SWIG_fail;
  result = (pj::OnCallMediaEventParam *)new pj::OnCallMediaEventParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallMediaEventParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallMediaEventParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaEventParam *arg1 = (pj::OnCallMediaEventParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallMediaEventParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaEventParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallMediaEventParam" "', argument " "1"" of type '" "pj::OnCallMediaEventParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaEventParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallMediaEventParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallMediaEventParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_medIdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallMediaTransportStateParam_medIdx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_medIdx_set" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallMediaTransportStateParam_medIdx_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->medIdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_medIdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallMediaTransportStateParam_medIdx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_medIdx_get" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  result = (unsigned int) ((arg1)->medIdx);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  pjsua_med_tp_st arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallMediaTransportStateParam_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_state_set" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallMediaTransportStateParam_state_set" "', argument " "2"" of type '" "pjsua_med_tp_st""'");
  } 
  arg2 = static_cast< pjsua_med_tp_st >(val2);
  if (arg1) (arg1)->state = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_state_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_med_tp_st result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallMediaTransportStateParam_state_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_state_get" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  result = (pjsua_med_tp_st) ((arg1)->state);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallMediaTransportStateParam_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_status_set" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallMediaTransportStateParam_status_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallMediaTransportStateParam_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_status_get" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  result = (pj_status_t) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_sipErrorCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCallMediaTransportStateParam_sipErrorCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_sipErrorCode_set" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCallMediaTransportStateParam_sipErrorCode_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sipErrorCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCallMediaTransportStateParam_sipErrorCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCallMediaTransportStateParam_sipErrorCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCallMediaTransportStateParam_sipErrorCode_get" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  result = (int) ((arg1)->sipErrorCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCallMediaTransportStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCallMediaTransportStateParam")) SWIG_fail;
  result = (pj::OnCallMediaTransportStateParam *)new pj::OnCallMediaTransportStateParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCallMediaTransportStateParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCallMediaTransportStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCallMediaTransportStateParam *arg1 = (pj::OnCallMediaTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCallMediaTransportStateParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCallMediaTransportStateParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCallMediaTransportStateParam" "', argument " "1"" of type '" "pj::OnCallMediaTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCallMediaTransportStateParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCallMediaTransportStateParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnCreateMediaTransportParam_mediaIdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCreateMediaTransportParam_mediaIdx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCreateMediaTransportParam_mediaIdx_set" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCreateMediaTransportParam_mediaIdx_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->mediaIdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCreateMediaTransportParam_mediaIdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCreateMediaTransportParam_mediaIdx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCreateMediaTransportParam_mediaIdx_get" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  result = (unsigned int) ((arg1)->mediaIdx);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCreateMediaTransportParam_mediaTp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  pj::MediaTransport arg2 = (pj::MediaTransport) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCreateMediaTransportParam_mediaTp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCreateMediaTransportParam_mediaTp_set" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnCreateMediaTransportParam_mediaTp_set" "', argument " "2"" of type '" "pj::MediaTransport""'"); 
  }
  if (arg1) (arg1)->mediaTp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCreateMediaTransportParam_mediaTp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaTransport result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCreateMediaTransportParam_mediaTp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCreateMediaTransportParam_mediaTp_get" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  result = (pj::MediaTransport) ((arg1)->mediaTp);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCreateMediaTransportParam_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnCreateMediaTransportParam_flags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCreateMediaTransportParam_flags_set" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnCreateMediaTransportParam_flags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnCreateMediaTransportParam_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnCreateMediaTransportParam_flags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnCreateMediaTransportParam_flags_get" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  result = (unsigned int) ((arg1)->flags);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnCreateMediaTransportParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnCreateMediaTransportParam")) SWIG_fail;
  result = (pj::OnCreateMediaTransportParam *)new pj::OnCreateMediaTransportParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnCreateMediaTransportParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnCreateMediaTransportParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnCreateMediaTransportParam *arg1 = (pj::OnCreateMediaTransportParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnCreateMediaTransportParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnCreateMediaTransportParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnCreateMediaTransportParam" "', argument " "1"" of type '" "pj::OnCreateMediaTransportParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnCreateMediaTransportParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnCreateMediaTransportParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallOpParam_opt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  pj::CallSetting *arg2 = (pj::CallSetting *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallOpParam_opt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_opt_set" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallOpParam_opt_set" "', argument " "2"" of type '" "pj::CallSetting *""'"); 
  }
  arg2 = reinterpret_cast< pj::CallSetting * >(argp2);
  if (arg1) (arg1)->opt = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_opt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallSetting *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallOpParam_opt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_opt_get" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  result = (pj::CallSetting *)& ((arg1)->opt);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSetting, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_statusCode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  pjsip_status_code arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallOpParam_statusCode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_statusCode_set" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallOpParam_statusCode_set" "', argument " "2"" of type '" "pjsip_status_code""'");
  } 
  arg2 = static_cast< pjsip_status_code >(val2);
  if (arg1) (arg1)->statusCode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_statusCode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_status_code result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallOpParam_statusCode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_statusCode_get" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  result = (pjsip_status_code) ((arg1)->statusCode);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallOpParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_reason_set" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallOpParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallOpParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallOpParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_reason_get" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_options_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallOpParam_options_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_options_set" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallOpParam_options_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->options = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_options_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallOpParam_options_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_options_get" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  result = (unsigned int) ((arg1)->options);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_txOption_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  pj::SipTxOption *arg2 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallOpParam_txOption_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_txOption_set" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallOpParam_txOption_set" "', argument " "2"" of type '" "pj::SipTxOption *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxOption * >(argp2);
  if (arg1) (arg1)->txOption = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallOpParam_txOption_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallOpParam_txOption_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallOpParam_txOption_get" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  result = (pj::SipTxOption *)& ((arg1)->txOption);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallOpParam__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  bool arg1 ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallOpParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CallOpParam",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CallOpParam" "', argument " "1"" of type '" "bool""'");
  } 
  arg1 = static_cast< bool >(val1);
  result = (pj::CallOpParam *)new pj::CallOpParam(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallOpParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallOpParam__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallOpParam")) SWIG_fail;
  result = (pj::CallOpParam *)new pj::CallOpParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallOpParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallOpParam(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CallOpParam__SWIG_1(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_bool(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CallOpParam__SWIG_0(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CallOpParam'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::CallOpParam::CallOpParam(bool)\n"
    "    pj::CallOpParam::CallOpParam()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_CallOpParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallOpParam *arg1 = (pj::CallOpParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallOpParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallOpParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallOpParam" "', argument " "1"" of type '" "pj::CallOpParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallOpParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallOpParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CallOpParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallSendRequestParam_method_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSendRequestParam *arg1 = (pj::CallSendRequestParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallSendRequestParam_method_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSendRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSendRequestParam_method_set" "', argument " "1"" of type '" "pj::CallSendRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSendRequestParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallSendRequestParam_method_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallSendRequestParam_method_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->method = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSendRequestParam_method_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSendRequestParam *arg1 = (pj::CallSendRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSendRequestParam_method_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSendRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSendRequestParam_method_get" "', argument " "1"" of type '" "pj::CallSendRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSendRequestParam * >(argp1);
  result = (pj::string *) & ((arg1)->method);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSendRequestParam_txOption_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSendRequestParam *arg1 = (pj::CallSendRequestParam *) 0 ;
  pj::SipTxOption *arg2 = (pj::SipTxOption *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallSendRequestParam_txOption_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSendRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSendRequestParam_txOption_set" "', argument " "1"" of type '" "pj::CallSendRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSendRequestParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallSendRequestParam_txOption_set" "', argument " "2"" of type '" "pj::SipTxOption *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipTxOption * >(argp2);
  if (arg1) (arg1)->txOption = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallSendRequestParam_txOption_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSendRequestParam *arg1 = (pj::CallSendRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipTxOption *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallSendRequestParam_txOption_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSendRequestParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallSendRequestParam_txOption_get" "', argument " "1"" of type '" "pj::CallSendRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSendRequestParam * >(argp1);
  result = (pj::SipTxOption *)& ((arg1)->txOption);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipTxOption, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallSendRequestParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSendRequestParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallSendRequestParam")) SWIG_fail;
  result = (pj::CallSendRequestParam *)new pj::CallSendRequestParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallSendRequestParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CallSendRequestParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallSendRequestParam *arg1 = (pj::CallSendRequestParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallSendRequestParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallSendRequestParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallSendRequestParam" "', argument " "1"" of type '" "pj::CallSendRequestParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallSendRequestParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallSendRequestParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CallSendRequestParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallVidSetStreamParam_medIdx_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallVidSetStreamParam_medIdx_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallVidSetStreamParam_medIdx_set" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallVidSetStreamParam_medIdx_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->medIdx = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallVidSetStreamParam_medIdx_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallVidSetStreamParam_medIdx_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallVidSetStreamParam_medIdx_get" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  result = (int) ((arg1)->medIdx);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallVidSetStreamParam_dir_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  pjmedia_dir arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallVidSetStreamParam_dir_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallVidSetStreamParam_dir_set" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallVidSetStreamParam_dir_set" "', argument " "2"" of type '" "pjmedia_dir""'");
  } 
  arg2 = static_cast< pjmedia_dir >(val2);
  if (arg1) (arg1)->dir = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallVidSetStreamParam_dir_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_dir result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallVidSetStreamParam_dir_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallVidSetStreamParam_dir_get" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  result = (pjmedia_dir) ((arg1)->dir);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallVidSetStreamParam_capDev_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  pjmedia_vid_dev_index arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallVidSetStreamParam_capDev_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallVidSetStreamParam_capDev_set" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallVidSetStreamParam_capDev_set" "', argument " "2"" of type '" "pjmedia_vid_dev_index""'");
  } 
  arg2 = static_cast< pjmedia_vid_dev_index >(val2);
  if (arg1) (arg1)->capDev = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallVidSetStreamParam_capDev_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjmedia_vid_dev_index result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallVidSetStreamParam_capDev_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallVidSetStreamParam_capDev_get" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  result = (pjmedia_vid_dev_index) ((arg1)->capDev);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallVidSetStreamParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallVidSetStreamParam")) SWIG_fail;
  result = (pj::CallVidSetStreamParam *)new pj::CallVidSetStreamParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallVidSetStreamParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CallVidSetStreamParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::CallVidSetStreamParam *arg1 = (pj::CallVidSetStreamParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallVidSetStreamParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__CallVidSetStreamParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallVidSetStreamParam" "', argument " "1"" of type '" "pj::CallVidSetStreamParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallVidSetStreamParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__CallVidSetStreamParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Call__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  pj::Account *arg2 = 0 ;
  int arg3 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  pj::Call *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:new_Call",&obj0,&obj1,&obj2)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__Account,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Call" "', argument " "2"" of type '" "pj::Account &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Call" "', argument " "2"" of type '" "pj::Account &""'"); 
  }
  arg2 = reinterpret_cast< pj::Account * >(argp2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_Call" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::Call *)new SwigDirector_Call(arg1,*arg2,arg3); 
  } else {
    result = (pj::Call *)new pj::Call(*arg2,arg3); 
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Call, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Call__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  pj::Account *arg2 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::Call *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_Call",&obj0,&obj1)) SWIG_fail;
  arg1 = obj0;
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__Account,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_Call" "', argument " "2"" of type '" "pj::Account &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_Call" "', argument " "2"" of type '" "pj::Account &""'"); 
  }
  arg2 = reinterpret_cast< pj::Account * >(argp2);
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::Call *)new SwigDirector_Call(arg1,*arg2); 
  } else {
    result = (pj::Call *)new pj::Call(*arg2); 
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Call, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Call(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__Account, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_Call__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    _v = (argv[0] != 0);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__Account, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_Call__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_Call'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Call::Call(pj::Account &,int)\n"
    "    pj::Call::Call(PyObject *,pj::Account &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_Call(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Call",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Call" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CallInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_getInfo",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getInfo" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  try {
    result = ((pj::Call const *)arg1)->getInfo();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::CallInfo(static_cast< const pj::CallInfo& >(result))), SWIGTYPE_p_pj__CallInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_isActive(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_isActive",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_isActive" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  result = (bool)((pj::Call const *)arg1)->isActive();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_getId",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getId" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  result = (int)((pj::Call const *)arg1)->getId();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_lookup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  Swig::Director *director = 0;
  pj::Call *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_lookup",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "Call_lookup" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (pj::Call *)pj::Call::lookup(arg1);
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Call, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_hasMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_hasMedia",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_hasMedia" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  result = (bool)((pj::Call const *)arg1)->hasMedia();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getMedia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::Media *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_getMedia",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getMedia" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_getMedia" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (pj::Media *)((pj::Call const *)arg1)->getMedia(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Media, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_remoteHasCap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  int arg2 ;
  pj::string *arg3 = 0 ;
  pj::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  pjsip_dialog_cap_status result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Call_remoteHasCap",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_remoteHasCap" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_remoteHasCap" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Call_remoteHasCap" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_remoteHasCap" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Call_remoteHasCap" "', argument " "4"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_remoteHasCap" "', argument " "4"" of type '" "pj::string const &""'"); 
    }
    arg4 = ptr;
  }
  result = (pjsip_dialog_cap_status)((pj::Call const *)arg1)->remoteHasCap(arg2,(pj::string const &)*arg3,(pj::string const &)*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_setUserData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_setUserData",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_setUserData" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_setUserData" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  (arg1)->setUserData(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getUserData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::Token result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_getUserData",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getUserData" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  result = (pj::Token)((pj::Call const *)arg1)->getUserData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getRemNatType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_stun_nat_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_getRemNatType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getRemNatType" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  try {
    result = (pj_stun_nat_type)(arg1)->getRemNatType();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_makeCall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::string *arg2 = 0 ;
  pj::CallOpParam *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Call_makeCall",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_makeCall" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_makeCall" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_makeCall" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Call_makeCall" "', argument " "3"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_makeCall" "', argument " "3"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg3 = reinterpret_cast< pj::CallOpParam * >(argp3);
  try {
    (arg1)->makeCall((pj::string const &)*arg2,(pj::CallOpParam const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_answer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::CallOpParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_answer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_answer" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_answer" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_answer" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::CallOpParam * >(argp2);
  try {
    (arg1)->answer((pj::CallOpParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_hangup(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::CallOpParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_hangup",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_hangup" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_hangup" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_hangup" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::CallOpParam * >(argp2);
  try {
    (arg1)->hangup((pj::CallOpParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_setHold(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::CallOpParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_setHold",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_setHold" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_setHold" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_setHold" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::CallOpParam * >(argp2);
  try {
    (arg1)->setHold((pj::CallOpParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_reinvite(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::CallOpParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_reinvite",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_reinvite" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_reinvite" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_reinvite" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::CallOpParam * >(argp2);
  try {
    (arg1)->reinvite((pj::CallOpParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::CallOpParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_update",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_update" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_update" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_update" "', argument " "2"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::CallOpParam * >(argp2);
  try {
    (arg1)->update((pj::CallOpParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_xfer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::string *arg2 = 0 ;
  pj::CallOpParam *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Call_xfer",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_xfer" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_xfer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_xfer" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Call_xfer" "', argument " "3"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_xfer" "', argument " "3"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg3 = reinterpret_cast< pj::CallOpParam * >(argp3);
  try {
    (arg1)->xfer((pj::string const &)*arg2,(pj::CallOpParam const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_xferReplaces(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::Call *arg2 = 0 ;
  pj::CallOpParam *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Call_xferReplaces",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_xferReplaces" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__Call,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_xferReplaces" "', argument " "2"" of type '" "pj::Call const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_xferReplaces" "', argument " "2"" of type '" "pj::Call const &""'"); 
  }
  arg2 = reinterpret_cast< pj::Call * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallOpParam,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Call_xferReplaces" "', argument " "3"" of type '" "pj::CallOpParam const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_xferReplaces" "', argument " "3"" of type '" "pj::CallOpParam const &""'"); 
  }
  arg3 = reinterpret_cast< pj::CallOpParam * >(argp3);
  try {
    (arg1)->xferReplaces((pj::Call const &)*arg2,(pj::CallOpParam const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_processRedirect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pjsip_redirect_op arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_processRedirect",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_processRedirect" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_processRedirect" "', argument " "2"" of type '" "pjsip_redirect_op""'");
  } 
  arg2 = static_cast< pjsip_redirect_op >(val2);
  try {
    (arg1)->processRedirect(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_dialDtmf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_dialDtmf",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_dialDtmf" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_dialDtmf" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_dialDtmf" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->dialDtmf((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_sendInstantMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::SendInstantMessageParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_sendInstantMessage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_sendInstantMessage" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SendInstantMessageParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_sendInstantMessage" "', argument " "2"" of type '" "pj::SendInstantMessageParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_sendInstantMessage" "', argument " "2"" of type '" "pj::SendInstantMessageParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::SendInstantMessageParam * >(argp2);
  try {
    (arg1)->sendInstantMessage((pj::SendInstantMessageParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_sendTypingIndication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::SendTypingIndicationParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_sendTypingIndication",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_sendTypingIndication" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__SendTypingIndicationParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_sendTypingIndication" "', argument " "2"" of type '" "pj::SendTypingIndicationParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_sendTypingIndication" "', argument " "2"" of type '" "pj::SendTypingIndicationParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::SendTypingIndicationParam * >(argp2);
  try {
    (arg1)->sendTypingIndication((pj::SendTypingIndicationParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_sendRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::CallSendRequestParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_sendRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_sendRequest" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallSendRequestParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_sendRequest" "', argument " "2"" of type '" "pj::CallSendRequestParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_sendRequest" "', argument " "2"" of type '" "pj::CallSendRequestParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::CallSendRequestParam * >(argp2);
  try {
    (arg1)->sendRequest((pj::CallSendRequestParam const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_dump(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  bool arg2 ;
  pj::string arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Call_dump",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_dump" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_dump" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "Call_dump" "', argument " "3"" of type '" "pj::string const""'"); 
    }
    arg3 = *ptr;
    if (SWIG_IsNewObj(res)) delete ptr;
  }
  try {
    result = (arg1)->dump(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_vidGetStreamIdx(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Call_vidGetStreamIdx",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_vidGetStreamIdx" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  result = (int)((pj::Call const *)arg1)->vidGetStreamIdx();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_vidStreamIsRunning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  int arg2 ;
  pjmedia_dir arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Call_vidStreamIsRunning",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_vidStreamIsRunning" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_vidStreamIsRunning" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Call_vidStreamIsRunning" "', argument " "3"" of type '" "pjmedia_dir""'");
  } 
  arg3 = static_cast< pjmedia_dir >(val3);
  result = (bool)((pj::Call const *)arg1)->vidStreamIsRunning(arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_vidSetStream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pjsua_call_vid_strm_op arg2 ;
  pj::CallVidSetStreamParam *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Call_vidSetStream",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_vidSetStream" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_vidSetStream" "', argument " "2"" of type '" "pjsua_call_vid_strm_op""'");
  } 
  arg2 = static_cast< pjsua_call_vid_strm_op >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallVidSetStreamParam,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Call_vidSetStream" "', argument " "3"" of type '" "pj::CallVidSetStreamParam const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_vidSetStream" "', argument " "3"" of type '" "pj::CallVidSetStreamParam const &""'"); 
  }
  arg3 = reinterpret_cast< pj::CallVidSetStreamParam * >(argp3);
  try {
    (arg1)->vidSetStream(arg2,(pj::CallVidSetStreamParam const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getStreamInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::StreamInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_getStreamInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getStreamInfo" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_getStreamInfo" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    result = ((pj::Call const *)arg1)->getStreamInfo(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::StreamInfo(static_cast< const pj::StreamInfo& >(result))), SWIGTYPE_p_pj__StreamInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getStreamStat(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::StreamStat result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_getStreamStat",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getStreamStat" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_getStreamStat" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    result = ((pj::Call const *)arg1)->getStreamStat(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::StreamStat(static_cast< const pj::StreamStat& >(result))), SWIGTYPE_p_pj__StreamStat, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_getMedTransportInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::MediaTransportInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_getMedTransportInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_getMedTransportInfo" "', argument " "1"" of type '" "pj::Call const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Call_getMedTransportInfo" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    result = ((pj::Call const *)arg1)->getMedTransportInfo(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::MediaTransportInfo(static_cast< const pj::MediaTransportInfo& >(result))), SWIGTYPE_p_pj__MediaTransportInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_processMediaUpdate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallMediaStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_processMediaUpdate",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_processMediaUpdate" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallMediaStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_processMediaUpdate" "', argument " "2"" of type '" "pj::OnCallMediaStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_processMediaUpdate" "', argument " "2"" of type '" "pj::OnCallMediaStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallMediaStateParam * >(argp2);
  (arg1)->processMediaUpdate(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_processStateChange(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_processStateChange",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_processStateChange" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_processStateChange" "', argument " "2"" of type '" "pj::OnCallStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_processStateChange" "', argument " "2"" of type '" "pj::OnCallStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallStateParam * >(argp2);
  (arg1)->processStateChange(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallState" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallState" "', argument " "2"" of type '" "pj::OnCallStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallState" "', argument " "2"" of type '" "pj::OnCallStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallStateParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallState(*arg2);
    } else {
      (arg1)->onCallState(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallTsxState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallTsxStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallTsxState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallTsxState" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallTsxStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallTsxState" "', argument " "2"" of type '" "pj::OnCallTsxStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallTsxState" "', argument " "2"" of type '" "pj::OnCallTsxStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallTsxStateParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallTsxState(*arg2);
    } else {
      (arg1)->onCallTsxState(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallMediaState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallMediaStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallMediaState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallMediaState" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallMediaStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallMediaState" "', argument " "2"" of type '" "pj::OnCallMediaStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallMediaState" "', argument " "2"" of type '" "pj::OnCallMediaStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallMediaStateParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallMediaState(*arg2);
    } else {
      (arg1)->onCallMediaState(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallSdpCreated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallSdpCreatedParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallSdpCreated",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallSdpCreated" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallSdpCreatedParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallSdpCreated" "', argument " "2"" of type '" "pj::OnCallSdpCreatedParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallSdpCreated" "', argument " "2"" of type '" "pj::OnCallSdpCreatedParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallSdpCreatedParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallSdpCreated(*arg2);
    } else {
      (arg1)->onCallSdpCreated(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onStreamCreated(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnStreamCreatedParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onStreamCreated",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onStreamCreated" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnStreamCreatedParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onStreamCreated" "', argument " "2"" of type '" "pj::OnStreamCreatedParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onStreamCreated" "', argument " "2"" of type '" "pj::OnStreamCreatedParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnStreamCreatedParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onStreamCreated(*arg2);
    } else {
      (arg1)->onStreamCreated(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onStreamDestroyed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnStreamDestroyedParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onStreamDestroyed",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onStreamDestroyed" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnStreamDestroyedParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onStreamDestroyed" "', argument " "2"" of type '" "pj::OnStreamDestroyedParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onStreamDestroyed" "', argument " "2"" of type '" "pj::OnStreamDestroyedParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnStreamDestroyedParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onStreamDestroyed(*arg2);
    } else {
      (arg1)->onStreamDestroyed(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onDtmfDigit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnDtmfDigitParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onDtmfDigit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onDtmfDigit" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnDtmfDigitParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onDtmfDigit" "', argument " "2"" of type '" "pj::OnDtmfDigitParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onDtmfDigit" "', argument " "2"" of type '" "pj::OnDtmfDigitParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnDtmfDigitParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onDtmfDigit(*arg2);
    } else {
      (arg1)->onDtmfDigit(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallTransferRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallTransferRequestParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallTransferRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallTransferRequest" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallTransferRequestParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallTransferRequest" "', argument " "2"" of type '" "pj::OnCallTransferRequestParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallTransferRequest" "', argument " "2"" of type '" "pj::OnCallTransferRequestParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallTransferRequestParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallTransferRequest(*arg2);
    } else {
      (arg1)->onCallTransferRequest(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallTransferStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallTransferStatusParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallTransferStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallTransferStatus" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallTransferStatusParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallTransferStatus" "', argument " "2"" of type '" "pj::OnCallTransferStatusParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallTransferStatus" "', argument " "2"" of type '" "pj::OnCallTransferStatusParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallTransferStatusParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallTransferStatus(*arg2);
    } else {
      (arg1)->onCallTransferStatus(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallReplaceRequest(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallReplaceRequestParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallReplaceRequest",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallReplaceRequest" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallReplaceRequestParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallReplaceRequest" "', argument " "2"" of type '" "pj::OnCallReplaceRequestParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallReplaceRequest" "', argument " "2"" of type '" "pj::OnCallReplaceRequestParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallReplaceRequestParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallReplaceRequest(*arg2);
    } else {
      (arg1)->onCallReplaceRequest(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallReplaced(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallReplacedParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallReplaced",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallReplaced" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallReplacedParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallReplaced" "', argument " "2"" of type '" "pj::OnCallReplacedParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallReplaced" "', argument " "2"" of type '" "pj::OnCallReplacedParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallReplacedParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallReplaced(*arg2);
    } else {
      (arg1)->onCallReplaced(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallRxOffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallRxOfferParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallRxOffer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallRxOffer" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallRxOfferParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallRxOffer" "', argument " "2"" of type '" "pj::OnCallRxOfferParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallRxOffer" "', argument " "2"" of type '" "pj::OnCallRxOfferParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallRxOfferParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallRxOffer(*arg2);
    } else {
      (arg1)->onCallRxOffer(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onInstantMessage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnInstantMessageParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onInstantMessage",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onInstantMessage" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnInstantMessageParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onInstantMessage" "', argument " "2"" of type '" "pj::OnInstantMessageParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onInstantMessage" "', argument " "2"" of type '" "pj::OnInstantMessageParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnInstantMessageParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onInstantMessage(*arg2);
    } else {
      (arg1)->onInstantMessage(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onInstantMessageStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnInstantMessageStatusParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onInstantMessageStatus",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onInstantMessageStatus" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnInstantMessageStatusParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onInstantMessageStatus" "', argument " "2"" of type '" "pj::OnInstantMessageStatusParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onInstantMessageStatus" "', argument " "2"" of type '" "pj::OnInstantMessageStatusParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnInstantMessageStatusParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onInstantMessageStatus(*arg2);
    } else {
      (arg1)->onInstantMessageStatus(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onTypingIndication(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnTypingIndicationParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onTypingIndication",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onTypingIndication" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnTypingIndicationParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onTypingIndication" "', argument " "2"" of type '" "pj::OnTypingIndicationParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onTypingIndication" "', argument " "2"" of type '" "pj::OnTypingIndicationParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnTypingIndicationParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onTypingIndication(*arg2);
    } else {
      (arg1)->onTypingIndication(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallRedirected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallRedirectedParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  pjsip_redirect_op result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallRedirected",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallRedirected" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallRedirectedParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallRedirected" "', argument " "2"" of type '" "pj::OnCallRedirectedParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallRedirected" "', argument " "2"" of type '" "pj::OnCallRedirectedParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallRedirectedParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      result = (pjsip_redirect_op)(arg1)->pj::Call::onCallRedirected(*arg2);
    } else {
      result = (pjsip_redirect_op)(arg1)->onCallRedirected(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallMediaTransportState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallMediaTransportStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallMediaTransportState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallMediaTransportState" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallMediaTransportStateParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallMediaTransportState" "', argument " "2"" of type '" "pj::OnCallMediaTransportStateParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallMediaTransportState" "', argument " "2"" of type '" "pj::OnCallMediaTransportStateParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallMediaTransportStateParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallMediaTransportState(*arg2);
    } else {
      (arg1)->onCallMediaTransportState(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCallMediaEvent(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCallMediaEventParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCallMediaEvent",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCallMediaEvent" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCallMediaEventParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCallMediaEvent" "', argument " "2"" of type '" "pj::OnCallMediaEventParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCallMediaEvent" "', argument " "2"" of type '" "pj::OnCallMediaEventParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCallMediaEventParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCallMediaEvent(*arg2);
    } else {
      (arg1)->onCallMediaEvent(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Call_onCreateMediaTransport(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  pj::OnCreateMediaTransportParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Call_onCreateMediaTransport",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Call_onCreateMediaTransport" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnCreateMediaTransportParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Call_onCreateMediaTransport" "', argument " "2"" of type '" "pj::OnCreateMediaTransportParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Call_onCreateMediaTransport" "', argument " "2"" of type '" "pj::OnCreateMediaTransportParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnCreateMediaTransportParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Call::onCreateMediaTransport(*arg2);
    } else {
      (arg1)->onCreateMediaTransport(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Call(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Call *arg1 = (pj::Call *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Call",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Call, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Call" "', argument " "1"" of type '" "pj::Call *""'"); 
  }
  arg1 = reinterpret_cast< pj::Call * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Call_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Call, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_CallMediaInfoVector_iterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  PyObject **arg2 = (PyObject **) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  arg2 = &obj0;
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_iterator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_iterator" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (swig::SwigPyIterator *)std_vector_Sl_pj_CallMediaInfo_Sg__iterator(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___nonzero__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector___nonzero__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___nonzero__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (bool)std_vector_Sl_pj_CallMediaInfo_Sg____nonzero__((std::vector< pj::CallMediaInfo > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___bool__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector___bool__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___bool__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (bool)std_vector_Sl_pj_CallMediaInfo_Sg____bool__((std::vector< pj::CallMediaInfo > const *)arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___len__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector___len__",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___len__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = std_vector_Sl_pj_CallMediaInfo_Sg____len__((std::vector< pj::CallMediaInfo > const *)arg1);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_pop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::value_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_pop",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_pop" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  try {
    result = std_vector_Sl_pj_CallMediaInfo_Sg__pop(arg1);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj((new std::vector< pj::CallMediaInfo >::value_type(static_cast< const std::vector< pj::CallMediaInfo >::value_type& >(result))), SWIGTYPE_p_pj__CallMediaInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___getslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  std::vector< pj::CallMediaInfo >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector___getslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___getslice__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___getslice__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CallMediaInfoVector___getslice__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val3);
  try {
    result = (std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *)std_vector_Sl_pj_CallMediaInfo_Sg____getslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setslice____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  std::vector< pj::CallMediaInfo >::difference_type arg3 ;
  std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CallMediaInfoVector___setslice__",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CallMediaInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val3);
  {
    std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *ptr = (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *)0;
    res4 = swig::asptr(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CallMediaInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector___setslice__" "', argument " "4"" of type '" "std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &""'"); 
    }
    arg4 = ptr;
  }
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____setslice____SWIG_0(arg1,arg2,arg3,(std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &)*arg4);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setslice____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  std::vector< pj::CallMediaInfo >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector___setslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___setslice__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___setslice__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CallMediaInfoVector___setslice__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val3);
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____setslice____SWIG_0(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setslice__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_CallMediaInfoVector___setslice____SWIG_1(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_ptrdiff_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = swig::asptr(argv[3], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CallMediaInfoVector___setslice____SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector___setslice__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::__setslice__(std::vector< pj::CallMediaInfo >::difference_type,std::vector< pj::CallMediaInfo >::difference_type,std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &)\n"
    "    std::vector< pj::CallMediaInfo >::__setslice__(std::vector< pj::CallMediaInfo >::difference_type,std::vector< pj::CallMediaInfo >::difference_type)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___delslice__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  std::vector< pj::CallMediaInfo >::difference_type arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  ptrdiff_t val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector___delslice__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___delslice__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___delslice__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  ecode3 = SWIG_AsVal_ptrdiff_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CallMediaInfoVector___delslice__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val3);
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____delslice__(arg1,arg2,arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___delitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___delitem__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____delitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___getitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector___getitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    result = (std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *)std_vector_Sl_pj_CallMediaInfo_Sg____getitem____SWIG_0(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setitem____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  {
    std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *ptr = (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *)0;
    res3 = swig::asptr(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CallMediaInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &""'"); 
    }
    arg3 = ptr;
  }
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____setitem____SWIG_0(arg1,arg2,(std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector___setitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector___setitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____setitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___delitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  PySliceObject *arg2 = (PySliceObject *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector___delitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___delitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  {
    if (!PySlice_Check(obj1)) {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector___delitem__" "', argument " "2"" of type '" "PySliceObject *""'");
    }
    arg2 = (PySliceObject *) obj1;
  }
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____delitem____SWIG_1(arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  catch(std::invalid_argument &_e) {
    SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___delitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_CallMediaInfoVector___delitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CallMediaInfoVector___delitem____SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector___delitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::__delitem__(std::vector< pj::CallMediaInfo >::difference_type)\n"
    "    std::vector< pj::CallMediaInfo >::__delitem__(PySliceObject *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___getitem____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CallMediaInfo >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector___getitem__",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___getitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___getitem__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  try {
    result = (std::vector< pj::CallMediaInfo >::value_type *) &std_vector_Sl_pj_CallMediaInfo_Sg____getitem____SWIG_1((std::vector< pj::CallMediaInfo > const *)arg1,arg2);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___getitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_CallMediaInfoVector___getitem____SWIG_0(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CallMediaInfoVector___getitem____SWIG_1(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector___getitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::__getitem__(PySliceObject *)\n"
    "    std::vector< pj::CallMediaInfo >::__getitem__(std::vector< pj::CallMediaInfo >::difference_type) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setitem____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::difference_type arg2 ;
  std::vector< pj::CallMediaInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector___setitem__",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector___setitem__" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector___setitem__" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::difference_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::difference_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CallMediaInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector___setitem__" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp3);
  try {
    std_vector_Sl_pj_CallMediaInfo_Sg____setitem____SWIG_2(arg1,arg2,(pj::CallMediaInfo const &)*arg3);
  }
  catch(std::out_of_range &_e) {
    SWIG_exception_fail(SWIG_IndexError, (&_e)->what());
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector___setitem__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        return _wrap_CallMediaInfoVector___setitem____SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        _v = PySlice_Check(argv[1]);
      }
      if (_v) {
        int res = swig::asptr(argv[2], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CallMediaInfoVector___setitem____SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__CallMediaInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CallMediaInfoVector___setitem____SWIG_2(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector___setitem__'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::__setitem__(PySliceObject *,std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > const &)\n"
    "    std::vector< pj::CallMediaInfo >::__setitem__(PySliceObject *)\n"
    "    std::vector< pj::CallMediaInfo >::__setitem__(std::vector< pj::CallMediaInfo >::difference_type,std::vector< pj::CallMediaInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_append(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector_append",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_append" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallMediaInfoVector_append" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_append" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp2);
  std_vector_Sl_pj_CallMediaInfo_Sg__append(arg1,(pj::CallMediaInfo const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallMediaInfoVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_CallMediaInfoVector")) SWIG_fail;
  result = (std::vector< pj::CallMediaInfo > *)new std::vector< pj::CallMediaInfo >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallMediaInfoVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CallMediaInfoVector",&obj0)) SWIG_fail;
  {
    std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *ptr = (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_CallMediaInfoVector" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CallMediaInfoVector" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const &""'"); 
    }
    arg1 = ptr;
  }
  result = (std::vector< pj::CallMediaInfo > *)new std::vector< pj::CallMediaInfo >((std::vector< pj::CallMediaInfo > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_empty(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_empty",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_empty" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (bool)((std::vector< pj::CallMediaInfo > const *)arg1)->empty();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_size(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_size",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_size" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = ((std::vector< pj::CallMediaInfo > const *)arg1)->size();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_clear",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_clear" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  (arg1)->clear();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_swap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector_swap",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_swap" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallMediaInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo > &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_swap" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo > &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp2);
  (arg1)->swap(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_get_allocator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  SwigValueWrapper< std::allocator< pj::CallMediaInfo > > result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_get_allocator",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_get_allocator" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = ((std::vector< pj::CallMediaInfo > const *)arg1)->get_allocator();
  resultobj = SWIG_NewPointerObj((new std::vector< pj::CallMediaInfo >::allocator_type(static_cast< const std::vector< pj::CallMediaInfo >::allocator_type& >(result))), SWIGTYPE_p_std__allocatorT_pj__CallMediaInfo_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_begin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_begin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_begin" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (arg1)->begin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_end(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_end",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_end" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (arg1)->end();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_rbegin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_rbegin",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_rbegin" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (arg1)->rbegin();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_rend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::reverse_iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_rend",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_rend" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (arg1)->rend();
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::reverse_iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallMediaInfoVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo >::size_type arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_CallMediaInfoVector",&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CallMediaInfoVector" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val1);
  result = (std::vector< pj::CallMediaInfo > *)new std::vector< pj::CallMediaInfo >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_pop_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_pop_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_pop_back" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  (arg1)->pop_back();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector_resize",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val2);
  (arg1)->resize(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_erase__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::iterator arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CallMediaInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector_erase",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_CallMediaInfo_Sg__erase__SWIG_0(arg1,arg2);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_erase__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::iterator arg2 ;
  std::vector< pj::CallMediaInfo >::iterator arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  swig::SwigPyIterator *iter3 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::CallMediaInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector_erase",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_erase" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_erase" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, SWIG_as_voidptrptr(&iter3), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res3) || !iter3) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter3);
    if (iter_t) {
      arg3 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_erase" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
    }
  }
  result = std_vector_Sl_pj_CallMediaInfo_Sg__erase__SWIG_1(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_erase(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter) != 0));
      if (_v) {
        return _wrap_CallMediaInfoVector_erase__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter) != 0));
      if (_v) {
        swig::SwigPyIterator *iter = 0;
        int res = SWIG_ConvertPtr(argv[2], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
        _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter) != 0));
        if (_v) {
          return _wrap_CallMediaInfoVector_erase__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector_erase'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::erase(std::vector< pj::CallMediaInfo >::iterator)\n"
    "    std::vector< pj::CallMediaInfo >::erase(std::vector< pj::CallMediaInfo >::iterator,std::vector< pj::CallMediaInfo >::iterator)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_new_CallMediaInfoVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo >::size_type arg1 ;
  std::vector< pj::CallMediaInfo >::value_type *arg2 = 0 ;
  size_t val1 ;
  int ecode1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  std::vector< pj::CallMediaInfo > *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:new_CallMediaInfoVector",&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_CallMediaInfoVector" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg1 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_CallMediaInfoVector" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_CallMediaInfoVector" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp2);
  result = (std::vector< pj::CallMediaInfo > *)new std::vector< pj::CallMediaInfo >(arg1,(std::vector< pj::CallMediaInfo >::value_type const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_CallMediaInfoVector(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_CallMediaInfoVector__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_CallMediaInfoVector__SWIG_2(self, args);
    }
  }
  if (argc == 1) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_CallMediaInfoVector__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_size_t(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_pj__CallMediaInfo, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_CallMediaInfoVector__SWIG_3(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_CallMediaInfoVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::vector()\n"
    "    std::vector< pj::CallMediaInfo >::vector(std::vector< pj::CallMediaInfo > const &)\n"
    "    std::vector< pj::CallMediaInfo >::vector(std::vector< pj::CallMediaInfo >::size_type)\n"
    "    std::vector< pj::CallMediaInfo >::vector(std::vector< pj::CallMediaInfo >::size_type,std::vector< pj::CallMediaInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_push_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::value_type *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector_push_back",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_push_back" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "CallMediaInfoVector_push_back" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_push_back" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg2 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp2);
  (arg1)->push_back((std::vector< pj::CallMediaInfo >::value_type const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_front(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_front",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_front" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (std::vector< pj::CallMediaInfo >::value_type *) &((std::vector< pj::CallMediaInfo > const *)arg1)->front();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_back(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::value_type *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_back",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_back" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = (std::vector< pj::CallMediaInfo >::value_type *) &((std::vector< pj::CallMediaInfo > const *)arg1)->back();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__CallMediaInfo, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_assign(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::size_type arg2 ;
  std::vector< pj::CallMediaInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector_assign",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_assign" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector_assign" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CallMediaInfoVector_assign" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_assign" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp3);
  (arg1)->assign(arg2,(std::vector< pj::CallMediaInfo >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::size_type arg2 ;
  std::vector< pj::CallMediaInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector_resize",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_resize" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector_resize" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CallMediaInfoVector_resize" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_resize" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp3);
  (arg1)->resize(arg2,(std::vector< pj::CallMediaInfo >::value_type const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_resize(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_CallMediaInfoVector_resize__SWIG_0(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_size_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__CallMediaInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CallMediaInfoVector_resize__SWIG_1(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector_resize'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::resize(std::vector< pj::CallMediaInfo >::size_type)\n"
    "    std::vector< pj::CallMediaInfo >::resize(std::vector< pj::CallMediaInfo >::size_type,std::vector< pj::CallMediaInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_insert__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::iterator arg2 ;
  std::vector< pj::CallMediaInfo >::value_type *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  std::vector< pj::CallMediaInfo >::iterator result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:CallMediaInfoVector_insert",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
    }
  }
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "CallMediaInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg3 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp3);
  result = std_vector_Sl_pj_CallMediaInfo_Sg__insert__SWIG_0(arg1,arg2,(pj::CallMediaInfo const &)*arg3);
  resultobj = SWIG_NewPointerObj(swig::make_output_iterator(static_cast< const std::vector< pj::CallMediaInfo >::iterator & >(result)),
    swig::SwigPyIterator::descriptor(),SWIG_POINTER_OWN);
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_insert__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::iterator arg2 ;
  std::vector< pj::CallMediaInfo >::size_type arg3 ;
  std::vector< pj::CallMediaInfo >::value_type *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  swig::SwigPyIterator *iter2 = 0 ;
  int res2 ;
  size_t val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:CallMediaInfoVector_insert",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_insert" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, SWIG_as_voidptrptr(&iter2), swig::SwigPyIterator::descriptor(), 0);
  if (!SWIG_IsOK(res2) || !iter2) {
    SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
  } else {
    swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *iter_t = dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter2);
    if (iter_t) {
      arg2 = iter_t->get_current();
    } else {
      SWIG_exception_fail(SWIG_ArgError(SWIG_TypeError), "in method '" "CallMediaInfoVector_insert" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::iterator""'");
    }
  }
  ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "CallMediaInfoVector_insert" "', argument " "3"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg3 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_pj__CallMediaInfo,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "CallMediaInfoVector_insert" "', argument " "4"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "CallMediaInfoVector_insert" "', argument " "4"" of type '" "std::vector< pj::CallMediaInfo >::value_type const &""'"); 
  }
  arg4 = reinterpret_cast< std::vector< pj::CallMediaInfo >::value_type * >(argp4);
  std_vector_Sl_pj_CallMediaInfo_Sg__insert__SWIG_1(arg1,arg2,arg3,(pj::CallMediaInfo const &)*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_insert(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 3) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter) != 0));
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_pj__CallMediaInfo, 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_CallMediaInfoVector_insert__SWIG_0(self, args);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = swig::asptr(argv[0], (std::vector<pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > >**)(0));
    _v = SWIG_CheckState(res);
    if (_v) {
      swig::SwigPyIterator *iter = 0;
      int res = SWIG_ConvertPtr(argv[1], SWIG_as_voidptrptr(&iter), swig::SwigPyIterator::descriptor(), 0);
      _v = (SWIG_IsOK(res) && iter && (dynamic_cast<swig::SwigPyIterator_T<std::vector< pj::CallMediaInfo >::iterator > *>(iter) != 0));
      if (_v) {
        {
          int res = SWIG_AsVal_size_t(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_pj__CallMediaInfo, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_CallMediaInfoVector_insert__SWIG_1(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'CallMediaInfoVector_insert'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    std::vector< pj::CallMediaInfo >::insert(std::vector< pj::CallMediaInfo >::iterator,std::vector< pj::CallMediaInfo >::value_type const &)\n"
    "    std::vector< pj::CallMediaInfo >::insert(std::vector< pj::CallMediaInfo >::iterator,std::vector< pj::CallMediaInfo >::size_type,std::vector< pj::CallMediaInfo >::value_type const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_reserve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  std::vector< pj::CallMediaInfo >::size_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:CallMediaInfoVector_reserve",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_reserve" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "CallMediaInfoVector_reserve" "', argument " "2"" of type '" "std::vector< pj::CallMediaInfo >::size_type""'");
  } 
  arg2 = static_cast< std::vector< pj::CallMediaInfo >::size_type >(val2);
  (arg1)->reserve(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_CallMediaInfoVector_capacity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< pj::CallMediaInfo >::size_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:CallMediaInfoVector_capacity",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "CallMediaInfoVector_capacity" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > const *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  result = ((std::vector< pj::CallMediaInfo > const *)arg1)->capacity();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_CallMediaInfoVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  std::vector< pj::CallMediaInfo > *arg1 = (std::vector< pj::CallMediaInfo > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_CallMediaInfoVector",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_CallMediaInfoVector" "', argument " "1"" of type '" "std::vector< pj::CallMediaInfo > *""'"); 
  }
  arg1 = reinterpret_cast< std::vector< pj::CallMediaInfo > * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *CallMediaInfoVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_JsonDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_JsonDocument")) SWIG_fail;
  result = (pj::JsonDocument *)new pj::JsonDocument();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__JsonDocument, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_JsonDocument(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *arg1 = (pj::JsonDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_JsonDocument",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JsonDocument, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_JsonDocument" "', argument " "1"" of type '" "pj::JsonDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::JsonDocument * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JsonDocument_loadFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *arg1 = (pj::JsonDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JsonDocument_loadFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JsonDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JsonDocument_loadFile" "', argument " "1"" of type '" "pj::JsonDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::JsonDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JsonDocument_loadFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JsonDocument_loadFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->loadFile((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JsonDocument_loadString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *arg1 = (pj::JsonDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JsonDocument_loadString",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JsonDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JsonDocument_loadString" "', argument " "1"" of type '" "pj::JsonDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::JsonDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JsonDocument_loadString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JsonDocument_loadString" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->loadString((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JsonDocument_saveFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *arg1 = (pj::JsonDocument *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:JsonDocument_saveFile",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JsonDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JsonDocument_saveFile" "', argument " "1"" of type '" "pj::JsonDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::JsonDocument * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "JsonDocument_saveFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "JsonDocument_saveFile" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->saveFile((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_JsonDocument_saveString(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *arg1 = (pj::JsonDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JsonDocument_saveString",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JsonDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JsonDocument_saveString" "', argument " "1"" of type '" "pj::JsonDocument *""'"); 
  }
  arg1 = reinterpret_cast< pj::JsonDocument * >(argp1);
  try {
    result = (arg1)->saveString();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_JsonDocument_getRootContainer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::JsonDocument *arg1 = (pj::JsonDocument *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::ContainerNode *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:JsonDocument_getRootContainer",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__JsonDocument, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "JsonDocument_getRootContainer" "', argument " "1"" of type '" "pj::JsonDocument const *""'"); 
  }
  arg1 = reinterpret_cast< pj::JsonDocument * >(argp1);
  result = (pj::ContainerNode *) &((pj::JsonDocument const *)arg1)->getRootContainer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__ContainerNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *JsonDocument_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__JsonDocument, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatDetectionCompleteParam_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_status_set" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnNatDetectionCompleteParam_status_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatDetectionCompleteParam_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_status_get" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  result = (pj_status_t) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_reason_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatDetectionCompleteParam_reason_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_reason_set" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnNatDetectionCompleteParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnNatDetectionCompleteParam_reason_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->reason = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_reason_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatDetectionCompleteParam_reason_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_reason_get" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  result = (pj::string *) & ((arg1)->reason);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_natType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  pj_stun_nat_type arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatDetectionCompleteParam_natType_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_natType_set" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnNatDetectionCompleteParam_natType_set" "', argument " "2"" of type '" "pj_stun_nat_type""'");
  } 
  arg2 = static_cast< pj_stun_nat_type >(val2);
  if (arg1) (arg1)->natType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_natType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_stun_nat_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatDetectionCompleteParam_natType_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_natType_get" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  result = (pj_stun_nat_type) ((arg1)->natType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_natTypeName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatDetectionCompleteParam_natTypeName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_natTypeName_set" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnNatDetectionCompleteParam_natTypeName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnNatDetectionCompleteParam_natTypeName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->natTypeName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatDetectionCompleteParam_natTypeName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatDetectionCompleteParam_natTypeName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatDetectionCompleteParam_natTypeName_get" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  result = (pj::string *) & ((arg1)->natTypeName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnNatDetectionCompleteParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnNatDetectionCompleteParam")) SWIG_fail;
  result = (pj::OnNatDetectionCompleteParam *)new pj::OnNatDetectionCompleteParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnNatDetectionCompleteParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnNatDetectionCompleteParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatDetectionCompleteParam *arg1 = (pj::OnNatDetectionCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnNatDetectionCompleteParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatDetectionCompleteParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnNatDetectionCompleteParam" "', argument " "1"" of type '" "pj::OnNatDetectionCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnNatDetectionCompleteParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnNatDetectionCompleteParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_userData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatCheckStunServersCompleteParam_userData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_userData_set" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnNatCheckStunServersCompleteParam_userData_set" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  if (arg1) (arg1)->userData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_userData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::Token result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatCheckStunServersCompleteParam_userData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_userData_get" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  result = (pj::Token) ((arg1)->userData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_status_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatCheckStunServersCompleteParam_status_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_status_set" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnNatCheckStunServersCompleteParam_status_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->status = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_status_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatCheckStunServersCompleteParam_status_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_status_get" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  result = (pj_status_t) ((arg1)->status);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_name_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatCheckStunServersCompleteParam_name_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_name_set" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnNatCheckStunServersCompleteParam_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnNatCheckStunServersCompleteParam_name_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->name = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_name_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatCheckStunServersCompleteParam_name_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_name_get" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  result = (pj::string *) & ((arg1)->name);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_addr_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  pj::SocketAddress *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnNatCheckStunServersCompleteParam_addr_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_addr_set" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnNatCheckStunServersCompleteParam_addr_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "OnNatCheckStunServersCompleteParam_addr_set" "', argument " "2"" of type '" "pj::SocketAddress const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->addr = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnNatCheckStunServersCompleteParam_addr_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SocketAddress *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnNatCheckStunServersCompleteParam_addr_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnNatCheckStunServersCompleteParam_addr_get" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  result = (pj::SocketAddress *) & ((arg1)->addr);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnNatCheckStunServersCompleteParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnNatCheckStunServersCompleteParam")) SWIG_fail;
  result = (pj::OnNatCheckStunServersCompleteParam *)new pj::OnNatCheckStunServersCompleteParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnNatCheckStunServersCompleteParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnNatCheckStunServersCompleteParam *arg1 = (pj::OnNatCheckStunServersCompleteParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnNatCheckStunServersCompleteParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnNatCheckStunServersCompleteParam" "', argument " "1"" of type '" "pj::OnNatCheckStunServersCompleteParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnNatCheckStunServersCompleteParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnTimerParam_userData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTimerParam *arg1 = (pj::OnTimerParam *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTimerParam_userData_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTimerParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTimerParam_userData_set" "', argument " "1"" of type '" "pj::OnTimerParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTimerParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnTimerParam_userData_set" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  if (arg1) (arg1)->userData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTimerParam_userData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTimerParam *arg1 = (pj::OnTimerParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::Token result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTimerParam_userData_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTimerParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTimerParam_userData_get" "', argument " "1"" of type '" "pj::OnTimerParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTimerParam * >(argp1);
  result = (pj::Token) ((arg1)->userData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTimerParam_msecDelay_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTimerParam *arg1 = (pj::OnTimerParam *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTimerParam_msecDelay_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTimerParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTimerParam_msecDelay_set" "', argument " "1"" of type '" "pj::OnTimerParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTimerParam * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnTimerParam_msecDelay_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->msecDelay = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTimerParam_msecDelay_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTimerParam *arg1 = (pj::OnTimerParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTimerParam_msecDelay_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTimerParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTimerParam_msecDelay_get" "', argument " "1"" of type '" "pj::OnTimerParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTimerParam * >(argp1);
  result = (unsigned int) ((arg1)->msecDelay);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnTimerParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTimerParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnTimerParam")) SWIG_fail;
  result = (pj::OnTimerParam *)new pj::OnTimerParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnTimerParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnTimerParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTimerParam *arg1 = (pj::OnTimerParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnTimerParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTimerParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnTimerParam" "', argument " "1"" of type '" "pj::OnTimerParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTimerParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnTimerParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnTimerParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnTransportStateParam_hnd_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  pj::TransportHandle arg2 = (pj::TransportHandle) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTransportStateParam_hnd_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTransportStateParam_hnd_set" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnTransportStateParam_hnd_set" "', argument " "2"" of type '" "pj::TransportHandle""'"); 
  }
  if (arg1) (arg1)->hnd = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTransportStateParam_hnd_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::TransportHandle result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTransportStateParam_hnd_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTransportStateParam_hnd_get" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  result = (pj::TransportHandle) ((arg1)->hnd);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTransportStateParam_state_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  pjsip_transport_state arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTransportStateParam_state_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTransportStateParam_state_set" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnTransportStateParam_state_set" "', argument " "2"" of type '" "pjsip_transport_state""'");
  } 
  arg2 = static_cast< pjsip_transport_state >(val2);
  if (arg1) (arg1)->state = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTransportStateParam_state_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsip_transport_state result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTransportStateParam_state_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTransportStateParam_state_get" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  result = (pjsip_transport_state) ((arg1)->state);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTransportStateParam_lastError_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnTransportStateParam_lastError_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTransportStateParam_lastError_set" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnTransportStateParam_lastError_set" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  if (arg1) (arg1)->lastError = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnTransportStateParam_lastError_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnTransportStateParam_lastError_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnTransportStateParam_lastError_get" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  result = (pj_status_t) ((arg1)->lastError);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnTransportStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnTransportStateParam")) SWIG_fail;
  result = (pj::OnTransportStateParam *)new pj::OnTransportStateParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnTransportStateParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnTransportStateParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnTransportStateParam *arg1 = (pj::OnTransportStateParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnTransportStateParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnTransportStateParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnTransportStateParam" "', argument " "1"" of type '" "pj::OnTransportStateParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnTransportStateParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnTransportStateParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnTransportStateParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_OnSelectAccountParam_rdata_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnSelectAccountParam *arg1 = (pj::OnSelectAccountParam *) 0 ;
  pj::SipRxData *arg2 = (pj::SipRxData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnSelectAccountParam_rdata_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnSelectAccountParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnSelectAccountParam_rdata_set" "', argument " "1"" of type '" "pj::OnSelectAccountParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnSelectAccountParam * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "OnSelectAccountParam_rdata_set" "', argument " "2"" of type '" "pj::SipRxData *""'"); 
  }
  arg2 = reinterpret_cast< pj::SipRxData * >(argp2);
  if (arg1) (arg1)->rdata = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnSelectAccountParam_rdata_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnSelectAccountParam *arg1 = (pj::OnSelectAccountParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::SipRxData *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnSelectAccountParam_rdata_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnSelectAccountParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnSelectAccountParam_rdata_get" "', argument " "1"" of type '" "pj::OnSelectAccountParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnSelectAccountParam * >(argp1);
  result = (pj::SipRxData *)& ((arg1)->rdata);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__SipRxData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnSelectAccountParam_accountIndex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnSelectAccountParam *arg1 = (pj::OnSelectAccountParam *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:OnSelectAccountParam_accountIndex_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnSelectAccountParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnSelectAccountParam_accountIndex_set" "', argument " "1"" of type '" "pj::OnSelectAccountParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnSelectAccountParam * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "OnSelectAccountParam_accountIndex_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->accountIndex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_OnSelectAccountParam_accountIndex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnSelectAccountParam *arg1 = (pj::OnSelectAccountParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:OnSelectAccountParam_accountIndex_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnSelectAccountParam, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "OnSelectAccountParam_accountIndex_get" "', argument " "1"" of type '" "pj::OnSelectAccountParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnSelectAccountParam * >(argp1);
  result = (int) ((arg1)->accountIndex);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_OnSelectAccountParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnSelectAccountParam *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_OnSelectAccountParam")) SWIG_fail;
  result = (pj::OnSelectAccountParam *)new pj::OnSelectAccountParam();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__OnSelectAccountParam, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_OnSelectAccountParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::OnSelectAccountParam *arg1 = (pj::OnSelectAccountParam *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_OnSelectAccountParam",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__OnSelectAccountParam, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_OnSelectAccountParam" "', argument " "1"" of type '" "pj::OnSelectAccountParam *""'"); 
  }
  arg1 = reinterpret_cast< pj::OnSelectAccountParam * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *OnSelectAccountParam_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__OnSelectAccountParam, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_UaConfig_maxCalls_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_maxCalls_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_maxCalls_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UaConfig_maxCalls_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->maxCalls = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_maxCalls_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_maxCalls_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_maxCalls_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (unsigned int) ((arg1)->maxCalls);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_threadCnt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_threadCnt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_threadCnt_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UaConfig_threadCnt_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->threadCnt = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_threadCnt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_threadCnt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_threadCnt_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (unsigned int) ((arg1)->threadCnt);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_mainThreadOnly_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_mainThreadOnly_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_mainThreadOnly_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UaConfig_mainThreadOnly_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mainThreadOnly = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_mainThreadOnly_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_mainThreadOnly_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_mainThreadOnly_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (bool) ((arg1)->mainThreadOnly);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_nameserver_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  pj::StringVector *arg2 = (pj::StringVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_nameserver_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_nameserver_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UaConfig_nameserver_set" "', argument " "2"" of type '" "pj::StringVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::StringVector * >(argp2);
  if (arg1) (arg1)->nameserver = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_nameserver_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::StringVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_nameserver_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_nameserver_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (pj::StringVector *)& ((arg1)->nameserver);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_userAgent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_userAgent_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_userAgent_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UaConfig_userAgent_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UaConfig_userAgent_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->userAgent = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_userAgent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_userAgent_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_userAgent_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (pj::string *) & ((arg1)->userAgent);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_stunServer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  pj::StringVector *arg2 = (pj::StringVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_stunServer_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_stunServer_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UaConfig_stunServer_set" "', argument " "2"" of type '" "pj::StringVector *""'"); 
  }
  arg2 = reinterpret_cast< pj::StringVector * >(argp2);
  if (arg1) (arg1)->stunServer = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_stunServer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::StringVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_stunServer_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_stunServer_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (pj::StringVector *)& ((arg1)->stunServer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_stunIgnoreFailure_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_stunIgnoreFailure_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_stunIgnoreFailure_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UaConfig_stunIgnoreFailure_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->stunIgnoreFailure = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_stunIgnoreFailure_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_stunIgnoreFailure_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_stunIgnoreFailure_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (bool) ((arg1)->stunIgnoreFailure);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_natTypeInSdp_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_natTypeInSdp_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_natTypeInSdp_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UaConfig_natTypeInSdp_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->natTypeInSdp = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_natTypeInSdp_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_natTypeInSdp_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_natTypeInSdp_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (int) ((arg1)->natTypeInSdp);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_mwiUnsolicitedEnabled_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_mwiUnsolicitedEnabled_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_mwiUnsolicitedEnabled_set" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UaConfig_mwiUnsolicitedEnabled_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->mwiUnsolicitedEnabled = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_mwiUnsolicitedEnabled_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:UaConfig_mwiUnsolicitedEnabled_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_mwiUnsolicitedEnabled_get" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  result = (bool) ((arg1)->mwiUnsolicitedEnabled);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_UaConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_UaConfig")) SWIG_fail;
  result = (pj::UaConfig *)new pj::UaConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__UaConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_readObject" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UaConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UaConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_UaConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:UaConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UaConfig_writeObject" "', argument " "1"" of type '" "pj::UaConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UaConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "UaConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::UaConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_UaConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::UaConfig *arg1 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_UaConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__UaConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_UaConfig" "', argument " "1"" of type '" "pj::UaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::UaConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *UaConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__UaConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LogEntry_level_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogEntry_level_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_level_set" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogEntry_level_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->level = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_level_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogEntry_level_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_level_get" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  result = (int) ((arg1)->level);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_msg_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogEntry_msg_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_msg_set" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogEntry_msg_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogEntry_msg_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->msg = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_msg_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogEntry_msg_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_msg_get" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  result = (pj::string *) & ((arg1)->msg);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_threadId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogEntry_threadId_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_threadId_set" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogEntry_threadId_set" "', argument " "2"" of type '" "long""'");
  } 
  arg2 = static_cast< long >(val2);
  if (arg1) (arg1)->threadId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_threadId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogEntry_threadId_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_threadId_get" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  result = (long) ((arg1)->threadId);
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_threadName_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogEntry_threadName_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_threadName_set" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogEntry_threadName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogEntry_threadName_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->threadName = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogEntry_threadName_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogEntry_threadName_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogEntry_threadName_get" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  result = (pj::string *) & ((arg1)->threadName);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LogEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LogEntry")) SWIG_fail;
  result = (pj::LogEntry *)new pj::LogEntry();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__LogEntry, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LogEntry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogEntry *arg1 = (pj::LogEntry *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LogEntry",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogEntry, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LogEntry" "', argument " "1"" of type '" "pj::LogEntry *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogEntry * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LogEntry_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__LogEntry, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_LogWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogWriter *arg1 = (pj::LogWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LogWriter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogWriter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LogWriter" "', argument " "1"" of type '" "pj::LogWriter *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogWriter * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogWriter_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogWriter *arg1 = (pj::LogWriter *) 0 ;
  pj::LogEntry *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogWriter_write",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogWriter_write" "', argument " "1"" of type '" "pj::LogWriter *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__LogEntry,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogWriter_write" "', argument " "2"" of type '" "pj::LogEntry const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogWriter_write" "', argument " "2"" of type '" "pj::LogEntry const &""'"); 
  }
  arg2 = reinterpret_cast< pj::LogEntry * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      Swig::DirectorPureVirtualException::raise("pj::LogWriter::write");
    } else {
      (arg1)->write((pj::LogEntry const &)*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LogWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  pj::LogWriter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_LogWriter",&obj0)) SWIG_fail;
  arg1 = obj0;
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::LogWriter *)new SwigDirector_LogWriter(arg1); 
  } else {
    SWIG_SetErrorMsg(PyExc_RuntimeError,"accessing abstract class or protected constructor"); 
    SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__LogWriter, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_LogWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogWriter *arg1 = (pj::LogWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_LogWriter",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogWriter, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_LogWriter" "', argument " "1"" of type '" "pj::LogWriter *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogWriter * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LogWriter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__LogWriter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_LogConfig_msgLogging_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_msgLogging_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_msgLogging_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogConfig_msgLogging_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->msgLogging = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_msgLogging_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_msgLogging_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_msgLogging_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (unsigned int) ((arg1)->msgLogging);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_level_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_level_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_level_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogConfig_level_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->level = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_level_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_level_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_level_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (unsigned int) ((arg1)->level);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_consoleLevel_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_consoleLevel_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_consoleLevel_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogConfig_consoleLevel_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->consoleLevel = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_consoleLevel_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_consoleLevel_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_consoleLevel_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (unsigned int) ((arg1)->consoleLevel);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_decor_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_decor_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_decor_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogConfig_decor_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->decor = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_decor_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_decor_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_decor_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (unsigned int) ((arg1)->decor);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_filename_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_filename_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_filename_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogConfig_filename_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogConfig_filename_set" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->filename = *arg2;
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_filename_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::string *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_filename_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_filename_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (pj::string *) & ((arg1)->filename);
  resultobj = SWIG_From_std_string(static_cast< std::string >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_fileFlags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_fileFlags_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_fileFlags_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "LogConfig_fileFlags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->fileFlags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_fileFlags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_fileFlags_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_fileFlags_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (unsigned int) ((arg1)->fileFlags);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_writer_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  pj::LogWriter *arg2 = (pj::LogWriter *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_writer_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_writer_set" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__LogWriter, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogConfig_writer_set" "', argument " "2"" of type '" "pj::LogWriter *""'"); 
  }
  arg2 = reinterpret_cast< pj::LogWriter * >(argp2);
  if (arg1) (arg1)->writer = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_writer_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::LogWriter *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:LogConfig_writer_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_writer_get" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  result = (pj::LogWriter *) ((arg1)->writer);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__LogWriter, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_LogConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_LogConfig")) SWIG_fail;
  result = (pj::LogConfig *)new pj::LogConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__LogConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_readObject" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_LogConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:LogConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LogConfig_writeObject" "', argument " "1"" of type '" "pj::LogConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LogConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LogConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::LogConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_LogConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::LogConfig *arg1 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_LogConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__LogConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_LogConfig" "', argument " "1"" of type '" "pj::LogConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::LogConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *LogConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__LogConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_MediaConfig_clockRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_clockRate_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_clockRate_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_clockRate_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->clockRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_clockRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_clockRate_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_clockRate_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->clockRate);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndClockRate_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_sndClockRate_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndClockRate_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_sndClockRate_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->sndClockRate = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndClockRate_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_sndClockRate_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndClockRate_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->sndClockRate);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_channelCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_channelCount_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_channelCount_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_channelCount_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->channelCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_channelCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_channelCount_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_channelCount_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->channelCount);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_audioFramePtime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_audioFramePtime_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_audioFramePtime_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_audioFramePtime_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->audioFramePtime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_audioFramePtime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_audioFramePtime_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_audioFramePtime_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->audioFramePtime);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_maxMediaPorts_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_maxMediaPorts_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_maxMediaPorts_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_maxMediaPorts_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->maxMediaPorts = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_maxMediaPorts_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_maxMediaPorts_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_maxMediaPorts_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->maxMediaPorts);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_hasIoqueue_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_hasIoqueue_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_hasIoqueue_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_hasIoqueue_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->hasIoqueue = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_hasIoqueue_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_hasIoqueue_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_hasIoqueue_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (bool) ((arg1)->hasIoqueue);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_threadCnt_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_threadCnt_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_threadCnt_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_threadCnt_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->threadCnt = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_threadCnt_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_threadCnt_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_threadCnt_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->threadCnt);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_quality_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_quality_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_quality_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_quality_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->quality = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_quality_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_quality_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_quality_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->quality);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ptime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_ptime_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ptime_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_ptime_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->ptime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ptime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_ptime_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ptime_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->ptime);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_noVad_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_noVad_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_noVad_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_noVad_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->noVad = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_noVad_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_noVad_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_noVad_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (bool) ((arg1)->noVad);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ilbcMode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_ilbcMode_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ilbcMode_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_ilbcMode_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->ilbcMode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ilbcMode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_ilbcMode_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ilbcMode_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->ilbcMode);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_txDropPct_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_txDropPct_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_txDropPct_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_txDropPct_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->txDropPct = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_txDropPct_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_txDropPct_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_txDropPct_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->txDropPct);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_rxDropPct_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_rxDropPct_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_rxDropPct_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_rxDropPct_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->rxDropPct = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_rxDropPct_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_rxDropPct_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_rxDropPct_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->rxDropPct);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ecOptions_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_ecOptions_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ecOptions_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_ecOptions_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->ecOptions = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ecOptions_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_ecOptions_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ecOptions_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->ecOptions);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ecTailLen_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_ecTailLen_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ecTailLen_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_ecTailLen_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->ecTailLen = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_ecTailLen_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_ecTailLen_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_ecTailLen_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->ecTailLen);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndRecLatency_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_sndRecLatency_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndRecLatency_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_sndRecLatency_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->sndRecLatency = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndRecLatency_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_sndRecLatency_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndRecLatency_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->sndRecLatency);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndPlayLatency_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_sndPlayLatency_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndPlayLatency_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_sndPlayLatency_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->sndPlayLatency = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndPlayLatency_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_sndPlayLatency_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndPlayLatency_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (unsigned int) ((arg1)->sndPlayLatency);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbInit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_jbInit_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbInit_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_jbInit_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->jbInit = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbInit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_jbInit_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbInit_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (int) ((arg1)->jbInit);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbMinPre_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_jbMinPre_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbMinPre_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_jbMinPre_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->jbMinPre = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbMinPre_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_jbMinPre_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbMinPre_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (int) ((arg1)->jbMinPre);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbMaxPre_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_jbMaxPre_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbMaxPre_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_jbMaxPre_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->jbMaxPre = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbMaxPre_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_jbMaxPre_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbMaxPre_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (int) ((arg1)->jbMaxPre);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbMax_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_jbMax_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbMax_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_jbMax_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->jbMax = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_jbMax_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_jbMax_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_jbMax_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (int) ((arg1)->jbMax);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndAutoCloseTime_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_sndAutoCloseTime_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndAutoCloseTime_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_sndAutoCloseTime_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->sndAutoCloseTime = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_sndAutoCloseTime_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_sndAutoCloseTime_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_sndAutoCloseTime_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (int) ((arg1)->sndAutoCloseTime);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_vidPreviewEnableNative_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_vidPreviewEnableNative_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_vidPreviewEnableNative_set" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "MediaConfig_vidPreviewEnableNative_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->vidPreviewEnableNative = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_vidPreviewEnableNative_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:MediaConfig_vidPreviewEnableNative_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_vidPreviewEnableNative_get" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  result = (bool) ((arg1)->vidPreviewEnableNative);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_MediaConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_MediaConfig")) SWIG_fail;
  result = (pj::MediaConfig *)new pj::MediaConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_readObject" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_MediaConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:MediaConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "MediaConfig_writeObject" "', argument " "1"" of type '" "pj::MediaConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "MediaConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "MediaConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::MediaConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_MediaConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::MediaConfig *arg1 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_MediaConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__MediaConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_MediaConfig" "', argument " "1"" of type '" "pj::MediaConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::MediaConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *MediaConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__MediaConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_EpConfig_uaConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  pj::UaConfig *arg2 = (pj::UaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EpConfig_uaConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_uaConfig_set" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EpConfig_uaConfig_set" "', argument " "2"" of type '" "pj::UaConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::UaConfig * >(argp2);
  if (arg1) (arg1)->uaConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_uaConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::UaConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EpConfig_uaConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_uaConfig_get" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  result = (pj::UaConfig *)& ((arg1)->uaConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__UaConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_logConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  pj::LogConfig *arg2 = (pj::LogConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EpConfig_logConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_logConfig_set" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EpConfig_logConfig_set" "', argument " "2"" of type '" "pj::LogConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::LogConfig * >(argp2);
  if (arg1) (arg1)->logConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_logConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::LogConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EpConfig_logConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_logConfig_get" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  result = (pj::LogConfig *)& ((arg1)->logConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__LogConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_medConfig_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  pj::MediaConfig *arg2 = (pj::MediaConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EpConfig_medConfig_set",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_medConfig_set" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EpConfig_medConfig_set" "', argument " "2"" of type '" "pj::MediaConfig *""'"); 
  }
  arg2 = reinterpret_cast< pj::MediaConfig * >(argp2);
  if (arg1) (arg1)->medConfig = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_medConfig_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::MediaConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:EpConfig_medConfig_get",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_medConfig_get" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  result = (pj::MediaConfig *)& ((arg1)->medConfig);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__MediaConfig, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_readObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EpConfig_readObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_readObject" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EpConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EpConfig_readObject" "', argument " "2"" of type '" "pj::ContainerNode const &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    (arg1)->readObject((pj::ContainerNode const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_EpConfig_writeObject(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  pj::ContainerNode *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:EpConfig_writeObject",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "EpConfig_writeObject" "', argument " "1"" of type '" "pj::EpConfig const *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__ContainerNode,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "EpConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "EpConfig_writeObject" "', argument " "2"" of type '" "pj::ContainerNode &""'"); 
  }
  arg2 = reinterpret_cast< pj::ContainerNode * >(argp2);
  try {
    ((pj::EpConfig const *)arg1)->writeObject(*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_EpConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":new_EpConfig")) SWIG_fail;
  result = (pj::EpConfig *)new pj::EpConfig();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__EpConfig, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_EpConfig(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::EpConfig *arg1 = (pj::EpConfig *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_EpConfig",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__EpConfig, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EpConfig" "', argument " "1"" of type '" "pj::EpConfig *""'"); 
  }
  arg1 = reinterpret_cast< pj::EpConfig * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *EpConfig_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__EpConfig, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_PendingJob_execute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PendingJob *arg1 = (pj::PendingJob *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:PendingJob_execute",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PendingJob, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "PendingJob_execute" "', argument " "1"" of type '" "pj::PendingJob *""'"); 
  }
  arg1 = reinterpret_cast< pj::PendingJob * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "PendingJob_execute" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->execute(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_PendingJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::PendingJob *arg1 = (pj::PendingJob *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_PendingJob",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__PendingJob, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_PendingJob" "', argument " "1"" of type '" "pj::PendingJob *""'"); 
  }
  arg1 = reinterpret_cast< pj::PendingJob * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *PendingJob_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__PendingJob, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Endpoint_instance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  Swig::Director *director = 0;
  pj::Endpoint *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)":Endpoint_instance")) SWIG_fail;
  try {
    result = (pj::Endpoint *) &pj::Endpoint::instance();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  director = SWIG_DIRECTOR_CAST(result);
  if (director) {
    resultobj = director->swig_get_self();
    Py_INCREF(resultobj);
  } else {
    resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  }
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_Endpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  PyObject *arg1 = (PyObject *) 0 ;
  PyObject * obj0 = 0 ;
  pj::Endpoint *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:new_Endpoint",&obj0)) SWIG_fail;
  arg1 = obj0;
  if ( arg1 != Py_None ) {
    /* subclassed */
    result = (pj::Endpoint *)new SwigDirector_Endpoint(arg1); 
  } else {
    result = (pj::Endpoint *)new pj::Endpoint(); 
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__Endpoint, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_Endpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:delete_Endpoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Endpoint" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libVersion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::Version result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libVersion",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libVersion" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  result = ((pj::Endpoint const *)arg1)->libVersion();
  resultobj = SWIG_NewPointerObj((new pj::Version(static_cast< const pj::Version& >(result))), SWIGTYPE_p_pj__Version, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libCreate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libCreate",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libCreate" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    (arg1)->libCreate();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libGetState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pjsua_state result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libGetState",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libGetState" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  result = (pjsua_state)((pj::Endpoint const *)arg1)->libGetState();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libInit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::EpConfig *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_libInit",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libInit" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__EpConfig,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_libInit" "', argument " "2"" of type '" "pj::EpConfig const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_libInit" "', argument " "2"" of type '" "pj::EpConfig const &""'"); 
  }
  arg2 = reinterpret_cast< pj::EpConfig * >(argp2);
  try {
    (arg1)->libInit((pj::EpConfig const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libStart(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libStart",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libStart" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    (arg1)->libStart();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libRegisterThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_libRegisterThread",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libRegisterThread" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_libRegisterThread" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_libRegisterThread" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    (arg1)->libRegisterThread((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libIsThreadRegistered(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libIsThreadRegistered",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libIsThreadRegistered" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  result = (bool)(arg1)->libIsThreadRegistered();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libStopWorkerThreads(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libStopWorkerThreads",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libStopWorkerThreads" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  (arg1)->libStopWorkerThreads();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libHandleEvents(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  int result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_libHandleEvents",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libHandleEvents" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_libHandleEvents" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  result = (int)(arg1)->libHandleEvents(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libDestroy__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_libDestroy",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libDestroy" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_libDestroy" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  try {
    (arg1)->libDestroy(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libDestroy__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_libDestroy",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_libDestroy" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    (arg1)->libDestroy();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_libDestroy(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Endpoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_Endpoint_libDestroy__SWIG_1(self, args);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Endpoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_Endpoint_libDestroy__SWIG_0(self, args);
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Endpoint_libDestroy'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Endpoint::libDestroy(unsigned int)\n"
    "    pj::Endpoint::libDestroy()\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilStrError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj_status_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::string result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_utilStrError",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilStrError" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_utilStrError" "', argument " "2"" of type '" "pj_status_t""'");
  } 
  arg2 = static_cast< pj_status_t >(val2);
  result = (arg1)->utilStrError(arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilLogWrite__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  int arg2 ;
  pj::string *arg3 = 0 ;
  pj::string *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Endpoint_utilLogWrite",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilLogWrite" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_utilLogWrite" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Endpoint_utilLogWrite" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_utilLogWrite" "', argument " "3"" of type '" "pj::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string(obj3, &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Endpoint_utilLogWrite" "', argument " "4"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_utilLogWrite" "', argument " "4"" of type '" "pj::string const &""'"); 
    }
    arg4 = ptr;
  }
  (arg1)->utilLogWrite(arg2,(pj::string const &)*arg3,(pj::string const &)*arg4);
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilLogWrite__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::LogEntry *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_utilLogWrite",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilLogWrite" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__LogEntry,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_utilLogWrite" "', argument " "2"" of type '" "pj::LogEntry &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_utilLogWrite" "', argument " "2"" of type '" "pj::LogEntry &""'"); 
  }
  arg2 = reinterpret_cast< pj::LogEntry * >(argp2);
  (arg1)->utilLogWrite(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilLogWrite(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[5];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Endpoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_pj__LogEntry, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Endpoint_utilLogWrite__SWIG_1(self, args);
      }
    }
  }
  if (argc == 4) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Endpoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_Endpoint_utilLogWrite__SWIG_0(self, args);
          }
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Endpoint_utilLogWrite'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Endpoint::utilLogWrite(int,pj::string const &,pj::string const &)\n"
    "    pj::Endpoint::utilLogWrite(pj::LogEntry &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilVerifySipUri(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_utilVerifySipUri",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilVerifySipUri" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_utilVerifySipUri" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_utilVerifySipUri" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = (pj_status_t)(arg1)->utilVerifySipUri((pj::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilVerifyUri(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj_status_t result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_utilVerifyUri",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilVerifyUri" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_utilVerifyUri" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_utilVerifyUri" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = (pj_status_t)(arg1)->utilVerifyUri((pj::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilTimerSchedule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  unsigned int arg2 ;
  pj::Token arg3 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  pj::Token result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Endpoint_utilTimerSchedule",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilTimerSchedule" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_utilTimerSchedule" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Endpoint_utilTimerSchedule" "', argument " "3"" of type '" "pj::Token""'"); 
  }
  try {
    result = (pj::Token)(arg1)->utilTimerSchedule(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilTimerCancel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_utilTimerCancel",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilTimerCancel" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_utilTimerCancel" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  (arg1)->utilTimerCancel(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilAddPendingJob(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::PendingJob *arg2 = (pj::PendingJob *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_utilAddPendingJob",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilAddPendingJob" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_pj__PendingJob, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_utilAddPendingJob" "', argument " "2"" of type '" "pj::PendingJob *""'"); 
  }
  arg2 = reinterpret_cast< pj::PendingJob * >(argp2);
  (arg1)->utilAddPendingJob(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_utilSslGetAvailableCiphers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::IntVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_utilSslGetAvailableCiphers",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_utilSslGetAvailableCiphers" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    result = (arg1)->utilSslGetAvailableCiphers();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_natDetectType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_natDetectType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_natDetectType" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    (arg1)->natDetectType();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_natGetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj_stun_nat_type result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_natGetType",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_natGetType" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    result = (pj_stun_nat_type)(arg1)->natGetType();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_natCheckStunServers(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::StringVector *arg2 = 0 ;
  bool arg3 ;
  pj::Token arg4 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  bool val3 ;
  int ecode3 = 0 ;
  int res4 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOOO:Endpoint_natCheckStunServers",&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_natCheckStunServers" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::vector<std::string,std::allocator< std::string > > *ptr = (std::vector<std::string,std::allocator< std::string > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_natCheckStunServers" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_natCheckStunServers" "', argument " "2"" of type '" "pj::StringVector const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Endpoint_natCheckStunServers" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  res4 = SWIG_ConvertPtr(obj3,SWIG_as_voidptrptr(&arg4), 0, 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "Endpoint_natCheckStunServers" "', argument " "4"" of type '" "pj::Token""'"); 
  }
  try {
    (arg1)->natCheckStunServers((pj::StringVector const &)*arg2,arg3,arg4);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_natCancelCheckStunServers__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Endpoint_natCancelCheckStunServers",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_natCancelCheckStunServers" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_natCancelCheckStunServers" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Endpoint_natCancelCheckStunServers" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->natCancelCheckStunServers(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_natCancelCheckStunServers__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::Token arg2 = (pj::Token) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_natCancelCheckStunServers",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_natCancelCheckStunServers" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_natCancelCheckStunServers" "', argument " "2"" of type '" "pj::Token""'"); 
  }
  try {
    (arg1)->natCancelCheckStunServers(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_natCancelCheckStunServers(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[4];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Endpoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_Endpoint_natCancelCheckStunServers__SWIG_1(self, args);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_pj__Endpoint, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *ptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_bool(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_Endpoint_natCancelCheckStunServers__SWIG_0(self, args);
        }
      }
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Endpoint_natCancelCheckStunServers'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    pj::Endpoint::natCancelCheckStunServers(pj::Token,bool)\n"
    "    pj::Endpoint::natCancelCheckStunServers(pj::Token)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_Endpoint_transportCreate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pjsip_transport_type_e arg2 ;
  pj::TransportConfig *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  pj::TransportId result;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Endpoint_transportCreate",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_transportCreate" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_transportCreate" "', argument " "2"" of type '" "pjsip_transport_type_e""'");
  } 
  arg2 = static_cast< pjsip_transport_type_e >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_pj__TransportConfig,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Endpoint_transportCreate" "', argument " "3"" of type '" "pj::TransportConfig const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_transportCreate" "', argument " "3"" of type '" "pj::TransportConfig const &""'"); 
  }
  arg3 = reinterpret_cast< pj::TransportConfig * >(argp3);
  try {
    result = (pj::TransportId)(arg1)->transportCreate(arg2,(pj::TransportConfig const &)*arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_transportEnum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::IntVector result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_transportEnum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_transportEnum" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    result = (arg1)->transportEnum();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_transportGetInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::TransportId arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::TransportInfo result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_transportGetInfo",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_transportGetInfo" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_transportGetInfo" "', argument " "2"" of type '" "pj::TransportId""'");
  } 
  arg2 = static_cast< pj::TransportId >(val2);
  try {
    result = (arg1)->transportGetInfo(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj((new pj::TransportInfo(static_cast< const pj::TransportInfo& >(result))), SWIGTYPE_p_pj__TransportInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_transportSetEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::TransportId arg2 ;
  bool arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  bool val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Endpoint_transportSetEnable",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_transportSetEnable" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_transportSetEnable" "', argument " "2"" of type '" "pj::TransportId""'");
  } 
  arg2 = static_cast< pj::TransportId >(val2);
  ecode3 = SWIG_AsVal_bool(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Endpoint_transportSetEnable" "', argument " "3"" of type '" "bool""'");
  } 
  arg3 = static_cast< bool >(val3);
  try {
    (arg1)->transportSetEnable(arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_transportClose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::TransportId arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_transportClose",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_transportClose" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Endpoint_transportClose" "', argument " "2"" of type '" "pj::TransportId""'");
  } 
  arg2 = static_cast< pj::TransportId >(val2);
  try {
    (arg1)->transportClose(arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_hangupAllCalls(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_hangupAllCalls",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_hangupAllCalls" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  (arg1)->hangupAllCalls();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_mediaAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::AudioMedia *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_mediaAdd",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_mediaAdd" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AudioMedia,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_mediaAdd" "', argument " "2"" of type '" "pj::AudioMedia &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_mediaAdd" "', argument " "2"" of type '" "pj::AudioMedia &""'"); 
  }
  arg2 = reinterpret_cast< pj::AudioMedia * >(argp2);
  (arg1)->mediaAdd(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_mediaRemove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::AudioMedia *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_mediaRemove",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_mediaRemove" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AudioMedia,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_mediaRemove" "', argument " "2"" of type '" "pj::AudioMedia &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_mediaRemove" "', argument " "2"" of type '" "pj::AudioMedia &""'"); 
  }
  arg2 = reinterpret_cast< pj::AudioMedia * >(argp2);
  (arg1)->mediaRemove(*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_mediaExists(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::AudioMedia *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  bool result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_mediaExists",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_mediaExists" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__AudioMedia,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_mediaExists" "', argument " "2"" of type '" "pj::AudioMedia const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_mediaExists" "', argument " "2"" of type '" "pj::AudioMedia const &""'"); 
  }
  arg2 = reinterpret_cast< pj::AudioMedia * >(argp2);
  result = (bool)((pj::Endpoint const *)arg1)->mediaExists((pj::AudioMedia const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_mediaMaxPorts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_mediaMaxPorts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_mediaMaxPorts" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  result = (unsigned int)((pj::Endpoint const *)arg1)->mediaMaxPorts();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_mediaActivePorts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_mediaActivePorts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_mediaActivePorts" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  result = (unsigned int)((pj::Endpoint const *)arg1)->mediaActivePorts();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_mediaEnumPorts(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudioMediaVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_mediaEnumPorts",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_mediaEnumPorts" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    result = (pj::AudioMediaVector *) &((pj::Endpoint const *)arg1)->mediaEnumPorts();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<pj::AudioMedia*,std::allocator< pj::AudioMedia * > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_audDevManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::AudDevManager *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_audDevManager",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_audDevManager" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  result = (pj::AudDevManager *) &(arg1)->audDevManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_pj__AudDevManager, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_codecEnum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  pj::CodecInfoVector *result = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:Endpoint_codecEnum",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_codecEnum" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  try {
    result = (pj::CodecInfoVector *) &(arg1)->codecEnum();
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = swig::from(static_cast< std::vector<pj::CodecInfo*,std::allocator< pj::CodecInfo * > > >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_codecSetPriority(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::string *arg2 = 0 ;
  pj_uint8_t arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned char val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Endpoint_codecSetPriority",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_codecSetPriority" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_codecSetPriority" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_codecSetPriority" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_char(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Endpoint_codecSetPriority" "', argument " "3"" of type '" "pj_uint8_t""'");
  } 
  arg3 = static_cast< pj_uint8_t >(val3);
  try {
    (arg1)->codecSetPriority((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_codecGetParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  pj::CodecParam result;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_codecGetParam",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_codecGetParam" "', argument " "1"" of type '" "pj::Endpoint const *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_codecGetParam" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_codecGetParam" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  try {
    result = (pj::CodecParam)((pj::Endpoint const *)arg1)->codecGetParam((pj::string const &)*arg2);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_codecSetParam(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::string *arg2 = 0 ;
  pj::CodecParam arg3 = (pj::CodecParam) (pj::CodecParam)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  int res3 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"OOO:Endpoint_codecSetParam",&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_codecSetParam" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_codecSetParam" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_codecSetParam" "', argument " "2"" of type '" "pj::string const &""'"); 
    }
    arg2 = ptr;
  }
  res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Endpoint_codecSetParam" "', argument " "3"" of type '" "pj::CodecParam const""'"); 
  }
  try {
    (arg1)->codecSetParam((pj::string const &)*arg2,arg3);
  }
  catch(pj::Error &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new pj::Error(static_cast< const pj::Error& >(_e))),SWIGTYPE_p_pj__Error,SWIG_POINTER_OWN), "pj::Error", SWIGTYPE_p_pj__Error); SWIG_fail;
  }
  
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_onNatDetectionComplete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::OnNatDetectionCompleteParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_onNatDetectionComplete",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_onNatDetectionComplete" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnNatDetectionCompleteParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_onNatDetectionComplete" "', argument " "2"" of type '" "pj::OnNatDetectionCompleteParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_onNatDetectionComplete" "', argument " "2"" of type '" "pj::OnNatDetectionCompleteParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnNatDetectionCompleteParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Endpoint::onNatDetectionComplete((pj::OnNatDetectionCompleteParam const &)*arg2);
    } else {
      (arg1)->onNatDetectionComplete((pj::OnNatDetectionCompleteParam const &)*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_onNatCheckStunServersComplete(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::OnNatCheckStunServersCompleteParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_onNatCheckStunServersComplete",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_onNatCheckStunServersComplete" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnNatCheckStunServersCompleteParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_onNatCheckStunServersComplete" "', argument " "2"" of type '" "pj::OnNatCheckStunServersCompleteParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_onNatCheckStunServersComplete" "', argument " "2"" of type '" "pj::OnNatCheckStunServersCompleteParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnNatCheckStunServersCompleteParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Endpoint::onNatCheckStunServersComplete((pj::OnNatCheckStunServersCompleteParam const &)*arg2);
    } else {
      (arg1)->onNatCheckStunServersComplete((pj::OnNatCheckStunServersCompleteParam const &)*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_onTransportState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::OnTransportStateParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_onTransportState",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_onTransportState" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnTransportStateParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_onTransportState" "', argument " "2"" of type '" "pj::OnTransportStateParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_onTransportState" "', argument " "2"" of type '" "pj::OnTransportStateParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnTransportStateParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Endpoint::onTransportState((pj::OnTransportStateParam const &)*arg2);
    } else {
      (arg1)->onTransportState((pj::OnTransportStateParam const &)*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_onTimer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::OnTimerParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_onTimer",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_onTimer" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnTimerParam,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_onTimer" "', argument " "2"" of type '" "pj::OnTimerParam const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_onTimer" "', argument " "2"" of type '" "pj::OnTimerParam const &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnTimerParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Endpoint::onTimer((pj::OnTimerParam const &)*arg2);
    } else {
      (arg1)->onTimer((pj::OnTimerParam const &)*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_Endpoint_onSelectAccount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  pj::OnSelectAccountParam *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  Swig::Director *director = 0;
  bool upcall = false;
  
  if (!PyArg_ParseTuple(args,(char *)"OO:Endpoint_onSelectAccount",&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Endpoint_onSelectAccount" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_pj__OnSelectAccountParam,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Endpoint_onSelectAccount" "', argument " "2"" of type '" "pj::OnSelectAccountParam &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Endpoint_onSelectAccount" "', argument " "2"" of type '" "pj::OnSelectAccountParam &""'"); 
  }
  arg2 = reinterpret_cast< pj::OnSelectAccountParam * >(argp2);
  director = SWIG_DIRECTOR_CAST(arg1);
  upcall = (director && (director->swig_get_self()==obj0));
  try {
    if (upcall) {
      (arg1)->pj::Endpoint::onSelectAccount(*arg2);
    } else {
      (arg1)->onSelectAccount(*arg2);
    }
  } catch (Swig::DirectorException&) {
    SWIG_fail;
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_disown_Endpoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  pj::Endpoint *arg1 = (pj::Endpoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if (!PyArg_ParseTuple(args,(char *)"O:disown_Endpoint",&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_pj__Endpoint, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "disown_Endpoint" "', argument " "1"" of type '" "pj::Endpoint *""'"); 
  }
  arg1 = reinterpret_cast< pj::Endpoint * >(argp1);
  {
    Swig::Director *director = SWIG_DIRECTOR_CAST(arg1);
    if (director) director->swig_disown();
  }
  
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *Endpoint_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_ParseTuple(args,(char*)"O:swigregister", &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_pj__Endpoint, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"pj_qos_params_flags_set", _wrap_pj_qos_params_flags_set, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_flags_get", _wrap_pj_qos_params_flags_get, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_dscp_val_set", _wrap_pj_qos_params_dscp_val_set, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_dscp_val_get", _wrap_pj_qos_params_dscp_val_get, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_so_prio_set", _wrap_pj_qos_params_so_prio_set, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_so_prio_get", _wrap_pj_qos_params_so_prio_get, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_wmm_prio_set", _wrap_pj_qos_params_wmm_prio_set, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_wmm_prio_get", _wrap_pj_qos_params_wmm_prio_get, METH_VARARGS, NULL},
	 { (char *)"new_pj_qos_params", _wrap_new_pj_qos_params, METH_VARARGS, NULL},
	 { (char *)"delete_pj_qos_params", _wrap_delete_pj_qos_params, METH_VARARGS, NULL},
	 { (char *)"pj_qos_params_swigregister", pj_qos_params_swigregister, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_digit_set", _wrap_pjmedia_tone_digit_digit_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_digit_get", _wrap_pjmedia_tone_digit_digit_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_on_msec_set", _wrap_pjmedia_tone_digit_on_msec_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_on_msec_get", _wrap_pjmedia_tone_digit_on_msec_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_off_msec_set", _wrap_pjmedia_tone_digit_off_msec_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_off_msec_get", _wrap_pjmedia_tone_digit_off_msec_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_volume_set", _wrap_pjmedia_tone_digit_volume_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_volume_get", _wrap_pjmedia_tone_digit_volume_get, METH_VARARGS, NULL},
	 { (char *)"new_pjmedia_tone_digit", _wrap_new_pjmedia_tone_digit, METH_VARARGS, NULL},
	 { (char *)"delete_pjmedia_tone_digit", _wrap_delete_pjmedia_tone_digit, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_swigregister", pjmedia_tone_digit_swigregister, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_map_count_set", _wrap_pjmedia_tone_digit_map_count_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_map_count_get", _wrap_pjmedia_tone_digit_map_count_get, METH_VARARGS, NULL},
	 { (char *)"new_pjmedia_tone_digit_map", _wrap_new_pjmedia_tone_digit_map, METH_VARARGS, NULL},
	 { (char *)"delete_pjmedia_tone_digit_map", _wrap_delete_pjmedia_tone_digit_map, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_digit_map_swigregister", pjmedia_tone_digit_map_swigregister, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_freq1_set", _wrap_pjmedia_tone_desc_freq1_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_freq1_get", _wrap_pjmedia_tone_desc_freq1_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_freq2_set", _wrap_pjmedia_tone_desc_freq2_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_freq2_get", _wrap_pjmedia_tone_desc_freq2_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_on_msec_set", _wrap_pjmedia_tone_desc_on_msec_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_on_msec_get", _wrap_pjmedia_tone_desc_on_msec_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_off_msec_set", _wrap_pjmedia_tone_desc_off_msec_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_off_msec_get", _wrap_pjmedia_tone_desc_off_msec_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_volume_set", _wrap_pjmedia_tone_desc_volume_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_volume_get", _wrap_pjmedia_tone_desc_volume_get, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_flags_set", _wrap_pjmedia_tone_desc_flags_set, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_flags_get", _wrap_pjmedia_tone_desc_flags_get, METH_VARARGS, NULL},
	 { (char *)"new_pjmedia_tone_desc", _wrap_new_pjmedia_tone_desc, METH_VARARGS, NULL},
	 { (char *)"delete_pjmedia_tone_desc", _wrap_delete_pjmedia_tone_desc, METH_VARARGS, NULL},
	 { (char *)"pjmedia_tone_desc_swigregister", pjmedia_tone_desc_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"StringVector_iterator", _wrap_StringVector_iterator, METH_VARARGS, NULL},
	 { (char *)"StringVector___nonzero__", _wrap_StringVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"StringVector___bool__", _wrap_StringVector___bool__, METH_VARARGS, NULL},
	 { (char *)"StringVector___len__", _wrap_StringVector___len__, METH_VARARGS, NULL},
	 { (char *)"StringVector_pop", _wrap_StringVector_pop, METH_VARARGS, NULL},
	 { (char *)"StringVector___getslice__", _wrap_StringVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"StringVector___setslice__", _wrap_StringVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"StringVector___delslice__", _wrap_StringVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"StringVector___delitem__", _wrap_StringVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"StringVector___getitem__", _wrap_StringVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"StringVector___setitem__", _wrap_StringVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"StringVector_append", _wrap_StringVector_append, METH_VARARGS, NULL},
	 { (char *)"StringVector_empty", _wrap_StringVector_empty, METH_VARARGS, NULL},
	 { (char *)"StringVector_size", _wrap_StringVector_size, METH_VARARGS, NULL},
	 { (char *)"StringVector_clear", _wrap_StringVector_clear, METH_VARARGS, NULL},
	 { (char *)"StringVector_swap", _wrap_StringVector_swap, METH_VARARGS, NULL},
	 { (char *)"StringVector_get_allocator", _wrap_StringVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"StringVector_begin", _wrap_StringVector_begin, METH_VARARGS, NULL},
	 { (char *)"StringVector_end", _wrap_StringVector_end, METH_VARARGS, NULL},
	 { (char *)"StringVector_rbegin", _wrap_StringVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"StringVector_rend", _wrap_StringVector_rend, METH_VARARGS, NULL},
	 { (char *)"StringVector_pop_back", _wrap_StringVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"StringVector_erase", _wrap_StringVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_StringVector", _wrap_new_StringVector, METH_VARARGS, NULL},
	 { (char *)"StringVector_push_back", _wrap_StringVector_push_back, METH_VARARGS, NULL},
	 { (char *)"StringVector_front", _wrap_StringVector_front, METH_VARARGS, NULL},
	 { (char *)"StringVector_back", _wrap_StringVector_back, METH_VARARGS, NULL},
	 { (char *)"StringVector_assign", _wrap_StringVector_assign, METH_VARARGS, NULL},
	 { (char *)"StringVector_resize", _wrap_StringVector_resize, METH_VARARGS, NULL},
	 { (char *)"StringVector_insert", _wrap_StringVector_insert, METH_VARARGS, NULL},
	 { (char *)"StringVector_reserve", _wrap_StringVector_reserve, METH_VARARGS, NULL},
	 { (char *)"StringVector_capacity", _wrap_StringVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_StringVector", _wrap_delete_StringVector, METH_VARARGS, NULL},
	 { (char *)"StringVector_swigregister", StringVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"IntVector_iterator", _wrap_IntVector_iterator, METH_VARARGS, NULL},
	 { (char *)"IntVector___nonzero__", _wrap_IntVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"IntVector___bool__", _wrap_IntVector___bool__, METH_VARARGS, NULL},
	 { (char *)"IntVector___len__", _wrap_IntVector___len__, METH_VARARGS, NULL},
	 { (char *)"IntVector_pop", _wrap_IntVector_pop, METH_VARARGS, NULL},
	 { (char *)"IntVector___getslice__", _wrap_IntVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"IntVector___setslice__", _wrap_IntVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"IntVector___delslice__", _wrap_IntVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"IntVector___delitem__", _wrap_IntVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"IntVector___getitem__", _wrap_IntVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"IntVector___setitem__", _wrap_IntVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"IntVector_append", _wrap_IntVector_append, METH_VARARGS, NULL},
	 { (char *)"IntVector_empty", _wrap_IntVector_empty, METH_VARARGS, NULL},
	 { (char *)"IntVector_size", _wrap_IntVector_size, METH_VARARGS, NULL},
	 { (char *)"IntVector_clear", _wrap_IntVector_clear, METH_VARARGS, NULL},
	 { (char *)"IntVector_swap", _wrap_IntVector_swap, METH_VARARGS, NULL},
	 { (char *)"IntVector_get_allocator", _wrap_IntVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"IntVector_begin", _wrap_IntVector_begin, METH_VARARGS, NULL},
	 { (char *)"IntVector_end", _wrap_IntVector_end, METH_VARARGS, NULL},
	 { (char *)"IntVector_rbegin", _wrap_IntVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"IntVector_rend", _wrap_IntVector_rend, METH_VARARGS, NULL},
	 { (char *)"IntVector_pop_back", _wrap_IntVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"IntVector_erase", _wrap_IntVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_IntVector", _wrap_new_IntVector, METH_VARARGS, NULL},
	 { (char *)"IntVector_push_back", _wrap_IntVector_push_back, METH_VARARGS, NULL},
	 { (char *)"IntVector_front", _wrap_IntVector_front, METH_VARARGS, NULL},
	 { (char *)"IntVector_back", _wrap_IntVector_back, METH_VARARGS, NULL},
	 { (char *)"IntVector_assign", _wrap_IntVector_assign, METH_VARARGS, NULL},
	 { (char *)"IntVector_resize", _wrap_IntVector_resize, METH_VARARGS, NULL},
	 { (char *)"IntVector_insert", _wrap_IntVector_insert, METH_VARARGS, NULL},
	 { (char *)"IntVector_reserve", _wrap_IntVector_reserve, METH_VARARGS, NULL},
	 { (char *)"IntVector_capacity", _wrap_IntVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_IntVector", _wrap_delete_IntVector, METH_VARARGS, NULL},
	 { (char *)"IntVector_swigregister", IntVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"Error_status_set", _wrap_Error_status_set, METH_VARARGS, NULL},
	 { (char *)"Error_status_get", _wrap_Error_status_get, METH_VARARGS, NULL},
	 { (char *)"Error_title_set", _wrap_Error_title_set, METH_VARARGS, NULL},
	 { (char *)"Error_title_get", _wrap_Error_title_get, METH_VARARGS, NULL},
	 { (char *)"Error_reason_set", _wrap_Error_reason_set, METH_VARARGS, NULL},
	 { (char *)"Error_reason_get", _wrap_Error_reason_get, METH_VARARGS, NULL},
	 { (char *)"Error_srcFile_set", _wrap_Error_srcFile_set, METH_VARARGS, NULL},
	 { (char *)"Error_srcFile_get", _wrap_Error_srcFile_get, METH_VARARGS, NULL},
	 { (char *)"Error_srcLine_set", _wrap_Error_srcLine_set, METH_VARARGS, NULL},
	 { (char *)"Error_srcLine_get", _wrap_Error_srcLine_get, METH_VARARGS, NULL},
	 { (char *)"Error_info", _wrap_Error_info, METH_VARARGS, NULL},
	 { (char *)"new_Error", _wrap_new_Error, METH_VARARGS, NULL},
	 { (char *)"delete_Error", _wrap_delete_Error, METH_VARARGS, NULL},
	 { (char *)"Error_swigregister", Error_swigregister, METH_VARARGS, NULL},
	 { (char *)"Version_major_set", _wrap_Version_major_set, METH_VARARGS, NULL},
	 { (char *)"Version_major_get", _wrap_Version_major_get, METH_VARARGS, NULL},
	 { (char *)"Version_minor_set", _wrap_Version_minor_set, METH_VARARGS, NULL},
	 { (char *)"Version_minor_get", _wrap_Version_minor_get, METH_VARARGS, NULL},
	 { (char *)"Version_rev_set", _wrap_Version_rev_set, METH_VARARGS, NULL},
	 { (char *)"Version_rev_get", _wrap_Version_rev_get, METH_VARARGS, NULL},
	 { (char *)"Version_suffix_set", _wrap_Version_suffix_set, METH_VARARGS, NULL},
	 { (char *)"Version_suffix_get", _wrap_Version_suffix_get, METH_VARARGS, NULL},
	 { (char *)"Version_full_set", _wrap_Version_full_set, METH_VARARGS, NULL},
	 { (char *)"Version_full_get", _wrap_Version_full_get, METH_VARARGS, NULL},
	 { (char *)"Version_numeric_set", _wrap_Version_numeric_set, METH_VARARGS, NULL},
	 { (char *)"Version_numeric_get", _wrap_Version_numeric_get, METH_VARARGS, NULL},
	 { (char *)"new_Version", _wrap_new_Version, METH_VARARGS, NULL},
	 { (char *)"delete_Version", _wrap_delete_Version, METH_VARARGS, NULL},
	 { (char *)"Version_swigregister", Version_swigregister, METH_VARARGS, NULL},
	 { (char *)"TimeVal_sec_set", _wrap_TimeVal_sec_set, METH_VARARGS, NULL},
	 { (char *)"TimeVal_sec_get", _wrap_TimeVal_sec_get, METH_VARARGS, NULL},
	 { (char *)"TimeVal_msec_set", _wrap_TimeVal_msec_set, METH_VARARGS, NULL},
	 { (char *)"TimeVal_msec_get", _wrap_TimeVal_msec_get, METH_VARARGS, NULL},
	 { (char *)"new_TimeVal", _wrap_new_TimeVal, METH_VARARGS, NULL},
	 { (char *)"delete_TimeVal", _wrap_delete_TimeVal, METH_VARARGS, NULL},
	 { (char *)"TimeVal_swigregister", TimeVal_swigregister, METH_VARARGS, NULL},
	 { (char *)"PersistentObject_readObject", _wrap_PersistentObject_readObject, METH_VARARGS, NULL},
	 { (char *)"PersistentObject_writeObject", _wrap_PersistentObject_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_PersistentObject", _wrap_delete_PersistentObject, METH_VARARGS, NULL},
	 { (char *)"PersistentObject_swigregister", PersistentObject_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_PersistentDocument", _wrap_delete_PersistentDocument, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_loadFile", _wrap_PersistentDocument_loadFile, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_loadString", _wrap_PersistentDocument_loadString, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_saveFile", _wrap_PersistentDocument_saveFile, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_saveString", _wrap_PersistentDocument_saveString, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_getRootContainer", _wrap_PersistentDocument_getRootContainer, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_hasUnread", _wrap_PersistentDocument_hasUnread, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_unreadName", _wrap_PersistentDocument_unreadName, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readInt", _wrap_PersistentDocument_readInt, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readNumber", _wrap_PersistentDocument_readNumber, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readBool", _wrap_PersistentDocument_readBool, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readString", _wrap_PersistentDocument_readString, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readStringVector", _wrap_PersistentDocument_readStringVector, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readObject", _wrap_PersistentDocument_readObject, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readContainer", _wrap_PersistentDocument_readContainer, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_readArray", _wrap_PersistentDocument_readArray, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeNumber", _wrap_PersistentDocument_writeNumber, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeInt", _wrap_PersistentDocument_writeInt, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeBool", _wrap_PersistentDocument_writeBool, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeString", _wrap_PersistentDocument_writeString, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeStringVector", _wrap_PersistentDocument_writeStringVector, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeObject", _wrap_PersistentDocument_writeObject, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeNewContainer", _wrap_PersistentDocument_writeNewContainer, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_writeNewArray", _wrap_PersistentDocument_writeNewArray, METH_VARARGS, NULL},
	 { (char *)"PersistentDocument_swigregister", PersistentDocument_swigregister, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_hasUnread", _wrap_ContainerNode_hasUnread, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_unreadName", _wrap_ContainerNode_unreadName, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readInt", _wrap_ContainerNode_readInt, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readNumber", _wrap_ContainerNode_readNumber, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readBool", _wrap_ContainerNode_readBool, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readString", _wrap_ContainerNode_readString, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readStringVector", _wrap_ContainerNode_readStringVector, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readObject", _wrap_ContainerNode_readObject, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readContainer", _wrap_ContainerNode_readContainer, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_readArray", _wrap_ContainerNode_readArray, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeNumber", _wrap_ContainerNode_writeNumber, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeInt", _wrap_ContainerNode_writeInt, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeBool", _wrap_ContainerNode_writeBool, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeString", _wrap_ContainerNode_writeString, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeStringVector", _wrap_ContainerNode_writeStringVector, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeObject", _wrap_ContainerNode_writeObject, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeNewContainer", _wrap_ContainerNode_writeNewContainer, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_writeNewArray", _wrap_ContainerNode_writeNewArray, METH_VARARGS, NULL},
	 { (char *)"new_ContainerNode", _wrap_new_ContainerNode, METH_VARARGS, NULL},
	 { (char *)"delete_ContainerNode", _wrap_delete_ContainerNode, METH_VARARGS, NULL},
	 { (char *)"ContainerNode_swigregister", ContainerNode_swigregister, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_scheme_set", _wrap_AuthCredInfo_scheme_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_scheme_get", _wrap_AuthCredInfo_scheme_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_realm_set", _wrap_AuthCredInfo_realm_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_realm_get", _wrap_AuthCredInfo_realm_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_username_set", _wrap_AuthCredInfo_username_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_username_get", _wrap_AuthCredInfo_username_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_dataType_set", _wrap_AuthCredInfo_dataType_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_dataType_get", _wrap_AuthCredInfo_dataType_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_data_set", _wrap_AuthCredInfo_data_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_data_get", _wrap_AuthCredInfo_data_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_akaK_set", _wrap_AuthCredInfo_akaK_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_akaK_get", _wrap_AuthCredInfo_akaK_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_akaOp_set", _wrap_AuthCredInfo_akaOp_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_akaOp_get", _wrap_AuthCredInfo_akaOp_get, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_akaAmf_set", _wrap_AuthCredInfo_akaAmf_set, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_akaAmf_get", _wrap_AuthCredInfo_akaAmf_get, METH_VARARGS, NULL},
	 { (char *)"new_AuthCredInfo", _wrap_new_AuthCredInfo, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_readObject", _wrap_AuthCredInfo_readObject, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_writeObject", _wrap_AuthCredInfo_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_AuthCredInfo", _wrap_delete_AuthCredInfo, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfo_swigregister", AuthCredInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_CaListFile_set", _wrap_TlsConfig_CaListFile_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_CaListFile_get", _wrap_TlsConfig_CaListFile_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_certFile_set", _wrap_TlsConfig_certFile_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_certFile_get", _wrap_TlsConfig_certFile_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_privKeyFile_set", _wrap_TlsConfig_privKeyFile_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_privKeyFile_get", _wrap_TlsConfig_privKeyFile_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_password_set", _wrap_TlsConfig_password_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_password_get", _wrap_TlsConfig_password_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_method_set", _wrap_TlsConfig_method_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_method_get", _wrap_TlsConfig_method_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_ciphers_set", _wrap_TlsConfig_ciphers_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_ciphers_get", _wrap_TlsConfig_ciphers_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_verifyServer_set", _wrap_TlsConfig_verifyServer_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_verifyServer_get", _wrap_TlsConfig_verifyServer_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_verifyClient_set", _wrap_TlsConfig_verifyClient_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_verifyClient_get", _wrap_TlsConfig_verifyClient_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_requireClientCert_set", _wrap_TlsConfig_requireClientCert_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_requireClientCert_get", _wrap_TlsConfig_requireClientCert_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_msecTimeout_set", _wrap_TlsConfig_msecTimeout_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_msecTimeout_get", _wrap_TlsConfig_msecTimeout_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_qosType_set", _wrap_TlsConfig_qosType_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_qosType_get", _wrap_TlsConfig_qosType_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_qosParams_set", _wrap_TlsConfig_qosParams_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_qosParams_get", _wrap_TlsConfig_qosParams_get, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_qosIgnoreError_set", _wrap_TlsConfig_qosIgnoreError_set, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_qosIgnoreError_get", _wrap_TlsConfig_qosIgnoreError_get, METH_VARARGS, NULL},
	 { (char *)"new_TlsConfig", _wrap_new_TlsConfig, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_readObject", _wrap_TlsConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_writeObject", _wrap_TlsConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_TlsConfig", _wrap_delete_TlsConfig, METH_VARARGS, NULL},
	 { (char *)"TlsConfig_swigregister", TlsConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_port_set", _wrap_TransportConfig_port_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_port_get", _wrap_TransportConfig_port_get, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_portRange_set", _wrap_TransportConfig_portRange_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_portRange_get", _wrap_TransportConfig_portRange_get, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_publicAddress_set", _wrap_TransportConfig_publicAddress_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_publicAddress_get", _wrap_TransportConfig_publicAddress_get, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_boundAddress_set", _wrap_TransportConfig_boundAddress_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_boundAddress_get", _wrap_TransportConfig_boundAddress_get, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_tlsConfig_set", _wrap_TransportConfig_tlsConfig_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_tlsConfig_get", _wrap_TransportConfig_tlsConfig_get, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_qosType_set", _wrap_TransportConfig_qosType_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_qosType_get", _wrap_TransportConfig_qosType_get, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_qosParams_set", _wrap_TransportConfig_qosParams_set, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_qosParams_get", _wrap_TransportConfig_qosParams_get, METH_VARARGS, NULL},
	 { (char *)"new_TransportConfig", _wrap_new_TransportConfig, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_readObject", _wrap_TransportConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_writeObject", _wrap_TransportConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_TransportConfig", _wrap_delete_TransportConfig, METH_VARARGS, NULL},
	 { (char *)"TransportConfig_swigregister", TransportConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_id_set", _wrap_TransportInfo_id_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_id_get", _wrap_TransportInfo_id_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_type_set", _wrap_TransportInfo_type_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_type_get", _wrap_TransportInfo_type_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_typeName_set", _wrap_TransportInfo_typeName_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_typeName_get", _wrap_TransportInfo_typeName_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_info_set", _wrap_TransportInfo_info_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_info_get", _wrap_TransportInfo_info_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_flags_set", _wrap_TransportInfo_flags_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_flags_get", _wrap_TransportInfo_flags_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_localAddress_set", _wrap_TransportInfo_localAddress_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_localAddress_get", _wrap_TransportInfo_localAddress_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_localName_set", _wrap_TransportInfo_localName_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_localName_get", _wrap_TransportInfo_localName_get, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_usageCount_set", _wrap_TransportInfo_usageCount_set, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_usageCount_get", _wrap_TransportInfo_usageCount_get, METH_VARARGS, NULL},
	 { (char *)"new_TransportInfo", _wrap_new_TransportInfo, METH_VARARGS, NULL},
	 { (char *)"delete_TransportInfo", _wrap_delete_TransportInfo, METH_VARARGS, NULL},
	 { (char *)"TransportInfo_swigregister", TransportInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipRxData_info_set", _wrap_SipRxData_info_set, METH_VARARGS, NULL},
	 { (char *)"SipRxData_info_get", _wrap_SipRxData_info_get, METH_VARARGS, NULL},
	 { (char *)"SipRxData_wholeMsg_set", _wrap_SipRxData_wholeMsg_set, METH_VARARGS, NULL},
	 { (char *)"SipRxData_wholeMsg_get", _wrap_SipRxData_wholeMsg_get, METH_VARARGS, NULL},
	 { (char *)"SipRxData_srcAddress_set", _wrap_SipRxData_srcAddress_set, METH_VARARGS, NULL},
	 { (char *)"SipRxData_srcAddress_get", _wrap_SipRxData_srcAddress_get, METH_VARARGS, NULL},
	 { (char *)"SipRxData_pjRxData_set", _wrap_SipRxData_pjRxData_set, METH_VARARGS, NULL},
	 { (char *)"SipRxData_pjRxData_get", _wrap_SipRxData_pjRxData_get, METH_VARARGS, NULL},
	 { (char *)"new_SipRxData", _wrap_new_SipRxData, METH_VARARGS, NULL},
	 { (char *)"delete_SipRxData", _wrap_delete_SipRxData, METH_VARARGS, NULL},
	 { (char *)"SipRxData_swigregister", SipRxData_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipTxData_info_set", _wrap_SipTxData_info_set, METH_VARARGS, NULL},
	 { (char *)"SipTxData_info_get", _wrap_SipTxData_info_get, METH_VARARGS, NULL},
	 { (char *)"SipTxData_wholeMsg_set", _wrap_SipTxData_wholeMsg_set, METH_VARARGS, NULL},
	 { (char *)"SipTxData_wholeMsg_get", _wrap_SipTxData_wholeMsg_get, METH_VARARGS, NULL},
	 { (char *)"SipTxData_dstAddress_set", _wrap_SipTxData_dstAddress_set, METH_VARARGS, NULL},
	 { (char *)"SipTxData_dstAddress_get", _wrap_SipTxData_dstAddress_get, METH_VARARGS, NULL},
	 { (char *)"SipTxData_pjTxData_set", _wrap_SipTxData_pjTxData_set, METH_VARARGS, NULL},
	 { (char *)"SipTxData_pjTxData_get", _wrap_SipTxData_pjTxData_get, METH_VARARGS, NULL},
	 { (char *)"new_SipTxData", _wrap_new_SipTxData, METH_VARARGS, NULL},
	 { (char *)"delete_SipTxData", _wrap_delete_SipTxData, METH_VARARGS, NULL},
	 { (char *)"SipTxData_swigregister", SipTxData_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_role_set", _wrap_SipTransaction_role_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_role_get", _wrap_SipTransaction_role_get, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_method_set", _wrap_SipTransaction_method_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_method_get", _wrap_SipTransaction_method_get, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_statusCode_set", _wrap_SipTransaction_statusCode_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_statusCode_get", _wrap_SipTransaction_statusCode_get, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_statusText_set", _wrap_SipTransaction_statusText_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_statusText_get", _wrap_SipTransaction_statusText_get, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_state_set", _wrap_SipTransaction_state_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_state_get", _wrap_SipTransaction_state_get, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_lastTx_set", _wrap_SipTransaction_lastTx_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_lastTx_get", _wrap_SipTransaction_lastTx_get, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_pjTransaction_set", _wrap_SipTransaction_pjTransaction_set, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_pjTransaction_get", _wrap_SipTransaction_pjTransaction_get, METH_VARARGS, NULL},
	 { (char *)"new_SipTransaction", _wrap_new_SipTransaction, METH_VARARGS, NULL},
	 { (char *)"delete_SipTransaction", _wrap_delete_SipTransaction, METH_VARARGS, NULL},
	 { (char *)"SipTransaction_swigregister", SipTransaction_swigregister, METH_VARARGS, NULL},
	 { (char *)"TimerEvent_entry_set", _wrap_TimerEvent_entry_set, METH_VARARGS, NULL},
	 { (char *)"TimerEvent_entry_get", _wrap_TimerEvent_entry_get, METH_VARARGS, NULL},
	 { (char *)"new_TimerEvent", _wrap_new_TimerEvent, METH_VARARGS, NULL},
	 { (char *)"delete_TimerEvent", _wrap_delete_TimerEvent, METH_VARARGS, NULL},
	 { (char *)"TimerEvent_swigregister", TimerEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_tsx_set", _wrap_TsxStateEvent_tsx_set, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_tsx_get", _wrap_TsxStateEvent_tsx_get, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_prevState_set", _wrap_TsxStateEvent_prevState_set, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_prevState_get", _wrap_TsxStateEvent_prevState_get, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_type_set", _wrap_TsxStateEvent_type_set, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_type_get", _wrap_TsxStateEvent_type_get, METH_VARARGS, NULL},
	 { (char *)"new_TsxStateEvent", _wrap_new_TsxStateEvent, METH_VARARGS, NULL},
	 { (char *)"delete_TsxStateEvent", _wrap_delete_TsxStateEvent, METH_VARARGS, NULL},
	 { (char *)"TsxStateEvent_swigregister", TsxStateEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"TxMsgEvent_tdata_set", _wrap_TxMsgEvent_tdata_set, METH_VARARGS, NULL},
	 { (char *)"TxMsgEvent_tdata_get", _wrap_TxMsgEvent_tdata_get, METH_VARARGS, NULL},
	 { (char *)"new_TxMsgEvent", _wrap_new_TxMsgEvent, METH_VARARGS, NULL},
	 { (char *)"delete_TxMsgEvent", _wrap_delete_TxMsgEvent, METH_VARARGS, NULL},
	 { (char *)"TxMsgEvent_swigregister", TxMsgEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"TxErrorEvent_tdata_set", _wrap_TxErrorEvent_tdata_set, METH_VARARGS, NULL},
	 { (char *)"TxErrorEvent_tdata_get", _wrap_TxErrorEvent_tdata_get, METH_VARARGS, NULL},
	 { (char *)"TxErrorEvent_tsx_set", _wrap_TxErrorEvent_tsx_set, METH_VARARGS, NULL},
	 { (char *)"TxErrorEvent_tsx_get", _wrap_TxErrorEvent_tsx_get, METH_VARARGS, NULL},
	 { (char *)"new_TxErrorEvent", _wrap_new_TxErrorEvent, METH_VARARGS, NULL},
	 { (char *)"delete_TxErrorEvent", _wrap_delete_TxErrorEvent, METH_VARARGS, NULL},
	 { (char *)"TxErrorEvent_swigregister", TxErrorEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"RxMsgEvent_rdata_set", _wrap_RxMsgEvent_rdata_set, METH_VARARGS, NULL},
	 { (char *)"RxMsgEvent_rdata_get", _wrap_RxMsgEvent_rdata_get, METH_VARARGS, NULL},
	 { (char *)"new_RxMsgEvent", _wrap_new_RxMsgEvent, METH_VARARGS, NULL},
	 { (char *)"delete_RxMsgEvent", _wrap_delete_RxMsgEvent, METH_VARARGS, NULL},
	 { (char *)"RxMsgEvent_swigregister", RxMsgEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user1_set", _wrap_UserEvent_user1_set, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user1_get", _wrap_UserEvent_user1_get, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user2_set", _wrap_UserEvent_user2_set, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user2_get", _wrap_UserEvent_user2_get, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user3_set", _wrap_UserEvent_user3_set, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user3_get", _wrap_UserEvent_user3_get, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user4_set", _wrap_UserEvent_user4_set, METH_VARARGS, NULL},
	 { (char *)"UserEvent_user4_get", _wrap_UserEvent_user4_get, METH_VARARGS, NULL},
	 { (char *)"new_UserEvent", _wrap_new_UserEvent, METH_VARARGS, NULL},
	 { (char *)"delete_UserEvent", _wrap_delete_UserEvent, METH_VARARGS, NULL},
	 { (char *)"UserEvent_swigregister", UserEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipEvent_type_set", _wrap_SipEvent_type_set, METH_VARARGS, NULL},
	 { (char *)"SipEvent_type_get", _wrap_SipEvent_type_get, METH_VARARGS, NULL},
	 { (char *)"SipEvent_pjEvent_set", _wrap_SipEvent_pjEvent_set, METH_VARARGS, NULL},
	 { (char *)"SipEvent_pjEvent_get", _wrap_SipEvent_pjEvent_get, METH_VARARGS, NULL},
	 { (char *)"new_SipEvent", _wrap_new_SipEvent, METH_VARARGS, NULL},
	 { (char *)"delete_SipEvent", _wrap_delete_SipEvent, METH_VARARGS, NULL},
	 { (char *)"SipEvent_swigregister", SipEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipMediaType_type_set", _wrap_SipMediaType_type_set, METH_VARARGS, NULL},
	 { (char *)"SipMediaType_type_get", _wrap_SipMediaType_type_get, METH_VARARGS, NULL},
	 { (char *)"SipMediaType_subType_set", _wrap_SipMediaType_subType_set, METH_VARARGS, NULL},
	 { (char *)"SipMediaType_subType_get", _wrap_SipMediaType_subType_get, METH_VARARGS, NULL},
	 { (char *)"new_SipMediaType", _wrap_new_SipMediaType, METH_VARARGS, NULL},
	 { (char *)"delete_SipMediaType", _wrap_delete_SipMediaType, METH_VARARGS, NULL},
	 { (char *)"SipMediaType_swigregister", SipMediaType_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipHeader_hName_set", _wrap_SipHeader_hName_set, METH_VARARGS, NULL},
	 { (char *)"SipHeader_hName_get", _wrap_SipHeader_hName_get, METH_VARARGS, NULL},
	 { (char *)"SipHeader_hValue_set", _wrap_SipHeader_hValue_set, METH_VARARGS, NULL},
	 { (char *)"SipHeader_hValue_get", _wrap_SipHeader_hValue_get, METH_VARARGS, NULL},
	 { (char *)"new_SipHeader", _wrap_new_SipHeader, METH_VARARGS, NULL},
	 { (char *)"delete_SipHeader", _wrap_delete_SipHeader, METH_VARARGS, NULL},
	 { (char *)"SipHeader_swigregister", SipHeader_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_headers_set", _wrap_SipMultipartPart_headers_set, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_headers_get", _wrap_SipMultipartPart_headers_get, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_contentType_set", _wrap_SipMultipartPart_contentType_set, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_contentType_get", _wrap_SipMultipartPart_contentType_get, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_body_set", _wrap_SipMultipartPart_body_set, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_body_get", _wrap_SipMultipartPart_body_get, METH_VARARGS, NULL},
	 { (char *)"new_SipMultipartPart", _wrap_new_SipMultipartPart, METH_VARARGS, NULL},
	 { (char *)"delete_SipMultipartPart", _wrap_delete_SipMultipartPart, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPart_swigregister", SipMultipartPart_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_targetUri_set", _wrap_SipTxOption_targetUri_set, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_targetUri_get", _wrap_SipTxOption_targetUri_get, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_headers_set", _wrap_SipTxOption_headers_set, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_headers_get", _wrap_SipTxOption_headers_get, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_contentType_set", _wrap_SipTxOption_contentType_set, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_contentType_get", _wrap_SipTxOption_contentType_get, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_msgBody_set", _wrap_SipTxOption_msgBody_set, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_msgBody_get", _wrap_SipTxOption_msgBody_get, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_multipartContentType_set", _wrap_SipTxOption_multipartContentType_set, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_multipartContentType_get", _wrap_SipTxOption_multipartContentType_get, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_multipartParts_set", _wrap_SipTxOption_multipartParts_set, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_multipartParts_get", _wrap_SipTxOption_multipartParts_get, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_isEmpty", _wrap_SipTxOption_isEmpty, METH_VARARGS, NULL},
	 { (char *)"new_SipTxOption", _wrap_new_SipTxOption, METH_VARARGS, NULL},
	 { (char *)"delete_SipTxOption", _wrap_delete_SipTxOption, METH_VARARGS, NULL},
	 { (char *)"SipTxOption_swigregister", SipTxOption_swigregister, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_contentType_set", _wrap_SendInstantMessageParam_contentType_set, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_contentType_get", _wrap_SendInstantMessageParam_contentType_get, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_content_set", _wrap_SendInstantMessageParam_content_set, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_content_get", _wrap_SendInstantMessageParam_content_get, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_txOption_set", _wrap_SendInstantMessageParam_txOption_set, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_txOption_get", _wrap_SendInstantMessageParam_txOption_get, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_userData_set", _wrap_SendInstantMessageParam_userData_set, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_userData_get", _wrap_SendInstantMessageParam_userData_get, METH_VARARGS, NULL},
	 { (char *)"new_SendInstantMessageParam", _wrap_new_SendInstantMessageParam, METH_VARARGS, NULL},
	 { (char *)"delete_SendInstantMessageParam", _wrap_delete_SendInstantMessageParam, METH_VARARGS, NULL},
	 { (char *)"SendInstantMessageParam_swigregister", SendInstantMessageParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"SendTypingIndicationParam_isTyping_set", _wrap_SendTypingIndicationParam_isTyping_set, METH_VARARGS, NULL},
	 { (char *)"SendTypingIndicationParam_isTyping_get", _wrap_SendTypingIndicationParam_isTyping_get, METH_VARARGS, NULL},
	 { (char *)"SendTypingIndicationParam_txOption_set", _wrap_SendTypingIndicationParam_txOption_set, METH_VARARGS, NULL},
	 { (char *)"SendTypingIndicationParam_txOption_get", _wrap_SendTypingIndicationParam_txOption_get, METH_VARARGS, NULL},
	 { (char *)"new_SendTypingIndicationParam", _wrap_new_SendTypingIndicationParam, METH_VARARGS, NULL},
	 { (char *)"delete_SendTypingIndicationParam", _wrap_delete_SendTypingIndicationParam, METH_VARARGS, NULL},
	 { (char *)"SendTypingIndicationParam_swigregister", SendTypingIndicationParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_iterator", _wrap_SipHeaderVector_iterator, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___nonzero__", _wrap_SipHeaderVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___bool__", _wrap_SipHeaderVector___bool__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___len__", _wrap_SipHeaderVector___len__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_pop", _wrap_SipHeaderVector_pop, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___getslice__", _wrap_SipHeaderVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___setslice__", _wrap_SipHeaderVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___delslice__", _wrap_SipHeaderVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___delitem__", _wrap_SipHeaderVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___getitem__", _wrap_SipHeaderVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector___setitem__", _wrap_SipHeaderVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_append", _wrap_SipHeaderVector_append, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_empty", _wrap_SipHeaderVector_empty, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_size", _wrap_SipHeaderVector_size, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_clear", _wrap_SipHeaderVector_clear, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_swap", _wrap_SipHeaderVector_swap, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_get_allocator", _wrap_SipHeaderVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_begin", _wrap_SipHeaderVector_begin, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_end", _wrap_SipHeaderVector_end, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_rbegin", _wrap_SipHeaderVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_rend", _wrap_SipHeaderVector_rend, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_pop_back", _wrap_SipHeaderVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_erase", _wrap_SipHeaderVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_SipHeaderVector", _wrap_new_SipHeaderVector, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_push_back", _wrap_SipHeaderVector_push_back, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_front", _wrap_SipHeaderVector_front, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_back", _wrap_SipHeaderVector_back, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_assign", _wrap_SipHeaderVector_assign, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_resize", _wrap_SipHeaderVector_resize, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_insert", _wrap_SipHeaderVector_insert, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_reserve", _wrap_SipHeaderVector_reserve, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_capacity", _wrap_SipHeaderVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_SipHeaderVector", _wrap_delete_SipHeaderVector, METH_VARARGS, NULL},
	 { (char *)"SipHeaderVector_swigregister", SipHeaderVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_iterator", _wrap_AuthCredInfoVector_iterator, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___nonzero__", _wrap_AuthCredInfoVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___bool__", _wrap_AuthCredInfoVector___bool__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___len__", _wrap_AuthCredInfoVector___len__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_pop", _wrap_AuthCredInfoVector_pop, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___getslice__", _wrap_AuthCredInfoVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___setslice__", _wrap_AuthCredInfoVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___delslice__", _wrap_AuthCredInfoVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___delitem__", _wrap_AuthCredInfoVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___getitem__", _wrap_AuthCredInfoVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector___setitem__", _wrap_AuthCredInfoVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_append", _wrap_AuthCredInfoVector_append, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_empty", _wrap_AuthCredInfoVector_empty, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_size", _wrap_AuthCredInfoVector_size, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_clear", _wrap_AuthCredInfoVector_clear, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_swap", _wrap_AuthCredInfoVector_swap, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_get_allocator", _wrap_AuthCredInfoVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_begin", _wrap_AuthCredInfoVector_begin, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_end", _wrap_AuthCredInfoVector_end, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_rbegin", _wrap_AuthCredInfoVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_rend", _wrap_AuthCredInfoVector_rend, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_pop_back", _wrap_AuthCredInfoVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_erase", _wrap_AuthCredInfoVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_AuthCredInfoVector", _wrap_new_AuthCredInfoVector, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_push_back", _wrap_AuthCredInfoVector_push_back, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_front", _wrap_AuthCredInfoVector_front, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_back", _wrap_AuthCredInfoVector_back, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_assign", _wrap_AuthCredInfoVector_assign, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_resize", _wrap_AuthCredInfoVector_resize, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_insert", _wrap_AuthCredInfoVector_insert, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_reserve", _wrap_AuthCredInfoVector_reserve, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_capacity", _wrap_AuthCredInfoVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_AuthCredInfoVector", _wrap_delete_AuthCredInfoVector, METH_VARARGS, NULL},
	 { (char *)"AuthCredInfoVector_swigregister", AuthCredInfoVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_iterator", _wrap_SipMultipartPartVector_iterator, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___nonzero__", _wrap_SipMultipartPartVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___bool__", _wrap_SipMultipartPartVector___bool__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___len__", _wrap_SipMultipartPartVector___len__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_pop", _wrap_SipMultipartPartVector_pop, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___getslice__", _wrap_SipMultipartPartVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___setslice__", _wrap_SipMultipartPartVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___delslice__", _wrap_SipMultipartPartVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___delitem__", _wrap_SipMultipartPartVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___getitem__", _wrap_SipMultipartPartVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector___setitem__", _wrap_SipMultipartPartVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_append", _wrap_SipMultipartPartVector_append, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_empty", _wrap_SipMultipartPartVector_empty, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_size", _wrap_SipMultipartPartVector_size, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_clear", _wrap_SipMultipartPartVector_clear, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_swap", _wrap_SipMultipartPartVector_swap, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_get_allocator", _wrap_SipMultipartPartVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_begin", _wrap_SipMultipartPartVector_begin, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_end", _wrap_SipMultipartPartVector_end, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_rbegin", _wrap_SipMultipartPartVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_rend", _wrap_SipMultipartPartVector_rend, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_pop_back", _wrap_SipMultipartPartVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_erase", _wrap_SipMultipartPartVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_SipMultipartPartVector", _wrap_new_SipMultipartPartVector, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_push_back", _wrap_SipMultipartPartVector_push_back, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_front", _wrap_SipMultipartPartVector_front, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_back", _wrap_SipMultipartPartVector_back, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_assign", _wrap_SipMultipartPartVector_assign, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_resize", _wrap_SipMultipartPartVector_resize, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_insert", _wrap_SipMultipartPartVector_insert, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_reserve", _wrap_SipMultipartPartVector_reserve, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_capacity", _wrap_SipMultipartPartVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_SipMultipartPartVector", _wrap_delete_SipMultipartPartVector, METH_VARARGS, NULL},
	 { (char *)"SipMultipartPartVector_swigregister", SipMultipartPartVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_iterator", _wrap_BuddyVector_iterator, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___nonzero__", _wrap_BuddyVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___bool__", _wrap_BuddyVector___bool__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___len__", _wrap_BuddyVector___len__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_pop", _wrap_BuddyVector_pop, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___getslice__", _wrap_BuddyVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___setslice__", _wrap_BuddyVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___delslice__", _wrap_BuddyVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___delitem__", _wrap_BuddyVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___getitem__", _wrap_BuddyVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector___setitem__", _wrap_BuddyVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_append", _wrap_BuddyVector_append, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_empty", _wrap_BuddyVector_empty, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_size", _wrap_BuddyVector_size, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_clear", _wrap_BuddyVector_clear, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_swap", _wrap_BuddyVector_swap, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_get_allocator", _wrap_BuddyVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_begin", _wrap_BuddyVector_begin, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_end", _wrap_BuddyVector_end, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_rbegin", _wrap_BuddyVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_rend", _wrap_BuddyVector_rend, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_pop_back", _wrap_BuddyVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_erase", _wrap_BuddyVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_BuddyVector", _wrap_new_BuddyVector, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_push_back", _wrap_BuddyVector_push_back, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_front", _wrap_BuddyVector_front, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_back", _wrap_BuddyVector_back, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_assign", _wrap_BuddyVector_assign, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_resize", _wrap_BuddyVector_resize, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_insert", _wrap_BuddyVector_insert, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_reserve", _wrap_BuddyVector_reserve, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_capacity", _wrap_BuddyVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_BuddyVector", _wrap_delete_BuddyVector, METH_VARARGS, NULL},
	 { (char *)"BuddyVector_swigregister", BuddyVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_iterator", _wrap_AudioMediaVector_iterator, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___nonzero__", _wrap_AudioMediaVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___bool__", _wrap_AudioMediaVector___bool__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___len__", _wrap_AudioMediaVector___len__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_pop", _wrap_AudioMediaVector_pop, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___getslice__", _wrap_AudioMediaVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___setslice__", _wrap_AudioMediaVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___delslice__", _wrap_AudioMediaVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___delitem__", _wrap_AudioMediaVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___getitem__", _wrap_AudioMediaVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector___setitem__", _wrap_AudioMediaVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_append", _wrap_AudioMediaVector_append, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_empty", _wrap_AudioMediaVector_empty, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_size", _wrap_AudioMediaVector_size, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_clear", _wrap_AudioMediaVector_clear, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_swap", _wrap_AudioMediaVector_swap, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_get_allocator", _wrap_AudioMediaVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_begin", _wrap_AudioMediaVector_begin, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_end", _wrap_AudioMediaVector_end, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_rbegin", _wrap_AudioMediaVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_rend", _wrap_AudioMediaVector_rend, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_pop_back", _wrap_AudioMediaVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_erase", _wrap_AudioMediaVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_AudioMediaVector", _wrap_new_AudioMediaVector, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_push_back", _wrap_AudioMediaVector_push_back, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_front", _wrap_AudioMediaVector_front, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_back", _wrap_AudioMediaVector_back, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_assign", _wrap_AudioMediaVector_assign, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_resize", _wrap_AudioMediaVector_resize, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_insert", _wrap_AudioMediaVector_insert, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_reserve", _wrap_AudioMediaVector_reserve, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_capacity", _wrap_AudioMediaVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_AudioMediaVector", _wrap_delete_AudioMediaVector, METH_VARARGS, NULL},
	 { (char *)"AudioMediaVector_swigregister", AudioMediaVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_iterator", _wrap_ToneDescVector_iterator, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___nonzero__", _wrap_ToneDescVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___bool__", _wrap_ToneDescVector___bool__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___len__", _wrap_ToneDescVector___len__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_pop", _wrap_ToneDescVector_pop, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___getslice__", _wrap_ToneDescVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___setslice__", _wrap_ToneDescVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___delslice__", _wrap_ToneDescVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___delitem__", _wrap_ToneDescVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___getitem__", _wrap_ToneDescVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector___setitem__", _wrap_ToneDescVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_append", _wrap_ToneDescVector_append, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_empty", _wrap_ToneDescVector_empty, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_size", _wrap_ToneDescVector_size, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_clear", _wrap_ToneDescVector_clear, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_swap", _wrap_ToneDescVector_swap, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_get_allocator", _wrap_ToneDescVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_begin", _wrap_ToneDescVector_begin, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_end", _wrap_ToneDescVector_end, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_rbegin", _wrap_ToneDescVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_rend", _wrap_ToneDescVector_rend, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_pop_back", _wrap_ToneDescVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_erase", _wrap_ToneDescVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_ToneDescVector", _wrap_new_ToneDescVector, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_push_back", _wrap_ToneDescVector_push_back, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_front", _wrap_ToneDescVector_front, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_back", _wrap_ToneDescVector_back, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_assign", _wrap_ToneDescVector_assign, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_resize", _wrap_ToneDescVector_resize, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_insert", _wrap_ToneDescVector_insert, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_reserve", _wrap_ToneDescVector_reserve, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_capacity", _wrap_ToneDescVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_ToneDescVector", _wrap_delete_ToneDescVector, METH_VARARGS, NULL},
	 { (char *)"ToneDescVector_swigregister", ToneDescVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_iterator", _wrap_ToneDigitVector_iterator, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___nonzero__", _wrap_ToneDigitVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___bool__", _wrap_ToneDigitVector___bool__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___len__", _wrap_ToneDigitVector___len__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_pop", _wrap_ToneDigitVector_pop, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___getslice__", _wrap_ToneDigitVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___setslice__", _wrap_ToneDigitVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___delslice__", _wrap_ToneDigitVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___delitem__", _wrap_ToneDigitVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___getitem__", _wrap_ToneDigitVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector___setitem__", _wrap_ToneDigitVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_append", _wrap_ToneDigitVector_append, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_empty", _wrap_ToneDigitVector_empty, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_size", _wrap_ToneDigitVector_size, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_clear", _wrap_ToneDigitVector_clear, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_swap", _wrap_ToneDigitVector_swap, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_get_allocator", _wrap_ToneDigitVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_begin", _wrap_ToneDigitVector_begin, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_end", _wrap_ToneDigitVector_end, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_rbegin", _wrap_ToneDigitVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_rend", _wrap_ToneDigitVector_rend, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_pop_back", _wrap_ToneDigitVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_erase", _wrap_ToneDigitVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_ToneDigitVector", _wrap_new_ToneDigitVector, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_push_back", _wrap_ToneDigitVector_push_back, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_front", _wrap_ToneDigitVector_front, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_back", _wrap_ToneDigitVector_back, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_assign", _wrap_ToneDigitVector_assign, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_resize", _wrap_ToneDigitVector_resize, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_insert", _wrap_ToneDigitVector_insert, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_reserve", _wrap_ToneDigitVector_reserve, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_capacity", _wrap_ToneDigitVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_ToneDigitVector", _wrap_delete_ToneDigitVector, METH_VARARGS, NULL},
	 { (char *)"ToneDigitVector_swigregister", ToneDigitVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_iterator", _wrap_ToneDigitMapVector_iterator, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___nonzero__", _wrap_ToneDigitMapVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___bool__", _wrap_ToneDigitMapVector___bool__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___len__", _wrap_ToneDigitMapVector___len__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_pop", _wrap_ToneDigitMapVector_pop, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___getslice__", _wrap_ToneDigitMapVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___setslice__", _wrap_ToneDigitMapVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___delslice__", _wrap_ToneDigitMapVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___delitem__", _wrap_ToneDigitMapVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___getitem__", _wrap_ToneDigitMapVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector___setitem__", _wrap_ToneDigitMapVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_append", _wrap_ToneDigitMapVector_append, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_empty", _wrap_ToneDigitMapVector_empty, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_size", _wrap_ToneDigitMapVector_size, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_clear", _wrap_ToneDigitMapVector_clear, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_swap", _wrap_ToneDigitMapVector_swap, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_get_allocator", _wrap_ToneDigitMapVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_begin", _wrap_ToneDigitMapVector_begin, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_end", _wrap_ToneDigitMapVector_end, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_rbegin", _wrap_ToneDigitMapVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_rend", _wrap_ToneDigitMapVector_rend, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_pop_back", _wrap_ToneDigitMapVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_erase", _wrap_ToneDigitMapVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_ToneDigitMapVector", _wrap_new_ToneDigitMapVector, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_push_back", _wrap_ToneDigitMapVector_push_back, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_front", _wrap_ToneDigitMapVector_front, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_back", _wrap_ToneDigitMapVector_back, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_assign", _wrap_ToneDigitMapVector_assign, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_resize", _wrap_ToneDigitMapVector_resize, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_insert", _wrap_ToneDigitMapVector_insert, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_reserve", _wrap_ToneDigitMapVector_reserve, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_capacity", _wrap_ToneDigitMapVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_ToneDigitMapVector", _wrap_delete_ToneDigitMapVector, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapVector_swigregister", ToneDigitMapVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_iterator", _wrap_MediaFormatVector_iterator, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___nonzero__", _wrap_MediaFormatVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___bool__", _wrap_MediaFormatVector___bool__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___len__", _wrap_MediaFormatVector___len__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_pop", _wrap_MediaFormatVector_pop, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___getslice__", _wrap_MediaFormatVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___setslice__", _wrap_MediaFormatVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___delslice__", _wrap_MediaFormatVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___delitem__", _wrap_MediaFormatVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___getitem__", _wrap_MediaFormatVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector___setitem__", _wrap_MediaFormatVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_append", _wrap_MediaFormatVector_append, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_empty", _wrap_MediaFormatVector_empty, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_size", _wrap_MediaFormatVector_size, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_clear", _wrap_MediaFormatVector_clear, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_swap", _wrap_MediaFormatVector_swap, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_get_allocator", _wrap_MediaFormatVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_begin", _wrap_MediaFormatVector_begin, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_end", _wrap_MediaFormatVector_end, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_rbegin", _wrap_MediaFormatVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_rend", _wrap_MediaFormatVector_rend, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_pop_back", _wrap_MediaFormatVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_erase", _wrap_MediaFormatVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_MediaFormatVector", _wrap_new_MediaFormatVector, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_push_back", _wrap_MediaFormatVector_push_back, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_front", _wrap_MediaFormatVector_front, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_back", _wrap_MediaFormatVector_back, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_assign", _wrap_MediaFormatVector_assign, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_resize", _wrap_MediaFormatVector_resize, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_insert", _wrap_MediaFormatVector_insert, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_reserve", _wrap_MediaFormatVector_reserve, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_capacity", _wrap_MediaFormatVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_MediaFormatVector", _wrap_delete_MediaFormatVector, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVector_swigregister", MediaFormatVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_iterator", _wrap_AudioDevInfoVector_iterator, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___nonzero__", _wrap_AudioDevInfoVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___bool__", _wrap_AudioDevInfoVector___bool__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___len__", _wrap_AudioDevInfoVector___len__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_pop", _wrap_AudioDevInfoVector_pop, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___getslice__", _wrap_AudioDevInfoVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___setslice__", _wrap_AudioDevInfoVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___delslice__", _wrap_AudioDevInfoVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___delitem__", _wrap_AudioDevInfoVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___getitem__", _wrap_AudioDevInfoVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector___setitem__", _wrap_AudioDevInfoVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_append", _wrap_AudioDevInfoVector_append, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_empty", _wrap_AudioDevInfoVector_empty, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_size", _wrap_AudioDevInfoVector_size, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_clear", _wrap_AudioDevInfoVector_clear, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_swap", _wrap_AudioDevInfoVector_swap, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_get_allocator", _wrap_AudioDevInfoVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_begin", _wrap_AudioDevInfoVector_begin, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_end", _wrap_AudioDevInfoVector_end, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_rbegin", _wrap_AudioDevInfoVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_rend", _wrap_AudioDevInfoVector_rend, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_pop_back", _wrap_AudioDevInfoVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_erase", _wrap_AudioDevInfoVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_AudioDevInfoVector", _wrap_new_AudioDevInfoVector, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_push_back", _wrap_AudioDevInfoVector_push_back, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_front", _wrap_AudioDevInfoVector_front, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_back", _wrap_AudioDevInfoVector_back, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_assign", _wrap_AudioDevInfoVector_assign, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_resize", _wrap_AudioDevInfoVector_resize, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_insert", _wrap_AudioDevInfoVector_insert, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_reserve", _wrap_AudioDevInfoVector_reserve, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_capacity", _wrap_AudioDevInfoVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_AudioDevInfoVector", _wrap_delete_AudioDevInfoVector, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfoVector_swigregister", AudioDevInfoVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_iterator", _wrap_CodecInfoVector_iterator, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___nonzero__", _wrap_CodecInfoVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___bool__", _wrap_CodecInfoVector___bool__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___len__", _wrap_CodecInfoVector___len__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_pop", _wrap_CodecInfoVector_pop, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___getslice__", _wrap_CodecInfoVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___setslice__", _wrap_CodecInfoVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___delslice__", _wrap_CodecInfoVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___delitem__", _wrap_CodecInfoVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___getitem__", _wrap_CodecInfoVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector___setitem__", _wrap_CodecInfoVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_append", _wrap_CodecInfoVector_append, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_empty", _wrap_CodecInfoVector_empty, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_size", _wrap_CodecInfoVector_size, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_clear", _wrap_CodecInfoVector_clear, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_swap", _wrap_CodecInfoVector_swap, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_get_allocator", _wrap_CodecInfoVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_begin", _wrap_CodecInfoVector_begin, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_end", _wrap_CodecInfoVector_end, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_rbegin", _wrap_CodecInfoVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_rend", _wrap_CodecInfoVector_rend, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_pop_back", _wrap_CodecInfoVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_erase", _wrap_CodecInfoVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_CodecInfoVector", _wrap_new_CodecInfoVector, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_push_back", _wrap_CodecInfoVector_push_back, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_front", _wrap_CodecInfoVector_front, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_back", _wrap_CodecInfoVector_back, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_assign", _wrap_CodecInfoVector_assign, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_resize", _wrap_CodecInfoVector_resize, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_insert", _wrap_CodecInfoVector_insert, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_reserve", _wrap_CodecInfoVector_reserve, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_capacity", _wrap_CodecInfoVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_CodecInfoVector", _wrap_delete_CodecInfoVector, METH_VARARGS, NULL},
	 { (char *)"CodecInfoVector_swigregister", CodecInfoVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaFormat_id_set", _wrap_MediaFormat_id_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormat_id_get", _wrap_MediaFormat_id_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormat_type_set", _wrap_MediaFormat_type_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormat_type_get", _wrap_MediaFormat_type_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaFormat", _wrap_new_MediaFormat, METH_VARARGS, NULL},
	 { (char *)"delete_MediaFormat", _wrap_delete_MediaFormat, METH_VARARGS, NULL},
	 { (char *)"MediaFormat_swigregister", MediaFormat_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_clockRate_set", _wrap_MediaFormatAudio_clockRate_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_clockRate_get", _wrap_MediaFormatAudio_clockRate_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_channelCount_set", _wrap_MediaFormatAudio_channelCount_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_channelCount_get", _wrap_MediaFormatAudio_channelCount_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_frameTimeUsec_set", _wrap_MediaFormatAudio_frameTimeUsec_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_frameTimeUsec_get", _wrap_MediaFormatAudio_frameTimeUsec_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_bitsPerSample_set", _wrap_MediaFormatAudio_bitsPerSample_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_bitsPerSample_get", _wrap_MediaFormatAudio_bitsPerSample_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_avgBps_set", _wrap_MediaFormatAudio_avgBps_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_avgBps_get", _wrap_MediaFormatAudio_avgBps_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_maxBps_set", _wrap_MediaFormatAudio_maxBps_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_maxBps_get", _wrap_MediaFormatAudio_maxBps_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaFormatAudio", _wrap_new_MediaFormatAudio, METH_VARARGS, NULL},
	 { (char *)"delete_MediaFormatAudio", _wrap_delete_MediaFormatAudio, METH_VARARGS, NULL},
	 { (char *)"MediaFormatAudio_swigregister", MediaFormatAudio_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_width_set", _wrap_MediaFormatVideo_width_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_width_get", _wrap_MediaFormatVideo_width_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_height_set", _wrap_MediaFormatVideo_height_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_height_get", _wrap_MediaFormatVideo_height_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_fpsNum_set", _wrap_MediaFormatVideo_fpsNum_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_fpsNum_get", _wrap_MediaFormatVideo_fpsNum_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_fpsDenum_set", _wrap_MediaFormatVideo_fpsDenum_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_fpsDenum_get", _wrap_MediaFormatVideo_fpsDenum_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_avgBps_set", _wrap_MediaFormatVideo_avgBps_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_avgBps_get", _wrap_MediaFormatVideo_avgBps_get, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_maxBps_set", _wrap_MediaFormatVideo_maxBps_set, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_maxBps_get", _wrap_MediaFormatVideo_maxBps_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaFormatVideo", _wrap_new_MediaFormatVideo, METH_VARARGS, NULL},
	 { (char *)"delete_MediaFormatVideo", _wrap_delete_MediaFormatVideo, METH_VARARGS, NULL},
	 { (char *)"MediaFormatVideo_swigregister", MediaFormatVideo_swigregister, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_portId_set", _wrap_ConfPortInfo_portId_set, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_portId_get", _wrap_ConfPortInfo_portId_get, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_name_set", _wrap_ConfPortInfo_name_set, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_name_get", _wrap_ConfPortInfo_name_get, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_format_set", _wrap_ConfPortInfo_format_set, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_format_get", _wrap_ConfPortInfo_format_get, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_txLevelAdj_set", _wrap_ConfPortInfo_txLevelAdj_set, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_txLevelAdj_get", _wrap_ConfPortInfo_txLevelAdj_get, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_rxLevelAdj_set", _wrap_ConfPortInfo_rxLevelAdj_set, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_rxLevelAdj_get", _wrap_ConfPortInfo_rxLevelAdj_get, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_listeners_set", _wrap_ConfPortInfo_listeners_set, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_listeners_get", _wrap_ConfPortInfo_listeners_get, METH_VARARGS, NULL},
	 { (char *)"new_ConfPortInfo", _wrap_new_ConfPortInfo, METH_VARARGS, NULL},
	 { (char *)"delete_ConfPortInfo", _wrap_delete_ConfPortInfo, METH_VARARGS, NULL},
	 { (char *)"ConfPortInfo_swigregister", ConfPortInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_Media", _wrap_delete_Media, METH_VARARGS, NULL},
	 { (char *)"Media_getType", _wrap_Media_getType, METH_VARARGS, NULL},
	 { (char *)"Media_swigregister", Media_swigregister, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_getPortInfo", _wrap_AudioMedia_getPortInfo, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_getPortId", _wrap_AudioMedia_getPortId, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_getPortInfoFromId", _wrap_AudioMedia_getPortInfoFromId, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_startTransmit", _wrap_AudioMedia_startTransmit, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_stopTransmit", _wrap_AudioMedia_stopTransmit, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_adjustRxLevel", _wrap_AudioMedia_adjustRxLevel, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_adjustTxLevel", _wrap_AudioMedia_adjustTxLevel, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_getRxLevel", _wrap_AudioMedia_getRxLevel, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_getTxLevel", _wrap_AudioMedia_getTxLevel, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_typecastFromMedia", _wrap_AudioMedia_typecastFromMedia, METH_VARARGS, NULL},
	 { (char *)"delete_AudioMedia", _wrap_delete_AudioMedia, METH_VARARGS, NULL},
	 { (char *)"AudioMedia_swigregister", AudioMedia_swigregister, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_formatId_set", _wrap_AudioMediaPlayerInfo_formatId_set, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_formatId_get", _wrap_AudioMediaPlayerInfo_formatId_get, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_payloadBitsPerSample_set", _wrap_AudioMediaPlayerInfo_payloadBitsPerSample_set, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_payloadBitsPerSample_get", _wrap_AudioMediaPlayerInfo_payloadBitsPerSample_get, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_sizeBytes_set", _wrap_AudioMediaPlayerInfo_sizeBytes_set, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_sizeBytes_get", _wrap_AudioMediaPlayerInfo_sizeBytes_get, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_sizeSamples_set", _wrap_AudioMediaPlayerInfo_sizeSamples_set, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_sizeSamples_get", _wrap_AudioMediaPlayerInfo_sizeSamples_get, METH_VARARGS, NULL},
	 { (char *)"new_AudioMediaPlayerInfo", _wrap_new_AudioMediaPlayerInfo, METH_VARARGS, NULL},
	 { (char *)"delete_AudioMediaPlayerInfo", _wrap_delete_AudioMediaPlayerInfo, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayerInfo_swigregister", AudioMediaPlayerInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AudioMediaPlayer", _wrap_new_AudioMediaPlayer, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_createPlayer", _wrap_AudioMediaPlayer_createPlayer, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_createPlaylist", _wrap_AudioMediaPlayer_createPlaylist, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_getInfo", _wrap_AudioMediaPlayer_getInfo, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_getPos", _wrap_AudioMediaPlayer_getPos, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_setPos", _wrap_AudioMediaPlayer_setPos, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_typecastFromAudioMedia", _wrap_AudioMediaPlayer_typecastFromAudioMedia, METH_VARARGS, NULL},
	 { (char *)"delete_AudioMediaPlayer", _wrap_delete_AudioMediaPlayer, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_onEof", _wrap_AudioMediaPlayer_onEof, METH_VARARGS, NULL},
	 { (char *)"AudioMediaPlayer_swigregister", AudioMediaPlayer_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_AudioMediaRecorder", _wrap_new_AudioMediaRecorder, METH_VARARGS, NULL},
	 { (char *)"AudioMediaRecorder_createRecorder", _wrap_AudioMediaRecorder_createRecorder, METH_VARARGS, NULL},
	 { (char *)"AudioMediaRecorder_typecastFromAudioMedia", _wrap_AudioMediaRecorder_typecastFromAudioMedia, METH_VARARGS, NULL},
	 { (char *)"delete_AudioMediaRecorder", _wrap_delete_AudioMediaRecorder, METH_VARARGS, NULL},
	 { (char *)"AudioMediaRecorder_swigregister", AudioMediaRecorder_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ToneDesc", _wrap_new_ToneDesc, METH_VARARGS, NULL},
	 { (char *)"delete_ToneDesc", _wrap_delete_ToneDesc, METH_VARARGS, NULL},
	 { (char *)"ToneDesc_swigregister", ToneDesc_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ToneDigit", _wrap_new_ToneDigit, METH_VARARGS, NULL},
	 { (char *)"delete_ToneDigit", _wrap_delete_ToneDigit, METH_VARARGS, NULL},
	 { (char *)"ToneDigit_swigregister", ToneDigit_swigregister, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_digit_set", _wrap_ToneDigitMapDigit_digit_set, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_digit_get", _wrap_ToneDigitMapDigit_digit_get, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_freq1_set", _wrap_ToneDigitMapDigit_freq1_set, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_freq1_get", _wrap_ToneDigitMapDigit_freq1_get, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_freq2_set", _wrap_ToneDigitMapDigit_freq2_set, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_freq2_get", _wrap_ToneDigitMapDigit_freq2_get, METH_VARARGS, NULL},
	 { (char *)"new_ToneDigitMapDigit", _wrap_new_ToneDigitMapDigit, METH_VARARGS, NULL},
	 { (char *)"delete_ToneDigitMapDigit", _wrap_delete_ToneDigitMapDigit, METH_VARARGS, NULL},
	 { (char *)"ToneDigitMapDigit_swigregister", ToneDigitMapDigit_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ToneGenerator", _wrap_new_ToneGenerator, METH_VARARGS, NULL},
	 { (char *)"delete_ToneGenerator", _wrap_delete_ToneGenerator, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_createToneGenerator", _wrap_ToneGenerator_createToneGenerator, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_isBusy", _wrap_ToneGenerator_isBusy, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_stop", _wrap_ToneGenerator_stop, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_rewind", _wrap_ToneGenerator_rewind, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_play", _wrap_ToneGenerator_play, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_playDigits", _wrap_ToneGenerator_playDigits, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_getDigitMap", _wrap_ToneGenerator_getDigitMap, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_setDigitMap", _wrap_ToneGenerator_setDigitMap, METH_VARARGS, NULL},
	 { (char *)"ToneGenerator_swigregister", ToneGenerator_swigregister, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_name_set", _wrap_AudioDevInfo_name_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_name_get", _wrap_AudioDevInfo_name_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_inputCount_set", _wrap_AudioDevInfo_inputCount_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_inputCount_get", _wrap_AudioDevInfo_inputCount_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_outputCount_set", _wrap_AudioDevInfo_outputCount_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_outputCount_get", _wrap_AudioDevInfo_outputCount_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_defaultSamplesPerSec_set", _wrap_AudioDevInfo_defaultSamplesPerSec_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_defaultSamplesPerSec_get", _wrap_AudioDevInfo_defaultSamplesPerSec_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_driver_set", _wrap_AudioDevInfo_driver_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_driver_get", _wrap_AudioDevInfo_driver_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_caps_set", _wrap_AudioDevInfo_caps_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_caps_get", _wrap_AudioDevInfo_caps_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_routes_set", _wrap_AudioDevInfo_routes_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_routes_get", _wrap_AudioDevInfo_routes_get, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_extFmt_set", _wrap_AudioDevInfo_extFmt_set, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_extFmt_get", _wrap_AudioDevInfo_extFmt_get, METH_VARARGS, NULL},
	 { (char *)"delete_AudioDevInfo", _wrap_delete_AudioDevInfo, METH_VARARGS, NULL},
	 { (char *)"new_AudioDevInfo", _wrap_new_AudioDevInfo, METH_VARARGS, NULL},
	 { (char *)"AudioDevInfo_swigregister", AudioDevInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getCaptureDev", _wrap_AudDevManager_getCaptureDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getCaptureDevMedia", _wrap_AudDevManager_getCaptureDevMedia, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getPlaybackDev", _wrap_AudDevManager_getPlaybackDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getPlaybackDevMedia", _wrap_AudDevManager_getPlaybackDevMedia, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setCaptureDev", _wrap_AudDevManager_setCaptureDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setPlaybackDev", _wrap_AudDevManager_setPlaybackDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_enumDev", _wrap_AudDevManager_enumDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setNullDev", _wrap_AudDevManager_setNullDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setNoDev", _wrap_AudDevManager_setNoDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setEcOptions", _wrap_AudDevManager_setEcOptions, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getEcTail", _wrap_AudDevManager_getEcTail, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_sndIsActive", _wrap_AudDevManager_sndIsActive, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_refreshDevs", _wrap_AudDevManager_refreshDevs, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getDevCount", _wrap_AudDevManager_getDevCount, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getDevInfo", _wrap_AudDevManager_getDevInfo, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_lookupDev", _wrap_AudDevManager_lookupDev, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_capName", _wrap_AudDevManager_capName, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setExtFormat", _wrap_AudDevManager_setExtFormat, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getExtFormat", _wrap_AudDevManager_getExtFormat, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setInputLatency", _wrap_AudDevManager_setInputLatency, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getInputLatency", _wrap_AudDevManager_getInputLatency, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setOutputLatency", _wrap_AudDevManager_setOutputLatency, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getOutputLatency", _wrap_AudDevManager_getOutputLatency, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setInputVolume", _wrap_AudDevManager_setInputVolume, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getInputVolume", _wrap_AudDevManager_getInputVolume, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setOutputVolume", _wrap_AudDevManager_setOutputVolume, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getOutputVolume", _wrap_AudDevManager_getOutputVolume, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getInputSignal", _wrap_AudDevManager_getInputSignal, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getOutputSignal", _wrap_AudDevManager_getOutputSignal, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setInputRoute", _wrap_AudDevManager_setInputRoute, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getInputRoute", _wrap_AudDevManager_getInputRoute, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setOutputRoute", _wrap_AudDevManager_setOutputRoute, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getOutputRoute", _wrap_AudDevManager_getOutputRoute, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setVad", _wrap_AudDevManager_setVad, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getVad", _wrap_AudDevManager_getVad, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setCng", _wrap_AudDevManager_setCng, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getCng", _wrap_AudDevManager_getCng, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_setPlc", _wrap_AudDevManager_setPlc, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_getPlc", _wrap_AudDevManager_getPlc, METH_VARARGS, NULL},
	 { (char *)"AudDevManager_swigregister", AudDevManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_codecId_set", _wrap_CodecInfo_codecId_set, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_codecId_get", _wrap_CodecInfo_codecId_get, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_priority_set", _wrap_CodecInfo_priority_set, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_priority_get", _wrap_CodecInfo_priority_get, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_desc_set", _wrap_CodecInfo_desc_set, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_desc_get", _wrap_CodecInfo_desc_get, METH_VARARGS, NULL},
	 { (char *)"new_CodecInfo", _wrap_new_CodecInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CodecInfo", _wrap_delete_CodecInfo, METH_VARARGS, NULL},
	 { (char *)"CodecInfo_swigregister", CodecInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_status_set", _wrap_PresenceStatus_status_set, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_status_get", _wrap_PresenceStatus_status_get, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_statusText_set", _wrap_PresenceStatus_statusText_set, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_statusText_get", _wrap_PresenceStatus_statusText_get, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_activity_set", _wrap_PresenceStatus_activity_set, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_activity_get", _wrap_PresenceStatus_activity_get, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_note_set", _wrap_PresenceStatus_note_set, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_note_get", _wrap_PresenceStatus_note_get, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_rpidId_set", _wrap_PresenceStatus_rpidId_set, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_rpidId_get", _wrap_PresenceStatus_rpidId_get, METH_VARARGS, NULL},
	 { (char *)"new_PresenceStatus", _wrap_new_PresenceStatus, METH_VARARGS, NULL},
	 { (char *)"delete_PresenceStatus", _wrap_delete_PresenceStatus, METH_VARARGS, NULL},
	 { (char *)"PresenceStatus_swigregister", PresenceStatus_swigregister, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_uri_set", _wrap_BuddyConfig_uri_set, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_uri_get", _wrap_BuddyConfig_uri_get, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_subscribe_set", _wrap_BuddyConfig_subscribe_set, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_subscribe_get", _wrap_BuddyConfig_subscribe_get, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_readObject", _wrap_BuddyConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_writeObject", _wrap_BuddyConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_BuddyConfig", _wrap_new_BuddyConfig, METH_VARARGS, NULL},
	 { (char *)"delete_BuddyConfig", _wrap_delete_BuddyConfig, METH_VARARGS, NULL},
	 { (char *)"BuddyConfig_swigregister", BuddyConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_uri_set", _wrap_BuddyInfo_uri_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_uri_get", _wrap_BuddyInfo_uri_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_contact_set", _wrap_BuddyInfo_contact_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_contact_get", _wrap_BuddyInfo_contact_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_presMonitorEnabled_set", _wrap_BuddyInfo_presMonitorEnabled_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_presMonitorEnabled_get", _wrap_BuddyInfo_presMonitorEnabled_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subState_set", _wrap_BuddyInfo_subState_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subState_get", _wrap_BuddyInfo_subState_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subStateName_set", _wrap_BuddyInfo_subStateName_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subStateName_get", _wrap_BuddyInfo_subStateName_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subTermCode_set", _wrap_BuddyInfo_subTermCode_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subTermCode_get", _wrap_BuddyInfo_subTermCode_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subTermReason_set", _wrap_BuddyInfo_subTermReason_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_subTermReason_get", _wrap_BuddyInfo_subTermReason_get, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_presStatus_set", _wrap_BuddyInfo_presStatus_set, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_presStatus_get", _wrap_BuddyInfo_presStatus_get, METH_VARARGS, NULL},
	 { (char *)"new_BuddyInfo", _wrap_new_BuddyInfo, METH_VARARGS, NULL},
	 { (char *)"delete_BuddyInfo", _wrap_delete_BuddyInfo, METH_VARARGS, NULL},
	 { (char *)"BuddyInfo_swigregister", BuddyInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Buddy", _wrap_new_Buddy, METH_VARARGS, NULL},
	 { (char *)"delete_Buddy", _wrap_delete_Buddy, METH_VARARGS, NULL},
	 { (char *)"Buddy_create", _wrap_Buddy_create, METH_VARARGS, NULL},
	 { (char *)"Buddy_isValid", _wrap_Buddy_isValid, METH_VARARGS, NULL},
	 { (char *)"Buddy_getInfo", _wrap_Buddy_getInfo, METH_VARARGS, NULL},
	 { (char *)"Buddy_subscribePresence", _wrap_Buddy_subscribePresence, METH_VARARGS, NULL},
	 { (char *)"Buddy_updatePresence", _wrap_Buddy_updatePresence, METH_VARARGS, NULL},
	 { (char *)"Buddy_sendInstantMessage", _wrap_Buddy_sendInstantMessage, METH_VARARGS, NULL},
	 { (char *)"Buddy_sendTypingIndication", _wrap_Buddy_sendTypingIndication, METH_VARARGS, NULL},
	 { (char *)"Buddy_onBuddyState", _wrap_Buddy_onBuddyState, METH_VARARGS, NULL},
	 { (char *)"disown_Buddy", _wrap_disown_Buddy, METH_VARARGS, NULL},
	 { (char *)"Buddy_swigregister", Buddy_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_registrarUri_set", _wrap_AccountRegConfig_registrarUri_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_registrarUri_get", _wrap_AccountRegConfig_registrarUri_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_registerOnAdd_set", _wrap_AccountRegConfig_registerOnAdd_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_registerOnAdd_get", _wrap_AccountRegConfig_registerOnAdd_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_headers_set", _wrap_AccountRegConfig_headers_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_headers_get", _wrap_AccountRegConfig_headers_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_timeoutSec_set", _wrap_AccountRegConfig_timeoutSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_timeoutSec_get", _wrap_AccountRegConfig_timeoutSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_retryIntervalSec_set", _wrap_AccountRegConfig_retryIntervalSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_retryIntervalSec_get", _wrap_AccountRegConfig_retryIntervalSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_firstRetryIntervalSec_set", _wrap_AccountRegConfig_firstRetryIntervalSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_firstRetryIntervalSec_get", _wrap_AccountRegConfig_firstRetryIntervalSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_delayBeforeRefreshSec_set", _wrap_AccountRegConfig_delayBeforeRefreshSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_delayBeforeRefreshSec_get", _wrap_AccountRegConfig_delayBeforeRefreshSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_dropCallsOnFail_set", _wrap_AccountRegConfig_dropCallsOnFail_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_dropCallsOnFail_get", _wrap_AccountRegConfig_dropCallsOnFail_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_unregWaitSec_set", _wrap_AccountRegConfig_unregWaitSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_unregWaitSec_get", _wrap_AccountRegConfig_unregWaitSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_proxyUse_set", _wrap_AccountRegConfig_proxyUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_proxyUse_get", _wrap_AccountRegConfig_proxyUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_readObject", _wrap_AccountRegConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_writeObject", _wrap_AccountRegConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountRegConfig", _wrap_new_AccountRegConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountRegConfig", _wrap_delete_AccountRegConfig, METH_VARARGS, NULL},
	 { (char *)"AccountRegConfig_swigregister", AccountRegConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_authCreds_set", _wrap_AccountSipConfig_authCreds_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_authCreds_get", _wrap_AccountSipConfig_authCreds_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_proxies_set", _wrap_AccountSipConfig_proxies_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_proxies_get", _wrap_AccountSipConfig_proxies_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_contactForced_set", _wrap_AccountSipConfig_contactForced_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_contactForced_get", _wrap_AccountSipConfig_contactForced_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_contactParams_set", _wrap_AccountSipConfig_contactParams_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_contactParams_get", _wrap_AccountSipConfig_contactParams_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_contactUriParams_set", _wrap_AccountSipConfig_contactUriParams_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_contactUriParams_get", _wrap_AccountSipConfig_contactUriParams_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_authInitialEmpty_set", _wrap_AccountSipConfig_authInitialEmpty_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_authInitialEmpty_get", _wrap_AccountSipConfig_authInitialEmpty_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_authInitialAlgorithm_set", _wrap_AccountSipConfig_authInitialAlgorithm_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_authInitialAlgorithm_get", _wrap_AccountSipConfig_authInitialAlgorithm_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_transportId_set", _wrap_AccountSipConfig_transportId_set, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_transportId_get", _wrap_AccountSipConfig_transportId_get, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_readObject", _wrap_AccountSipConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_writeObject", _wrap_AccountSipConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountSipConfig", _wrap_new_AccountSipConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountSipConfig", _wrap_delete_AccountSipConfig, METH_VARARGS, NULL},
	 { (char *)"AccountSipConfig_swigregister", AccountSipConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_holdType_set", _wrap_AccountCallConfig_holdType_set, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_holdType_get", _wrap_AccountCallConfig_holdType_get, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_prackUse_set", _wrap_AccountCallConfig_prackUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_prackUse_get", _wrap_AccountCallConfig_prackUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_timerUse_set", _wrap_AccountCallConfig_timerUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_timerUse_get", _wrap_AccountCallConfig_timerUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_timerMinSESec_set", _wrap_AccountCallConfig_timerMinSESec_set, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_timerMinSESec_get", _wrap_AccountCallConfig_timerMinSESec_get, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_timerSessExpiresSec_set", _wrap_AccountCallConfig_timerSessExpiresSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_timerSessExpiresSec_get", _wrap_AccountCallConfig_timerSessExpiresSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_readObject", _wrap_AccountCallConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_writeObject", _wrap_AccountCallConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountCallConfig", _wrap_new_AccountCallConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountCallConfig", _wrap_delete_AccountCallConfig, METH_VARARGS, NULL},
	 { (char *)"AccountCallConfig_swigregister", AccountCallConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_headers_set", _wrap_AccountPresConfig_headers_set, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_headers_get", _wrap_AccountPresConfig_headers_get, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_publishEnabled_set", _wrap_AccountPresConfig_publishEnabled_set, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_publishEnabled_get", _wrap_AccountPresConfig_publishEnabled_get, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_publishQueue_set", _wrap_AccountPresConfig_publishQueue_set, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_publishQueue_get", _wrap_AccountPresConfig_publishQueue_get, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_publishShutdownWaitMsec_set", _wrap_AccountPresConfig_publishShutdownWaitMsec_set, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_publishShutdownWaitMsec_get", _wrap_AccountPresConfig_publishShutdownWaitMsec_get, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_pidfTupleId_set", _wrap_AccountPresConfig_pidfTupleId_set, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_pidfTupleId_get", _wrap_AccountPresConfig_pidfTupleId_get, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_readObject", _wrap_AccountPresConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_writeObject", _wrap_AccountPresConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountPresConfig", _wrap_new_AccountPresConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountPresConfig", _wrap_delete_AccountPresConfig, METH_VARARGS, NULL},
	 { (char *)"AccountPresConfig_swigregister", AccountPresConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_enabled_set", _wrap_AccountMwiConfig_enabled_set, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_enabled_get", _wrap_AccountMwiConfig_enabled_get, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_expirationSec_set", _wrap_AccountMwiConfig_expirationSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_expirationSec_get", _wrap_AccountMwiConfig_expirationSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_readObject", _wrap_AccountMwiConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_writeObject", _wrap_AccountMwiConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountMwiConfig", _wrap_new_AccountMwiConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountMwiConfig", _wrap_delete_AccountMwiConfig, METH_VARARGS, NULL},
	 { (char *)"AccountMwiConfig_swigregister", AccountMwiConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipStunUse_set", _wrap_AccountNatConfig_sipStunUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipStunUse_get", _wrap_AccountNatConfig_sipStunUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_mediaStunUse_set", _wrap_AccountNatConfig_mediaStunUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_mediaStunUse_get", _wrap_AccountNatConfig_mediaStunUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceEnabled_set", _wrap_AccountNatConfig_iceEnabled_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceEnabled_get", _wrap_AccountNatConfig_iceEnabled_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceMaxHostCands_set", _wrap_AccountNatConfig_iceMaxHostCands_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceMaxHostCands_get", _wrap_AccountNatConfig_iceMaxHostCands_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceAggressiveNomination_set", _wrap_AccountNatConfig_iceAggressiveNomination_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceAggressiveNomination_get", _wrap_AccountNatConfig_iceAggressiveNomination_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceNominatedCheckDelayMsec_set", _wrap_AccountNatConfig_iceNominatedCheckDelayMsec_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceNominatedCheckDelayMsec_get", _wrap_AccountNatConfig_iceNominatedCheckDelayMsec_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceWaitNominationTimeoutMsec_set", _wrap_AccountNatConfig_iceWaitNominationTimeoutMsec_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceWaitNominationTimeoutMsec_get", _wrap_AccountNatConfig_iceWaitNominationTimeoutMsec_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceNoRtcp_set", _wrap_AccountNatConfig_iceNoRtcp_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceNoRtcp_get", _wrap_AccountNatConfig_iceNoRtcp_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceAlwaysUpdate_set", _wrap_AccountNatConfig_iceAlwaysUpdate_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_iceAlwaysUpdate_get", _wrap_AccountNatConfig_iceAlwaysUpdate_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnEnabled_set", _wrap_AccountNatConfig_turnEnabled_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnEnabled_get", _wrap_AccountNatConfig_turnEnabled_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnServer_set", _wrap_AccountNatConfig_turnServer_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnServer_get", _wrap_AccountNatConfig_turnServer_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnConnType_set", _wrap_AccountNatConfig_turnConnType_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnConnType_get", _wrap_AccountNatConfig_turnConnType_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnUserName_set", _wrap_AccountNatConfig_turnUserName_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnUserName_get", _wrap_AccountNatConfig_turnUserName_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnPasswordType_set", _wrap_AccountNatConfig_turnPasswordType_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnPasswordType_get", _wrap_AccountNatConfig_turnPasswordType_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnPassword_set", _wrap_AccountNatConfig_turnPassword_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_turnPassword_get", _wrap_AccountNatConfig_turnPassword_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_contactRewriteUse_set", _wrap_AccountNatConfig_contactRewriteUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_contactRewriteUse_get", _wrap_AccountNatConfig_contactRewriteUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_contactRewriteMethod_set", _wrap_AccountNatConfig_contactRewriteMethod_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_contactRewriteMethod_get", _wrap_AccountNatConfig_contactRewriteMethod_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_contactUseSrcPort_set", _wrap_AccountNatConfig_contactUseSrcPort_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_contactUseSrcPort_get", _wrap_AccountNatConfig_contactUseSrcPort_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_viaRewriteUse_set", _wrap_AccountNatConfig_viaRewriteUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_viaRewriteUse_get", _wrap_AccountNatConfig_viaRewriteUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sdpNatRewriteUse_set", _wrap_AccountNatConfig_sdpNatRewriteUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sdpNatRewriteUse_get", _wrap_AccountNatConfig_sdpNatRewriteUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipOutboundUse_set", _wrap_AccountNatConfig_sipOutboundUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipOutboundUse_get", _wrap_AccountNatConfig_sipOutboundUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipOutboundInstanceId_set", _wrap_AccountNatConfig_sipOutboundInstanceId_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipOutboundInstanceId_get", _wrap_AccountNatConfig_sipOutboundInstanceId_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipOutboundRegId_set", _wrap_AccountNatConfig_sipOutboundRegId_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_sipOutboundRegId_get", _wrap_AccountNatConfig_sipOutboundRegId_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_udpKaIntervalSec_set", _wrap_AccountNatConfig_udpKaIntervalSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_udpKaIntervalSec_get", _wrap_AccountNatConfig_udpKaIntervalSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_udpKaData_set", _wrap_AccountNatConfig_udpKaData_set, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_udpKaData_get", _wrap_AccountNatConfig_udpKaData_get, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_readObject", _wrap_AccountNatConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_writeObject", _wrap_AccountNatConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountNatConfig", _wrap_new_AccountNatConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountNatConfig", _wrap_delete_AccountNatConfig, METH_VARARGS, NULL},
	 { (char *)"AccountNatConfig_swigregister", AccountNatConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_transportConfig_set", _wrap_AccountMediaConfig_transportConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_transportConfig_get", _wrap_AccountMediaConfig_transportConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_lockCodecEnabled_set", _wrap_AccountMediaConfig_lockCodecEnabled_set, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_lockCodecEnabled_get", _wrap_AccountMediaConfig_lockCodecEnabled_get, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_streamKaEnabled_set", _wrap_AccountMediaConfig_streamKaEnabled_set, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_streamKaEnabled_get", _wrap_AccountMediaConfig_streamKaEnabled_get, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_srtpUse_set", _wrap_AccountMediaConfig_srtpUse_set, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_srtpUse_get", _wrap_AccountMediaConfig_srtpUse_get, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_srtpSecureSignaling_set", _wrap_AccountMediaConfig_srtpSecureSignaling_set, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_srtpSecureSignaling_get", _wrap_AccountMediaConfig_srtpSecureSignaling_get, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_ipv6Use_set", _wrap_AccountMediaConfig_ipv6Use_set, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_ipv6Use_get", _wrap_AccountMediaConfig_ipv6Use_get, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_readObject", _wrap_AccountMediaConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_writeObject", _wrap_AccountMediaConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountMediaConfig", _wrap_new_AccountMediaConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountMediaConfig", _wrap_delete_AccountMediaConfig, METH_VARARGS, NULL},
	 { (char *)"AccountMediaConfig_swigregister", AccountMediaConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_autoShowIncoming_set", _wrap_AccountVideoConfig_autoShowIncoming_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_autoShowIncoming_get", _wrap_AccountVideoConfig_autoShowIncoming_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_autoTransmitOutgoing_set", _wrap_AccountVideoConfig_autoTransmitOutgoing_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_autoTransmitOutgoing_get", _wrap_AccountVideoConfig_autoTransmitOutgoing_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_windowFlags_set", _wrap_AccountVideoConfig_windowFlags_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_windowFlags_get", _wrap_AccountVideoConfig_windowFlags_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_defaultCaptureDevice_set", _wrap_AccountVideoConfig_defaultCaptureDevice_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_defaultCaptureDevice_get", _wrap_AccountVideoConfig_defaultCaptureDevice_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_defaultRenderDevice_set", _wrap_AccountVideoConfig_defaultRenderDevice_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_defaultRenderDevice_get", _wrap_AccountVideoConfig_defaultRenderDevice_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_rateControlMethod_set", _wrap_AccountVideoConfig_rateControlMethod_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_rateControlMethod_get", _wrap_AccountVideoConfig_rateControlMethod_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_rateControlBandwidth_set", _wrap_AccountVideoConfig_rateControlBandwidth_set, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_rateControlBandwidth_get", _wrap_AccountVideoConfig_rateControlBandwidth_get, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_readObject", _wrap_AccountVideoConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_writeObject", _wrap_AccountVideoConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_AccountVideoConfig", _wrap_new_AccountVideoConfig, METH_VARARGS, NULL},
	 { (char *)"delete_AccountVideoConfig", _wrap_delete_AccountVideoConfig, METH_VARARGS, NULL},
	 { (char *)"AccountVideoConfig_swigregister", AccountVideoConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_priority_set", _wrap_AccountConfig_priority_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_priority_get", _wrap_AccountConfig_priority_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_idUri_set", _wrap_AccountConfig_idUri_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_idUri_get", _wrap_AccountConfig_idUri_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_regConfig_set", _wrap_AccountConfig_regConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_regConfig_get", _wrap_AccountConfig_regConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_sipConfig_set", _wrap_AccountConfig_sipConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_sipConfig_get", _wrap_AccountConfig_sipConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_callConfig_set", _wrap_AccountConfig_callConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_callConfig_get", _wrap_AccountConfig_callConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_presConfig_set", _wrap_AccountConfig_presConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_presConfig_get", _wrap_AccountConfig_presConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_mwiConfig_set", _wrap_AccountConfig_mwiConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_mwiConfig_get", _wrap_AccountConfig_mwiConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_natConfig_set", _wrap_AccountConfig_natConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_natConfig_get", _wrap_AccountConfig_natConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_mediaConfig_set", _wrap_AccountConfig_mediaConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_mediaConfig_get", _wrap_AccountConfig_mediaConfig_get, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_videoConfig_set", _wrap_AccountConfig_videoConfig_set, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_videoConfig_get", _wrap_AccountConfig_videoConfig_get, METH_VARARGS, NULL},
	 { (char *)"new_AccountConfig", _wrap_new_AccountConfig, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_readObject", _wrap_AccountConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_writeObject", _wrap_AccountConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_AccountConfig", _wrap_delete_AccountConfig, METH_VARARGS, NULL},
	 { (char *)"AccountConfig_swigregister", AccountConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_id_set", _wrap_AccountInfo_id_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_id_get", _wrap_AccountInfo_id_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_isDefault_set", _wrap_AccountInfo_isDefault_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_isDefault_get", _wrap_AccountInfo_isDefault_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_uri_set", _wrap_AccountInfo_uri_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_uri_get", _wrap_AccountInfo_uri_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regIsConfigured_set", _wrap_AccountInfo_regIsConfigured_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regIsConfigured_get", _wrap_AccountInfo_regIsConfigured_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regIsActive_set", _wrap_AccountInfo_regIsActive_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regIsActive_get", _wrap_AccountInfo_regIsActive_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regExpiresSec_set", _wrap_AccountInfo_regExpiresSec_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regExpiresSec_get", _wrap_AccountInfo_regExpiresSec_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regStatus_set", _wrap_AccountInfo_regStatus_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regStatus_get", _wrap_AccountInfo_regStatus_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regStatusText_set", _wrap_AccountInfo_regStatusText_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regStatusText_get", _wrap_AccountInfo_regStatusText_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regLastErr_set", _wrap_AccountInfo_regLastErr_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_regLastErr_get", _wrap_AccountInfo_regLastErr_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_onlineStatus_set", _wrap_AccountInfo_onlineStatus_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_onlineStatus_get", _wrap_AccountInfo_onlineStatus_get, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_onlineStatusText_set", _wrap_AccountInfo_onlineStatusText_set, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_onlineStatusText_get", _wrap_AccountInfo_onlineStatusText_get, METH_VARARGS, NULL},
	 { (char *)"new_AccountInfo", _wrap_new_AccountInfo, METH_VARARGS, NULL},
	 { (char *)"delete_AccountInfo", _wrap_delete_AccountInfo, METH_VARARGS, NULL},
	 { (char *)"AccountInfo_swigregister", AccountInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnIncomingCallParam_callId_set", _wrap_OnIncomingCallParam_callId_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingCallParam_callId_get", _wrap_OnIncomingCallParam_callId_get, METH_VARARGS, NULL},
	 { (char *)"OnIncomingCallParam_rdata_set", _wrap_OnIncomingCallParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingCallParam_rdata_get", _wrap_OnIncomingCallParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"new_OnIncomingCallParam", _wrap_new_OnIncomingCallParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnIncomingCallParam", _wrap_delete_OnIncomingCallParam, METH_VARARGS, NULL},
	 { (char *)"OnIncomingCallParam_swigregister", OnIncomingCallParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnRegStartedParam_renew_set", _wrap_OnRegStartedParam_renew_set, METH_VARARGS, NULL},
	 { (char *)"OnRegStartedParam_renew_get", _wrap_OnRegStartedParam_renew_get, METH_VARARGS, NULL},
	 { (char *)"new_OnRegStartedParam", _wrap_new_OnRegStartedParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnRegStartedParam", _wrap_delete_OnRegStartedParam, METH_VARARGS, NULL},
	 { (char *)"OnRegStartedParam_swigregister", OnRegStartedParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_status_set", _wrap_OnRegStateParam_status_set, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_status_get", _wrap_OnRegStateParam_status_get, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_code_set", _wrap_OnRegStateParam_code_set, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_code_get", _wrap_OnRegStateParam_code_get, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_reason_set", _wrap_OnRegStateParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_reason_get", _wrap_OnRegStateParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_rdata_set", _wrap_OnRegStateParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_rdata_get", _wrap_OnRegStateParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_expiration_set", _wrap_OnRegStateParam_expiration_set, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_expiration_get", _wrap_OnRegStateParam_expiration_get, METH_VARARGS, NULL},
	 { (char *)"new_OnRegStateParam", _wrap_new_OnRegStateParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnRegStateParam", _wrap_delete_OnRegStateParam, METH_VARARGS, NULL},
	 { (char *)"OnRegStateParam_swigregister", OnRegStateParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_srvPres_set", _wrap_OnIncomingSubscribeParam_srvPres_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_srvPres_get", _wrap_OnIncomingSubscribeParam_srvPres_get, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_fromUri_set", _wrap_OnIncomingSubscribeParam_fromUri_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_fromUri_get", _wrap_OnIncomingSubscribeParam_fromUri_get, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_rdata_set", _wrap_OnIncomingSubscribeParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_rdata_get", _wrap_OnIncomingSubscribeParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_code_set", _wrap_OnIncomingSubscribeParam_code_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_code_get", _wrap_OnIncomingSubscribeParam_code_get, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_reason_set", _wrap_OnIncomingSubscribeParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_reason_get", _wrap_OnIncomingSubscribeParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_txOption_set", _wrap_OnIncomingSubscribeParam_txOption_set, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_txOption_get", _wrap_OnIncomingSubscribeParam_txOption_get, METH_VARARGS, NULL},
	 { (char *)"new_OnIncomingSubscribeParam", _wrap_new_OnIncomingSubscribeParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnIncomingSubscribeParam", _wrap_delete_OnIncomingSubscribeParam, METH_VARARGS, NULL},
	 { (char *)"OnIncomingSubscribeParam_swigregister", OnIncomingSubscribeParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_fromUri_set", _wrap_OnInstantMessageParam_fromUri_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_fromUri_get", _wrap_OnInstantMessageParam_fromUri_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_toUri_set", _wrap_OnInstantMessageParam_toUri_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_toUri_get", _wrap_OnInstantMessageParam_toUri_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_contactUri_set", _wrap_OnInstantMessageParam_contactUri_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_contactUri_get", _wrap_OnInstantMessageParam_contactUri_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_contentType_set", _wrap_OnInstantMessageParam_contentType_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_contentType_get", _wrap_OnInstantMessageParam_contentType_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_msgBody_set", _wrap_OnInstantMessageParam_msgBody_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_msgBody_get", _wrap_OnInstantMessageParam_msgBody_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_rdata_set", _wrap_OnInstantMessageParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_rdata_get", _wrap_OnInstantMessageParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"new_OnInstantMessageParam", _wrap_new_OnInstantMessageParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnInstantMessageParam", _wrap_delete_OnInstantMessageParam, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageParam_swigregister", OnInstantMessageParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_userData_set", _wrap_OnInstantMessageStatusParam_userData_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_userData_get", _wrap_OnInstantMessageStatusParam_userData_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_toUri_set", _wrap_OnInstantMessageStatusParam_toUri_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_toUri_get", _wrap_OnInstantMessageStatusParam_toUri_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_msgBody_set", _wrap_OnInstantMessageStatusParam_msgBody_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_msgBody_get", _wrap_OnInstantMessageStatusParam_msgBody_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_code_set", _wrap_OnInstantMessageStatusParam_code_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_code_get", _wrap_OnInstantMessageStatusParam_code_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_reason_set", _wrap_OnInstantMessageStatusParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_reason_get", _wrap_OnInstantMessageStatusParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_rdata_set", _wrap_OnInstantMessageStatusParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_rdata_get", _wrap_OnInstantMessageStatusParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"new_OnInstantMessageStatusParam", _wrap_new_OnInstantMessageStatusParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnInstantMessageStatusParam", _wrap_delete_OnInstantMessageStatusParam, METH_VARARGS, NULL},
	 { (char *)"OnInstantMessageStatusParam_swigregister", OnInstantMessageStatusParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_fromUri_set", _wrap_OnTypingIndicationParam_fromUri_set, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_fromUri_get", _wrap_OnTypingIndicationParam_fromUri_get, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_toUri_set", _wrap_OnTypingIndicationParam_toUri_set, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_toUri_get", _wrap_OnTypingIndicationParam_toUri_get, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_contactUri_set", _wrap_OnTypingIndicationParam_contactUri_set, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_contactUri_get", _wrap_OnTypingIndicationParam_contactUri_get, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_isTyping_set", _wrap_OnTypingIndicationParam_isTyping_set, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_isTyping_get", _wrap_OnTypingIndicationParam_isTyping_get, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_rdata_set", _wrap_OnTypingIndicationParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_rdata_get", _wrap_OnTypingIndicationParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"new_OnTypingIndicationParam", _wrap_new_OnTypingIndicationParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnTypingIndicationParam", _wrap_delete_OnTypingIndicationParam, METH_VARARGS, NULL},
	 { (char *)"OnTypingIndicationParam_swigregister", OnTypingIndicationParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnMwiInfoParam_state_set", _wrap_OnMwiInfoParam_state_set, METH_VARARGS, NULL},
	 { (char *)"OnMwiInfoParam_state_get", _wrap_OnMwiInfoParam_state_get, METH_VARARGS, NULL},
	 { (char *)"OnMwiInfoParam_rdata_set", _wrap_OnMwiInfoParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnMwiInfoParam_rdata_get", _wrap_OnMwiInfoParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"new_OnMwiInfoParam", _wrap_new_OnMwiInfoParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnMwiInfoParam", _wrap_delete_OnMwiInfoParam, METH_VARARGS, NULL},
	 { (char *)"OnMwiInfoParam_swigregister", OnMwiInfoParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_srvPres_set", _wrap_PresNotifyParam_srvPres_set, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_srvPres_get", _wrap_PresNotifyParam_srvPres_get, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_state_set", _wrap_PresNotifyParam_state_set, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_state_get", _wrap_PresNotifyParam_state_get, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_stateStr_set", _wrap_PresNotifyParam_stateStr_set, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_stateStr_get", _wrap_PresNotifyParam_stateStr_get, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_reason_set", _wrap_PresNotifyParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_reason_get", _wrap_PresNotifyParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_withBody_set", _wrap_PresNotifyParam_withBody_set, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_withBody_get", _wrap_PresNotifyParam_withBody_get, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_txOption_set", _wrap_PresNotifyParam_txOption_set, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_txOption_get", _wrap_PresNotifyParam_txOption_get, METH_VARARGS, NULL},
	 { (char *)"new_PresNotifyParam", _wrap_new_PresNotifyParam, METH_VARARGS, NULL},
	 { (char *)"delete_PresNotifyParam", _wrap_delete_PresNotifyParam, METH_VARARGS, NULL},
	 { (char *)"PresNotifyParam_swigregister", PresNotifyParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"FindBuddyMatch_match", _wrap_FindBuddyMatch_match, METH_VARARGS, NULL},
	 { (char *)"delete_FindBuddyMatch", _wrap_delete_FindBuddyMatch, METH_VARARGS, NULL},
	 { (char *)"new_FindBuddyMatch", _wrap_new_FindBuddyMatch, METH_VARARGS, NULL},
	 { (char *)"disown_FindBuddyMatch", _wrap_disown_FindBuddyMatch, METH_VARARGS, NULL},
	 { (char *)"FindBuddyMatch_swigregister", FindBuddyMatch_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Account", _wrap_new_Account, METH_VARARGS, NULL},
	 { (char *)"delete_Account", _wrap_delete_Account, METH_VARARGS, NULL},
	 { (char *)"Account_create", _wrap_Account_create, METH_VARARGS, NULL},
	 { (char *)"Account_modify", _wrap_Account_modify, METH_VARARGS, NULL},
	 { (char *)"Account_isValid", _wrap_Account_isValid, METH_VARARGS, NULL},
	 { (char *)"Account_setDefault", _wrap_Account_setDefault, METH_VARARGS, NULL},
	 { (char *)"Account_isDefault", _wrap_Account_isDefault, METH_VARARGS, NULL},
	 { (char *)"Account_getId", _wrap_Account_getId, METH_VARARGS, NULL},
	 { (char *)"Account_lookup", _wrap_Account_lookup, METH_VARARGS, NULL},
	 { (char *)"Account_getInfo", _wrap_Account_getInfo, METH_VARARGS, NULL},
	 { (char *)"Account_setRegistration", _wrap_Account_setRegistration, METH_VARARGS, NULL},
	 { (char *)"Account_setOnlineStatus", _wrap_Account_setOnlineStatus, METH_VARARGS, NULL},
	 { (char *)"Account_setTransport", _wrap_Account_setTransport, METH_VARARGS, NULL},
	 { (char *)"Account_presNotify", _wrap_Account_presNotify, METH_VARARGS, NULL},
	 { (char *)"Account_enumBuddies", _wrap_Account_enumBuddies, METH_VARARGS, NULL},
	 { (char *)"Account_findBuddy", _wrap_Account_findBuddy, METH_VARARGS, NULL},
	 { (char *)"Account_addBuddy", _wrap_Account_addBuddy, METH_VARARGS, NULL},
	 { (char *)"Account_removeBuddy", _wrap_Account_removeBuddy, METH_VARARGS, NULL},
	 { (char *)"Account_onIncomingCall", _wrap_Account_onIncomingCall, METH_VARARGS, NULL},
	 { (char *)"Account_onRegStarted", _wrap_Account_onRegStarted, METH_VARARGS, NULL},
	 { (char *)"Account_onRegState", _wrap_Account_onRegState, METH_VARARGS, NULL},
	 { (char *)"Account_onIncomingSubscribe", _wrap_Account_onIncomingSubscribe, METH_VARARGS, NULL},
	 { (char *)"Account_onInstantMessage", _wrap_Account_onInstantMessage, METH_VARARGS, NULL},
	 { (char *)"Account_onInstantMessageStatus", _wrap_Account_onInstantMessageStatus, METH_VARARGS, NULL},
	 { (char *)"Account_onTypingIndication", _wrap_Account_onTypingIndication, METH_VARARGS, NULL},
	 { (char *)"Account_onMwiInfo", _wrap_Account_onMwiInfo, METH_VARARGS, NULL},
	 { (char *)"disown_Account", _wrap_disown_Account, METH_VARARGS, NULL},
	 { (char *)"Account_swigregister", Account_swigregister, METH_VARARGS, NULL},
	 { (char *)"MathStat_n_set", _wrap_MathStat_n_set, METH_VARARGS, NULL},
	 { (char *)"MathStat_n_get", _wrap_MathStat_n_get, METH_VARARGS, NULL},
	 { (char *)"MathStat_max_set", _wrap_MathStat_max_set, METH_VARARGS, NULL},
	 { (char *)"MathStat_max_get", _wrap_MathStat_max_get, METH_VARARGS, NULL},
	 { (char *)"MathStat_min_set", _wrap_MathStat_min_set, METH_VARARGS, NULL},
	 { (char *)"MathStat_min_get", _wrap_MathStat_min_get, METH_VARARGS, NULL},
	 { (char *)"MathStat_last_set", _wrap_MathStat_last_set, METH_VARARGS, NULL},
	 { (char *)"MathStat_last_get", _wrap_MathStat_last_get, METH_VARARGS, NULL},
	 { (char *)"MathStat_mean_set", _wrap_MathStat_mean_set, METH_VARARGS, NULL},
	 { (char *)"MathStat_mean_get", _wrap_MathStat_mean_get, METH_VARARGS, NULL},
	 { (char *)"new_MathStat", _wrap_new_MathStat, METH_VARARGS, NULL},
	 { (char *)"delete_MathStat", _wrap_delete_MathStat, METH_VARARGS, NULL},
	 { (char *)"MathStat_swigregister", MathStat_swigregister, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_update_set", _wrap_RtcpStreamStat_update_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_update_get", _wrap_RtcpStreamStat_update_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_updateCount_set", _wrap_RtcpStreamStat_updateCount_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_updateCount_get", _wrap_RtcpStreamStat_updateCount_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_pkt_set", _wrap_RtcpStreamStat_pkt_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_pkt_get", _wrap_RtcpStreamStat_pkt_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_bytes_set", _wrap_RtcpStreamStat_bytes_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_bytes_get", _wrap_RtcpStreamStat_bytes_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_discard_set", _wrap_RtcpStreamStat_discard_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_discard_get", _wrap_RtcpStreamStat_discard_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_loss_set", _wrap_RtcpStreamStat_loss_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_loss_get", _wrap_RtcpStreamStat_loss_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_reorder_set", _wrap_RtcpStreamStat_reorder_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_reorder_get", _wrap_RtcpStreamStat_reorder_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_dup_set", _wrap_RtcpStreamStat_dup_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_dup_get", _wrap_RtcpStreamStat_dup_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_lossPeriodUsec_set", _wrap_RtcpStreamStat_lossPeriodUsec_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_lossPeriodUsec_get", _wrap_RtcpStreamStat_lossPeriodUsec_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_jitterUsec_set", _wrap_RtcpStreamStat_jitterUsec_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_jitterUsec_get", _wrap_RtcpStreamStat_jitterUsec_get, METH_VARARGS, NULL},
	 { (char *)"new_RtcpStreamStat", _wrap_new_RtcpStreamStat, METH_VARARGS, NULL},
	 { (char *)"delete_RtcpStreamStat", _wrap_delete_RtcpStreamStat, METH_VARARGS, NULL},
	 { (char *)"RtcpStreamStat_swigregister", RtcpStreamStat_swigregister, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_cname_set", _wrap_RtcpSdes_cname_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_cname_get", _wrap_RtcpSdes_cname_get, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_name_set", _wrap_RtcpSdes_name_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_name_get", _wrap_RtcpSdes_name_get, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_email_set", _wrap_RtcpSdes_email_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_email_get", _wrap_RtcpSdes_email_get, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_phone_set", _wrap_RtcpSdes_phone_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_phone_get", _wrap_RtcpSdes_phone_get, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_loc_set", _wrap_RtcpSdes_loc_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_loc_get", _wrap_RtcpSdes_loc_get, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_tool_set", _wrap_RtcpSdes_tool_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_tool_get", _wrap_RtcpSdes_tool_get, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_note_set", _wrap_RtcpSdes_note_set, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_note_get", _wrap_RtcpSdes_note_get, METH_VARARGS, NULL},
	 { (char *)"new_RtcpSdes", _wrap_new_RtcpSdes, METH_VARARGS, NULL},
	 { (char *)"delete_RtcpSdes", _wrap_delete_RtcpSdes, METH_VARARGS, NULL},
	 { (char *)"RtcpSdes_swigregister", RtcpSdes_swigregister, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_start_set", _wrap_RtcpStat_start_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_start_get", _wrap_RtcpStat_start_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_txStat_set", _wrap_RtcpStat_txStat_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_txStat_get", _wrap_RtcpStat_txStat_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rxStat_set", _wrap_RtcpStat_rxStat_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rxStat_get", _wrap_RtcpStat_rxStat_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rttUsec_set", _wrap_RtcpStat_rttUsec_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rttUsec_get", _wrap_RtcpStat_rttUsec_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rtpTxLastTs_set", _wrap_RtcpStat_rtpTxLastTs_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rtpTxLastTs_get", _wrap_RtcpStat_rtpTxLastTs_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rtpTxLastSeq_set", _wrap_RtcpStat_rtpTxLastSeq_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rtpTxLastSeq_get", _wrap_RtcpStat_rtpTxLastSeq_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rxIpdvUsec_set", _wrap_RtcpStat_rxIpdvUsec_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rxIpdvUsec_get", _wrap_RtcpStat_rxIpdvUsec_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rxRawJitterUsec_set", _wrap_RtcpStat_rxRawJitterUsec_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_rxRawJitterUsec_get", _wrap_RtcpStat_rxRawJitterUsec_get, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_peerSdes_set", _wrap_RtcpStat_peerSdes_set, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_peerSdes_get", _wrap_RtcpStat_peerSdes_get, METH_VARARGS, NULL},
	 { (char *)"new_RtcpStat", _wrap_new_RtcpStat, METH_VARARGS, NULL},
	 { (char *)"delete_RtcpStat", _wrap_delete_RtcpStat, METH_VARARGS, NULL},
	 { (char *)"RtcpStat_swigregister", RtcpStat_swigregister, METH_VARARGS, NULL},
	 { (char *)"JbufState_frameSize_set", _wrap_JbufState_frameSize_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_frameSize_get", _wrap_JbufState_frameSize_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_minPrefetch_set", _wrap_JbufState_minPrefetch_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_minPrefetch_get", _wrap_JbufState_minPrefetch_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_maxPrefetch_set", _wrap_JbufState_maxPrefetch_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_maxPrefetch_get", _wrap_JbufState_maxPrefetch_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_burst_set", _wrap_JbufState_burst_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_burst_get", _wrap_JbufState_burst_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_prefetch_set", _wrap_JbufState_prefetch_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_prefetch_get", _wrap_JbufState_prefetch_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_size_set", _wrap_JbufState_size_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_size_get", _wrap_JbufState_size_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_avgDelayMsec_set", _wrap_JbufState_avgDelayMsec_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_avgDelayMsec_get", _wrap_JbufState_avgDelayMsec_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_minDelayMsec_set", _wrap_JbufState_minDelayMsec_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_minDelayMsec_get", _wrap_JbufState_minDelayMsec_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_maxDelayMsec_set", _wrap_JbufState_maxDelayMsec_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_maxDelayMsec_get", _wrap_JbufState_maxDelayMsec_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_devDelayMsec_set", _wrap_JbufState_devDelayMsec_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_devDelayMsec_get", _wrap_JbufState_devDelayMsec_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_avgBurst_set", _wrap_JbufState_avgBurst_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_avgBurst_get", _wrap_JbufState_avgBurst_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_lost_set", _wrap_JbufState_lost_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_lost_get", _wrap_JbufState_lost_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_discard_set", _wrap_JbufState_discard_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_discard_get", _wrap_JbufState_discard_get, METH_VARARGS, NULL},
	 { (char *)"JbufState_empty_set", _wrap_JbufState_empty_set, METH_VARARGS, NULL},
	 { (char *)"JbufState_empty_get", _wrap_JbufState_empty_get, METH_VARARGS, NULL},
	 { (char *)"new_JbufState", _wrap_new_JbufState, METH_VARARGS, NULL},
	 { (char *)"delete_JbufState", _wrap_delete_JbufState, METH_VARARGS, NULL},
	 { (char *)"JbufState_swigregister", JbufState_swigregister, METH_VARARGS, NULL},
	 { (char *)"SdpSession_wholeSdp_set", _wrap_SdpSession_wholeSdp_set, METH_VARARGS, NULL},
	 { (char *)"SdpSession_wholeSdp_get", _wrap_SdpSession_wholeSdp_get, METH_VARARGS, NULL},
	 { (char *)"SdpSession_pjSdpSession_set", _wrap_SdpSession_pjSdpSession_set, METH_VARARGS, NULL},
	 { (char *)"SdpSession_pjSdpSession_get", _wrap_SdpSession_pjSdpSession_get, METH_VARARGS, NULL},
	 { (char *)"new_SdpSession", _wrap_new_SdpSession, METH_VARARGS, NULL},
	 { (char *)"delete_SdpSession", _wrap_delete_SdpSession, METH_VARARGS, NULL},
	 { (char *)"SdpSession_swigregister", SdpSession_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaFmtChangedEvent_newWidth_set", _wrap_MediaFmtChangedEvent_newWidth_set, METH_VARARGS, NULL},
	 { (char *)"MediaFmtChangedEvent_newWidth_get", _wrap_MediaFmtChangedEvent_newWidth_get, METH_VARARGS, NULL},
	 { (char *)"MediaFmtChangedEvent_newHeight_set", _wrap_MediaFmtChangedEvent_newHeight_set, METH_VARARGS, NULL},
	 { (char *)"MediaFmtChangedEvent_newHeight_get", _wrap_MediaFmtChangedEvent_newHeight_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaFmtChangedEvent", _wrap_new_MediaFmtChangedEvent, METH_VARARGS, NULL},
	 { (char *)"delete_MediaFmtChangedEvent", _wrap_delete_MediaFmtChangedEvent, METH_VARARGS, NULL},
	 { (char *)"MediaFmtChangedEvent_swigregister", MediaFmtChangedEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaEvent_type_set", _wrap_MediaEvent_type_set, METH_VARARGS, NULL},
	 { (char *)"MediaEvent_type_get", _wrap_MediaEvent_type_get, METH_VARARGS, NULL},
	 { (char *)"MediaEvent_pjMediaEvent_set", _wrap_MediaEvent_pjMediaEvent_set, METH_VARARGS, NULL},
	 { (char *)"MediaEvent_pjMediaEvent_get", _wrap_MediaEvent_pjMediaEvent_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaEvent", _wrap_new_MediaEvent, METH_VARARGS, NULL},
	 { (char *)"delete_MediaEvent", _wrap_delete_MediaEvent, METH_VARARGS, NULL},
	 { (char *)"MediaEvent_swigregister", MediaEvent_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaTransportInfo_srcRtpName_set", _wrap_MediaTransportInfo_srcRtpName_set, METH_VARARGS, NULL},
	 { (char *)"MediaTransportInfo_srcRtpName_get", _wrap_MediaTransportInfo_srcRtpName_get, METH_VARARGS, NULL},
	 { (char *)"MediaTransportInfo_srcRtcpName_set", _wrap_MediaTransportInfo_srcRtcpName_set, METH_VARARGS, NULL},
	 { (char *)"MediaTransportInfo_srcRtcpName_get", _wrap_MediaTransportInfo_srcRtcpName_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaTransportInfo", _wrap_new_MediaTransportInfo, METH_VARARGS, NULL},
	 { (char *)"delete_MediaTransportInfo", _wrap_delete_MediaTransportInfo, METH_VARARGS, NULL},
	 { (char *)"MediaTransportInfo_swigregister", MediaTransportInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallSetting_flag_set", _wrap_CallSetting_flag_set, METH_VARARGS, NULL},
	 { (char *)"CallSetting_flag_get", _wrap_CallSetting_flag_get, METH_VARARGS, NULL},
	 { (char *)"CallSetting_reqKeyframeMethod_set", _wrap_CallSetting_reqKeyframeMethod_set, METH_VARARGS, NULL},
	 { (char *)"CallSetting_reqKeyframeMethod_get", _wrap_CallSetting_reqKeyframeMethod_get, METH_VARARGS, NULL},
	 { (char *)"CallSetting_audioCount_set", _wrap_CallSetting_audioCount_set, METH_VARARGS, NULL},
	 { (char *)"CallSetting_audioCount_get", _wrap_CallSetting_audioCount_get, METH_VARARGS, NULL},
	 { (char *)"CallSetting_videoCount_set", _wrap_CallSetting_videoCount_set, METH_VARARGS, NULL},
	 { (char *)"CallSetting_videoCount_get", _wrap_CallSetting_videoCount_get, METH_VARARGS, NULL},
	 { (char *)"new_CallSetting", _wrap_new_CallSetting, METH_VARARGS, NULL},
	 { (char *)"CallSetting_isEmpty", _wrap_CallSetting_isEmpty, METH_VARARGS, NULL},
	 { (char *)"delete_CallSetting", _wrap_delete_CallSetting, METH_VARARGS, NULL},
	 { (char *)"CallSetting_swigregister", CallSetting_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_index_set", _wrap_CallMediaInfo_index_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_index_get", _wrap_CallMediaInfo_index_get, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_type_set", _wrap_CallMediaInfo_type_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_type_get", _wrap_CallMediaInfo_type_get, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_dir_set", _wrap_CallMediaInfo_dir_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_dir_get", _wrap_CallMediaInfo_dir_get, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_status_set", _wrap_CallMediaInfo_status_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_status_get", _wrap_CallMediaInfo_status_get, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_audioConfSlot_set", _wrap_CallMediaInfo_audioConfSlot_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_audioConfSlot_get", _wrap_CallMediaInfo_audioConfSlot_get, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_videoIncomingWindowId_set", _wrap_CallMediaInfo_videoIncomingWindowId_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_videoIncomingWindowId_get", _wrap_CallMediaInfo_videoIncomingWindowId_get, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_videoCapDev_set", _wrap_CallMediaInfo_videoCapDev_set, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_videoCapDev_get", _wrap_CallMediaInfo_videoCapDev_get, METH_VARARGS, NULL},
	 { (char *)"new_CallMediaInfo", _wrap_new_CallMediaInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CallMediaInfo", _wrap_delete_CallMediaInfo, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfo_swigregister", CallMediaInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallInfo_id_set", _wrap_CallInfo_id_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_id_get", _wrap_CallInfo_id_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_role_set", _wrap_CallInfo_role_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_role_get", _wrap_CallInfo_role_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_accId_set", _wrap_CallInfo_accId_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_accId_get", _wrap_CallInfo_accId_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_localUri_set", _wrap_CallInfo_localUri_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_localUri_get", _wrap_CallInfo_localUri_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_localContact_set", _wrap_CallInfo_localContact_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_localContact_get", _wrap_CallInfo_localContact_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remoteUri_set", _wrap_CallInfo_remoteUri_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remoteUri_get", _wrap_CallInfo_remoteUri_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remoteContact_set", _wrap_CallInfo_remoteContact_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remoteContact_get", _wrap_CallInfo_remoteContact_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_callIdString_set", _wrap_CallInfo_callIdString_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_callIdString_get", _wrap_CallInfo_callIdString_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_setting_set", _wrap_CallInfo_setting_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_setting_get", _wrap_CallInfo_setting_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_state_set", _wrap_CallInfo_state_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_state_get", _wrap_CallInfo_state_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_stateText_set", _wrap_CallInfo_stateText_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_stateText_get", _wrap_CallInfo_stateText_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_lastStatusCode_set", _wrap_CallInfo_lastStatusCode_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_lastStatusCode_get", _wrap_CallInfo_lastStatusCode_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_lastReason_set", _wrap_CallInfo_lastReason_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_lastReason_get", _wrap_CallInfo_lastReason_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_media_set", _wrap_CallInfo_media_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_media_get", _wrap_CallInfo_media_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_provMedia_set", _wrap_CallInfo_provMedia_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_provMedia_get", _wrap_CallInfo_provMedia_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_connectDuration_set", _wrap_CallInfo_connectDuration_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_connectDuration_get", _wrap_CallInfo_connectDuration_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_totalDuration_set", _wrap_CallInfo_totalDuration_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_totalDuration_get", _wrap_CallInfo_totalDuration_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remOfferer_set", _wrap_CallInfo_remOfferer_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remOfferer_get", _wrap_CallInfo_remOfferer_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remAudioCount_set", _wrap_CallInfo_remAudioCount_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remAudioCount_get", _wrap_CallInfo_remAudioCount_get, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remVideoCount_set", _wrap_CallInfo_remVideoCount_set, METH_VARARGS, NULL},
	 { (char *)"CallInfo_remVideoCount_get", _wrap_CallInfo_remVideoCount_get, METH_VARARGS, NULL},
	 { (char *)"new_CallInfo", _wrap_new_CallInfo, METH_VARARGS, NULL},
	 { (char *)"delete_CallInfo", _wrap_delete_CallInfo, METH_VARARGS, NULL},
	 { (char *)"CallInfo_swigregister", CallInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_type_set", _wrap_StreamInfo_type_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_type_get", _wrap_StreamInfo_type_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_proto_set", _wrap_StreamInfo_proto_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_proto_get", _wrap_StreamInfo_proto_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_dir_set", _wrap_StreamInfo_dir_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_dir_get", _wrap_StreamInfo_dir_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_remoteRtpAddress_set", _wrap_StreamInfo_remoteRtpAddress_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_remoteRtpAddress_get", _wrap_StreamInfo_remoteRtpAddress_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_remoteRtcpAddress_set", _wrap_StreamInfo_remoteRtcpAddress_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_remoteRtcpAddress_get", _wrap_StreamInfo_remoteRtcpAddress_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_txPt_set", _wrap_StreamInfo_txPt_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_txPt_get", _wrap_StreamInfo_txPt_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_rxPt_set", _wrap_StreamInfo_rxPt_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_rxPt_get", _wrap_StreamInfo_rxPt_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_codecName_set", _wrap_StreamInfo_codecName_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_codecName_get", _wrap_StreamInfo_codecName_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_codecClockRate_set", _wrap_StreamInfo_codecClockRate_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_codecClockRate_get", _wrap_StreamInfo_codecClockRate_get, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_codecParam_set", _wrap_StreamInfo_codecParam_set, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_codecParam_get", _wrap_StreamInfo_codecParam_get, METH_VARARGS, NULL},
	 { (char *)"new_StreamInfo", _wrap_new_StreamInfo, METH_VARARGS, NULL},
	 { (char *)"delete_StreamInfo", _wrap_delete_StreamInfo, METH_VARARGS, NULL},
	 { (char *)"StreamInfo_swigregister", StreamInfo_swigregister, METH_VARARGS, NULL},
	 { (char *)"StreamStat_rtcp_set", _wrap_StreamStat_rtcp_set, METH_VARARGS, NULL},
	 { (char *)"StreamStat_rtcp_get", _wrap_StreamStat_rtcp_get, METH_VARARGS, NULL},
	 { (char *)"StreamStat_jbuf_set", _wrap_StreamStat_jbuf_set, METH_VARARGS, NULL},
	 { (char *)"StreamStat_jbuf_get", _wrap_StreamStat_jbuf_get, METH_VARARGS, NULL},
	 { (char *)"new_StreamStat", _wrap_new_StreamStat, METH_VARARGS, NULL},
	 { (char *)"delete_StreamStat", _wrap_delete_StreamStat, METH_VARARGS, NULL},
	 { (char *)"StreamStat_swigregister", StreamStat_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallStateParam_e_set", _wrap_OnCallStateParam_e_set, METH_VARARGS, NULL},
	 { (char *)"OnCallStateParam_e_get", _wrap_OnCallStateParam_e_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallStateParam", _wrap_new_OnCallStateParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallStateParam", _wrap_delete_OnCallStateParam, METH_VARARGS, NULL},
	 { (char *)"OnCallStateParam_swigregister", OnCallStateParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallTsxStateParam_e_set", _wrap_OnCallTsxStateParam_e_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTsxStateParam_e_get", _wrap_OnCallTsxStateParam_e_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallTsxStateParam", _wrap_new_OnCallTsxStateParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallTsxStateParam", _wrap_delete_OnCallTsxStateParam, METH_VARARGS, NULL},
	 { (char *)"OnCallTsxStateParam_swigregister", OnCallTsxStateParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_OnCallMediaStateParam", _wrap_new_OnCallMediaStateParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallMediaStateParam", _wrap_delete_OnCallMediaStateParam, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaStateParam_swigregister", OnCallMediaStateParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallSdpCreatedParam_sdp_set", _wrap_OnCallSdpCreatedParam_sdp_set, METH_VARARGS, NULL},
	 { (char *)"OnCallSdpCreatedParam_sdp_get", _wrap_OnCallSdpCreatedParam_sdp_get, METH_VARARGS, NULL},
	 { (char *)"OnCallSdpCreatedParam_remSdp_set", _wrap_OnCallSdpCreatedParam_remSdp_set, METH_VARARGS, NULL},
	 { (char *)"OnCallSdpCreatedParam_remSdp_get", _wrap_OnCallSdpCreatedParam_remSdp_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallSdpCreatedParam", _wrap_new_OnCallSdpCreatedParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallSdpCreatedParam", _wrap_delete_OnCallSdpCreatedParam, METH_VARARGS, NULL},
	 { (char *)"OnCallSdpCreatedParam_swigregister", OnCallSdpCreatedParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_stream_set", _wrap_OnStreamCreatedParam_stream_set, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_stream_get", _wrap_OnStreamCreatedParam_stream_get, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_streamIdx_set", _wrap_OnStreamCreatedParam_streamIdx_set, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_streamIdx_get", _wrap_OnStreamCreatedParam_streamIdx_get, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_pPort_set", _wrap_OnStreamCreatedParam_pPort_set, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_pPort_get", _wrap_OnStreamCreatedParam_pPort_get, METH_VARARGS, NULL},
	 { (char *)"new_OnStreamCreatedParam", _wrap_new_OnStreamCreatedParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnStreamCreatedParam", _wrap_delete_OnStreamCreatedParam, METH_VARARGS, NULL},
	 { (char *)"OnStreamCreatedParam_swigregister", OnStreamCreatedParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnStreamDestroyedParam_stream_set", _wrap_OnStreamDestroyedParam_stream_set, METH_VARARGS, NULL},
	 { (char *)"OnStreamDestroyedParam_stream_get", _wrap_OnStreamDestroyedParam_stream_get, METH_VARARGS, NULL},
	 { (char *)"OnStreamDestroyedParam_streamIdx_set", _wrap_OnStreamDestroyedParam_streamIdx_set, METH_VARARGS, NULL},
	 { (char *)"OnStreamDestroyedParam_streamIdx_get", _wrap_OnStreamDestroyedParam_streamIdx_get, METH_VARARGS, NULL},
	 { (char *)"new_OnStreamDestroyedParam", _wrap_new_OnStreamDestroyedParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnStreamDestroyedParam", _wrap_delete_OnStreamDestroyedParam, METH_VARARGS, NULL},
	 { (char *)"OnStreamDestroyedParam_swigregister", OnStreamDestroyedParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnDtmfDigitParam_digit_set", _wrap_OnDtmfDigitParam_digit_set, METH_VARARGS, NULL},
	 { (char *)"OnDtmfDigitParam_digit_get", _wrap_OnDtmfDigitParam_digit_get, METH_VARARGS, NULL},
	 { (char *)"new_OnDtmfDigitParam", _wrap_new_OnDtmfDigitParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnDtmfDigitParam", _wrap_delete_OnDtmfDigitParam, METH_VARARGS, NULL},
	 { (char *)"OnDtmfDigitParam_swigregister", OnDtmfDigitParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_dstUri_set", _wrap_OnCallTransferRequestParam_dstUri_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_dstUri_get", _wrap_OnCallTransferRequestParam_dstUri_get, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_statusCode_set", _wrap_OnCallTransferRequestParam_statusCode_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_statusCode_get", _wrap_OnCallTransferRequestParam_statusCode_get, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_opt_set", _wrap_OnCallTransferRequestParam_opt_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_opt_get", _wrap_OnCallTransferRequestParam_opt_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallTransferRequestParam", _wrap_new_OnCallTransferRequestParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallTransferRequestParam", _wrap_delete_OnCallTransferRequestParam, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferRequestParam_swigregister", OnCallTransferRequestParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_statusCode_set", _wrap_OnCallTransferStatusParam_statusCode_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_statusCode_get", _wrap_OnCallTransferStatusParam_statusCode_get, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_reason_set", _wrap_OnCallTransferStatusParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_reason_get", _wrap_OnCallTransferStatusParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_finalNotify_set", _wrap_OnCallTransferStatusParam_finalNotify_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_finalNotify_get", _wrap_OnCallTransferStatusParam_finalNotify_get, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_cont_set", _wrap_OnCallTransferStatusParam_cont_set, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_cont_get", _wrap_OnCallTransferStatusParam_cont_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallTransferStatusParam", _wrap_new_OnCallTransferStatusParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallTransferStatusParam", _wrap_delete_OnCallTransferStatusParam, METH_VARARGS, NULL},
	 { (char *)"OnCallTransferStatusParam_swigregister", OnCallTransferStatusParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_rdata_set", _wrap_OnCallReplaceRequestParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_rdata_get", _wrap_OnCallReplaceRequestParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_statusCode_set", _wrap_OnCallReplaceRequestParam_statusCode_set, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_statusCode_get", _wrap_OnCallReplaceRequestParam_statusCode_get, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_reason_set", _wrap_OnCallReplaceRequestParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_reason_get", _wrap_OnCallReplaceRequestParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_opt_set", _wrap_OnCallReplaceRequestParam_opt_set, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_opt_get", _wrap_OnCallReplaceRequestParam_opt_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallReplaceRequestParam", _wrap_new_OnCallReplaceRequestParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallReplaceRequestParam", _wrap_delete_OnCallReplaceRequestParam, METH_VARARGS, NULL},
	 { (char *)"OnCallReplaceRequestParam_swigregister", OnCallReplaceRequestParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallReplacedParam_newCallId_set", _wrap_OnCallReplacedParam_newCallId_set, METH_VARARGS, NULL},
	 { (char *)"OnCallReplacedParam_newCallId_get", _wrap_OnCallReplacedParam_newCallId_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallReplacedParam", _wrap_new_OnCallReplacedParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallReplacedParam", _wrap_delete_OnCallReplacedParam, METH_VARARGS, NULL},
	 { (char *)"OnCallReplacedParam_swigregister", OnCallReplacedParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_offer_set", _wrap_OnCallRxOfferParam_offer_set, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_offer_get", _wrap_OnCallRxOfferParam_offer_get, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_statusCode_set", _wrap_OnCallRxOfferParam_statusCode_set, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_statusCode_get", _wrap_OnCallRxOfferParam_statusCode_get, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_opt_set", _wrap_OnCallRxOfferParam_opt_set, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_opt_get", _wrap_OnCallRxOfferParam_opt_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallRxOfferParam", _wrap_new_OnCallRxOfferParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallRxOfferParam", _wrap_delete_OnCallRxOfferParam, METH_VARARGS, NULL},
	 { (char *)"OnCallRxOfferParam_swigregister", OnCallRxOfferParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallRedirectedParam_targetUri_set", _wrap_OnCallRedirectedParam_targetUri_set, METH_VARARGS, NULL},
	 { (char *)"OnCallRedirectedParam_targetUri_get", _wrap_OnCallRedirectedParam_targetUri_get, METH_VARARGS, NULL},
	 { (char *)"OnCallRedirectedParam_e_set", _wrap_OnCallRedirectedParam_e_set, METH_VARARGS, NULL},
	 { (char *)"OnCallRedirectedParam_e_get", _wrap_OnCallRedirectedParam_e_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallRedirectedParam", _wrap_new_OnCallRedirectedParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallRedirectedParam", _wrap_delete_OnCallRedirectedParam, METH_VARARGS, NULL},
	 { (char *)"OnCallRedirectedParam_swigregister", OnCallRedirectedParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaEventParam_medIdx_set", _wrap_OnCallMediaEventParam_medIdx_set, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaEventParam_medIdx_get", _wrap_OnCallMediaEventParam_medIdx_get, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaEventParam_ev_set", _wrap_OnCallMediaEventParam_ev_set, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaEventParam_ev_get", _wrap_OnCallMediaEventParam_ev_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallMediaEventParam", _wrap_new_OnCallMediaEventParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallMediaEventParam", _wrap_delete_OnCallMediaEventParam, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaEventParam_swigregister", OnCallMediaEventParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_medIdx_set", _wrap_OnCallMediaTransportStateParam_medIdx_set, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_medIdx_get", _wrap_OnCallMediaTransportStateParam_medIdx_get, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_state_set", _wrap_OnCallMediaTransportStateParam_state_set, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_state_get", _wrap_OnCallMediaTransportStateParam_state_get, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_status_set", _wrap_OnCallMediaTransportStateParam_status_set, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_status_get", _wrap_OnCallMediaTransportStateParam_status_get, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_sipErrorCode_set", _wrap_OnCallMediaTransportStateParam_sipErrorCode_set, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_sipErrorCode_get", _wrap_OnCallMediaTransportStateParam_sipErrorCode_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCallMediaTransportStateParam", _wrap_new_OnCallMediaTransportStateParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCallMediaTransportStateParam", _wrap_delete_OnCallMediaTransportStateParam, METH_VARARGS, NULL},
	 { (char *)"OnCallMediaTransportStateParam_swigregister", OnCallMediaTransportStateParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_mediaIdx_set", _wrap_OnCreateMediaTransportParam_mediaIdx_set, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_mediaIdx_get", _wrap_OnCreateMediaTransportParam_mediaIdx_get, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_mediaTp_set", _wrap_OnCreateMediaTransportParam_mediaTp_set, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_mediaTp_get", _wrap_OnCreateMediaTransportParam_mediaTp_get, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_flags_set", _wrap_OnCreateMediaTransportParam_flags_set, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_flags_get", _wrap_OnCreateMediaTransportParam_flags_get, METH_VARARGS, NULL},
	 { (char *)"new_OnCreateMediaTransportParam", _wrap_new_OnCreateMediaTransportParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnCreateMediaTransportParam", _wrap_delete_OnCreateMediaTransportParam, METH_VARARGS, NULL},
	 { (char *)"OnCreateMediaTransportParam_swigregister", OnCreateMediaTransportParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_opt_set", _wrap_CallOpParam_opt_set, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_opt_get", _wrap_CallOpParam_opt_get, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_statusCode_set", _wrap_CallOpParam_statusCode_set, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_statusCode_get", _wrap_CallOpParam_statusCode_get, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_reason_set", _wrap_CallOpParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_reason_get", _wrap_CallOpParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_options_set", _wrap_CallOpParam_options_set, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_options_get", _wrap_CallOpParam_options_get, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_txOption_set", _wrap_CallOpParam_txOption_set, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_txOption_get", _wrap_CallOpParam_txOption_get, METH_VARARGS, NULL},
	 { (char *)"new_CallOpParam", _wrap_new_CallOpParam, METH_VARARGS, NULL},
	 { (char *)"delete_CallOpParam", _wrap_delete_CallOpParam, METH_VARARGS, NULL},
	 { (char *)"CallOpParam_swigregister", CallOpParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallSendRequestParam_method_set", _wrap_CallSendRequestParam_method_set, METH_VARARGS, NULL},
	 { (char *)"CallSendRequestParam_method_get", _wrap_CallSendRequestParam_method_get, METH_VARARGS, NULL},
	 { (char *)"CallSendRequestParam_txOption_set", _wrap_CallSendRequestParam_txOption_set, METH_VARARGS, NULL},
	 { (char *)"CallSendRequestParam_txOption_get", _wrap_CallSendRequestParam_txOption_get, METH_VARARGS, NULL},
	 { (char *)"new_CallSendRequestParam", _wrap_new_CallSendRequestParam, METH_VARARGS, NULL},
	 { (char *)"delete_CallSendRequestParam", _wrap_delete_CallSendRequestParam, METH_VARARGS, NULL},
	 { (char *)"CallSendRequestParam_swigregister", CallSendRequestParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_medIdx_set", _wrap_CallVidSetStreamParam_medIdx_set, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_medIdx_get", _wrap_CallVidSetStreamParam_medIdx_get, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_dir_set", _wrap_CallVidSetStreamParam_dir_set, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_dir_get", _wrap_CallVidSetStreamParam_dir_get, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_capDev_set", _wrap_CallVidSetStreamParam_capDev_set, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_capDev_get", _wrap_CallVidSetStreamParam_capDev_get, METH_VARARGS, NULL},
	 { (char *)"new_CallVidSetStreamParam", _wrap_new_CallVidSetStreamParam, METH_VARARGS, NULL},
	 { (char *)"delete_CallVidSetStreamParam", _wrap_delete_CallVidSetStreamParam, METH_VARARGS, NULL},
	 { (char *)"CallVidSetStreamParam_swigregister", CallVidSetStreamParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Call", _wrap_new_Call, METH_VARARGS, NULL},
	 { (char *)"delete_Call", _wrap_delete_Call, METH_VARARGS, NULL},
	 { (char *)"Call_getInfo", _wrap_Call_getInfo, METH_VARARGS, NULL},
	 { (char *)"Call_isActive", _wrap_Call_isActive, METH_VARARGS, NULL},
	 { (char *)"Call_getId", _wrap_Call_getId, METH_VARARGS, NULL},
	 { (char *)"Call_lookup", _wrap_Call_lookup, METH_VARARGS, NULL},
	 { (char *)"Call_hasMedia", _wrap_Call_hasMedia, METH_VARARGS, NULL},
	 { (char *)"Call_getMedia", _wrap_Call_getMedia, METH_VARARGS, NULL},
	 { (char *)"Call_remoteHasCap", _wrap_Call_remoteHasCap, METH_VARARGS, NULL},
	 { (char *)"Call_setUserData", _wrap_Call_setUserData, METH_VARARGS, NULL},
	 { (char *)"Call_getUserData", _wrap_Call_getUserData, METH_VARARGS, NULL},
	 { (char *)"Call_getRemNatType", _wrap_Call_getRemNatType, METH_VARARGS, NULL},
	 { (char *)"Call_makeCall", _wrap_Call_makeCall, METH_VARARGS, NULL},
	 { (char *)"Call_answer", _wrap_Call_answer, METH_VARARGS, NULL},
	 { (char *)"Call_hangup", _wrap_Call_hangup, METH_VARARGS, NULL},
	 { (char *)"Call_setHold", _wrap_Call_setHold, METH_VARARGS, NULL},
	 { (char *)"Call_reinvite", _wrap_Call_reinvite, METH_VARARGS, NULL},
	 { (char *)"Call_update", _wrap_Call_update, METH_VARARGS, NULL},
	 { (char *)"Call_xfer", _wrap_Call_xfer, METH_VARARGS, NULL},
	 { (char *)"Call_xferReplaces", _wrap_Call_xferReplaces, METH_VARARGS, NULL},
	 { (char *)"Call_processRedirect", _wrap_Call_processRedirect, METH_VARARGS, NULL},
	 { (char *)"Call_dialDtmf", _wrap_Call_dialDtmf, METH_VARARGS, NULL},
	 { (char *)"Call_sendInstantMessage", _wrap_Call_sendInstantMessage, METH_VARARGS, NULL},
	 { (char *)"Call_sendTypingIndication", _wrap_Call_sendTypingIndication, METH_VARARGS, NULL},
	 { (char *)"Call_sendRequest", _wrap_Call_sendRequest, METH_VARARGS, NULL},
	 { (char *)"Call_dump", _wrap_Call_dump, METH_VARARGS, NULL},
	 { (char *)"Call_vidGetStreamIdx", _wrap_Call_vidGetStreamIdx, METH_VARARGS, NULL},
	 { (char *)"Call_vidStreamIsRunning", _wrap_Call_vidStreamIsRunning, METH_VARARGS, NULL},
	 { (char *)"Call_vidSetStream", _wrap_Call_vidSetStream, METH_VARARGS, NULL},
	 { (char *)"Call_getStreamInfo", _wrap_Call_getStreamInfo, METH_VARARGS, NULL},
	 { (char *)"Call_getStreamStat", _wrap_Call_getStreamStat, METH_VARARGS, NULL},
	 { (char *)"Call_getMedTransportInfo", _wrap_Call_getMedTransportInfo, METH_VARARGS, NULL},
	 { (char *)"Call_processMediaUpdate", _wrap_Call_processMediaUpdate, METH_VARARGS, NULL},
	 { (char *)"Call_processStateChange", _wrap_Call_processStateChange, METH_VARARGS, NULL},
	 { (char *)"Call_onCallState", _wrap_Call_onCallState, METH_VARARGS, NULL},
	 { (char *)"Call_onCallTsxState", _wrap_Call_onCallTsxState, METH_VARARGS, NULL},
	 { (char *)"Call_onCallMediaState", _wrap_Call_onCallMediaState, METH_VARARGS, NULL},
	 { (char *)"Call_onCallSdpCreated", _wrap_Call_onCallSdpCreated, METH_VARARGS, NULL},
	 { (char *)"Call_onStreamCreated", _wrap_Call_onStreamCreated, METH_VARARGS, NULL},
	 { (char *)"Call_onStreamDestroyed", _wrap_Call_onStreamDestroyed, METH_VARARGS, NULL},
	 { (char *)"Call_onDtmfDigit", _wrap_Call_onDtmfDigit, METH_VARARGS, NULL},
	 { (char *)"Call_onCallTransferRequest", _wrap_Call_onCallTransferRequest, METH_VARARGS, NULL},
	 { (char *)"Call_onCallTransferStatus", _wrap_Call_onCallTransferStatus, METH_VARARGS, NULL},
	 { (char *)"Call_onCallReplaceRequest", _wrap_Call_onCallReplaceRequest, METH_VARARGS, NULL},
	 { (char *)"Call_onCallReplaced", _wrap_Call_onCallReplaced, METH_VARARGS, NULL},
	 { (char *)"Call_onCallRxOffer", _wrap_Call_onCallRxOffer, METH_VARARGS, NULL},
	 { (char *)"Call_onInstantMessage", _wrap_Call_onInstantMessage, METH_VARARGS, NULL},
	 { (char *)"Call_onInstantMessageStatus", _wrap_Call_onInstantMessageStatus, METH_VARARGS, NULL},
	 { (char *)"Call_onTypingIndication", _wrap_Call_onTypingIndication, METH_VARARGS, NULL},
	 { (char *)"Call_onCallRedirected", _wrap_Call_onCallRedirected, METH_VARARGS, NULL},
	 { (char *)"Call_onCallMediaTransportState", _wrap_Call_onCallMediaTransportState, METH_VARARGS, NULL},
	 { (char *)"Call_onCallMediaEvent", _wrap_Call_onCallMediaEvent, METH_VARARGS, NULL},
	 { (char *)"Call_onCreateMediaTransport", _wrap_Call_onCreateMediaTransport, METH_VARARGS, NULL},
	 { (char *)"disown_Call", _wrap_disown_Call, METH_VARARGS, NULL},
	 { (char *)"Call_swigregister", Call_swigregister, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_iterator", _wrap_CallMediaInfoVector_iterator, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___nonzero__", _wrap_CallMediaInfoVector___nonzero__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___bool__", _wrap_CallMediaInfoVector___bool__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___len__", _wrap_CallMediaInfoVector___len__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_pop", _wrap_CallMediaInfoVector_pop, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___getslice__", _wrap_CallMediaInfoVector___getslice__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___setslice__", _wrap_CallMediaInfoVector___setslice__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___delslice__", _wrap_CallMediaInfoVector___delslice__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___delitem__", _wrap_CallMediaInfoVector___delitem__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___getitem__", _wrap_CallMediaInfoVector___getitem__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector___setitem__", _wrap_CallMediaInfoVector___setitem__, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_append", _wrap_CallMediaInfoVector_append, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_empty", _wrap_CallMediaInfoVector_empty, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_size", _wrap_CallMediaInfoVector_size, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_clear", _wrap_CallMediaInfoVector_clear, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_swap", _wrap_CallMediaInfoVector_swap, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_get_allocator", _wrap_CallMediaInfoVector_get_allocator, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_begin", _wrap_CallMediaInfoVector_begin, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_end", _wrap_CallMediaInfoVector_end, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_rbegin", _wrap_CallMediaInfoVector_rbegin, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_rend", _wrap_CallMediaInfoVector_rend, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_pop_back", _wrap_CallMediaInfoVector_pop_back, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_erase", _wrap_CallMediaInfoVector_erase, METH_VARARGS, NULL},
	 { (char *)"new_CallMediaInfoVector", _wrap_new_CallMediaInfoVector, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_push_back", _wrap_CallMediaInfoVector_push_back, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_front", _wrap_CallMediaInfoVector_front, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_back", _wrap_CallMediaInfoVector_back, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_assign", _wrap_CallMediaInfoVector_assign, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_resize", _wrap_CallMediaInfoVector_resize, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_insert", _wrap_CallMediaInfoVector_insert, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_reserve", _wrap_CallMediaInfoVector_reserve, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_capacity", _wrap_CallMediaInfoVector_capacity, METH_VARARGS, NULL},
	 { (char *)"delete_CallMediaInfoVector", _wrap_delete_CallMediaInfoVector, METH_VARARGS, NULL},
	 { (char *)"CallMediaInfoVector_swigregister", CallMediaInfoVector_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_JsonDocument", _wrap_new_JsonDocument, METH_VARARGS, NULL},
	 { (char *)"delete_JsonDocument", _wrap_delete_JsonDocument, METH_VARARGS, NULL},
	 { (char *)"JsonDocument_loadFile", _wrap_JsonDocument_loadFile, METH_VARARGS, NULL},
	 { (char *)"JsonDocument_loadString", _wrap_JsonDocument_loadString, METH_VARARGS, NULL},
	 { (char *)"JsonDocument_saveFile", _wrap_JsonDocument_saveFile, METH_VARARGS, NULL},
	 { (char *)"JsonDocument_saveString", _wrap_JsonDocument_saveString, METH_VARARGS, NULL},
	 { (char *)"JsonDocument_getRootContainer", _wrap_JsonDocument_getRootContainer, METH_VARARGS, NULL},
	 { (char *)"JsonDocument_swigregister", JsonDocument_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_status_set", _wrap_OnNatDetectionCompleteParam_status_set, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_status_get", _wrap_OnNatDetectionCompleteParam_status_get, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_reason_set", _wrap_OnNatDetectionCompleteParam_reason_set, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_reason_get", _wrap_OnNatDetectionCompleteParam_reason_get, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_natType_set", _wrap_OnNatDetectionCompleteParam_natType_set, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_natType_get", _wrap_OnNatDetectionCompleteParam_natType_get, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_natTypeName_set", _wrap_OnNatDetectionCompleteParam_natTypeName_set, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_natTypeName_get", _wrap_OnNatDetectionCompleteParam_natTypeName_get, METH_VARARGS, NULL},
	 { (char *)"new_OnNatDetectionCompleteParam", _wrap_new_OnNatDetectionCompleteParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnNatDetectionCompleteParam", _wrap_delete_OnNatDetectionCompleteParam, METH_VARARGS, NULL},
	 { (char *)"OnNatDetectionCompleteParam_swigregister", OnNatDetectionCompleteParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_userData_set", _wrap_OnNatCheckStunServersCompleteParam_userData_set, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_userData_get", _wrap_OnNatCheckStunServersCompleteParam_userData_get, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_status_set", _wrap_OnNatCheckStunServersCompleteParam_status_set, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_status_get", _wrap_OnNatCheckStunServersCompleteParam_status_get, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_name_set", _wrap_OnNatCheckStunServersCompleteParam_name_set, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_name_get", _wrap_OnNatCheckStunServersCompleteParam_name_get, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_addr_set", _wrap_OnNatCheckStunServersCompleteParam_addr_set, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_addr_get", _wrap_OnNatCheckStunServersCompleteParam_addr_get, METH_VARARGS, NULL},
	 { (char *)"new_OnNatCheckStunServersCompleteParam", _wrap_new_OnNatCheckStunServersCompleteParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnNatCheckStunServersCompleteParam", _wrap_delete_OnNatCheckStunServersCompleteParam, METH_VARARGS, NULL},
	 { (char *)"OnNatCheckStunServersCompleteParam_swigregister", OnNatCheckStunServersCompleteParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnTimerParam_userData_set", _wrap_OnTimerParam_userData_set, METH_VARARGS, NULL},
	 { (char *)"OnTimerParam_userData_get", _wrap_OnTimerParam_userData_get, METH_VARARGS, NULL},
	 { (char *)"OnTimerParam_msecDelay_set", _wrap_OnTimerParam_msecDelay_set, METH_VARARGS, NULL},
	 { (char *)"OnTimerParam_msecDelay_get", _wrap_OnTimerParam_msecDelay_get, METH_VARARGS, NULL},
	 { (char *)"new_OnTimerParam", _wrap_new_OnTimerParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnTimerParam", _wrap_delete_OnTimerParam, METH_VARARGS, NULL},
	 { (char *)"OnTimerParam_swigregister", OnTimerParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_hnd_set", _wrap_OnTransportStateParam_hnd_set, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_hnd_get", _wrap_OnTransportStateParam_hnd_get, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_state_set", _wrap_OnTransportStateParam_state_set, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_state_get", _wrap_OnTransportStateParam_state_get, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_lastError_set", _wrap_OnTransportStateParam_lastError_set, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_lastError_get", _wrap_OnTransportStateParam_lastError_get, METH_VARARGS, NULL},
	 { (char *)"new_OnTransportStateParam", _wrap_new_OnTransportStateParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnTransportStateParam", _wrap_delete_OnTransportStateParam, METH_VARARGS, NULL},
	 { (char *)"OnTransportStateParam_swigregister", OnTransportStateParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"OnSelectAccountParam_rdata_set", _wrap_OnSelectAccountParam_rdata_set, METH_VARARGS, NULL},
	 { (char *)"OnSelectAccountParam_rdata_get", _wrap_OnSelectAccountParam_rdata_get, METH_VARARGS, NULL},
	 { (char *)"OnSelectAccountParam_accountIndex_set", _wrap_OnSelectAccountParam_accountIndex_set, METH_VARARGS, NULL},
	 { (char *)"OnSelectAccountParam_accountIndex_get", _wrap_OnSelectAccountParam_accountIndex_get, METH_VARARGS, NULL},
	 { (char *)"new_OnSelectAccountParam", _wrap_new_OnSelectAccountParam, METH_VARARGS, NULL},
	 { (char *)"delete_OnSelectAccountParam", _wrap_delete_OnSelectAccountParam, METH_VARARGS, NULL},
	 { (char *)"OnSelectAccountParam_swigregister", OnSelectAccountParam_swigregister, METH_VARARGS, NULL},
	 { (char *)"UaConfig_maxCalls_set", _wrap_UaConfig_maxCalls_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_maxCalls_get", _wrap_UaConfig_maxCalls_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_threadCnt_set", _wrap_UaConfig_threadCnt_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_threadCnt_get", _wrap_UaConfig_threadCnt_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_mainThreadOnly_set", _wrap_UaConfig_mainThreadOnly_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_mainThreadOnly_get", _wrap_UaConfig_mainThreadOnly_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_nameserver_set", _wrap_UaConfig_nameserver_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_nameserver_get", _wrap_UaConfig_nameserver_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_userAgent_set", _wrap_UaConfig_userAgent_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_userAgent_get", _wrap_UaConfig_userAgent_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_stunServer_set", _wrap_UaConfig_stunServer_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_stunServer_get", _wrap_UaConfig_stunServer_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_stunIgnoreFailure_set", _wrap_UaConfig_stunIgnoreFailure_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_stunIgnoreFailure_get", _wrap_UaConfig_stunIgnoreFailure_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_natTypeInSdp_set", _wrap_UaConfig_natTypeInSdp_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_natTypeInSdp_get", _wrap_UaConfig_natTypeInSdp_get, METH_VARARGS, NULL},
	 { (char *)"UaConfig_mwiUnsolicitedEnabled_set", _wrap_UaConfig_mwiUnsolicitedEnabled_set, METH_VARARGS, NULL},
	 { (char *)"UaConfig_mwiUnsolicitedEnabled_get", _wrap_UaConfig_mwiUnsolicitedEnabled_get, METH_VARARGS, NULL},
	 { (char *)"new_UaConfig", _wrap_new_UaConfig, METH_VARARGS, NULL},
	 { (char *)"UaConfig_readObject", _wrap_UaConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"UaConfig_writeObject", _wrap_UaConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_UaConfig", _wrap_delete_UaConfig, METH_VARARGS, NULL},
	 { (char *)"UaConfig_swigregister", UaConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"LogEntry_level_set", _wrap_LogEntry_level_set, METH_VARARGS, NULL},
	 { (char *)"LogEntry_level_get", _wrap_LogEntry_level_get, METH_VARARGS, NULL},
	 { (char *)"LogEntry_msg_set", _wrap_LogEntry_msg_set, METH_VARARGS, NULL},
	 { (char *)"LogEntry_msg_get", _wrap_LogEntry_msg_get, METH_VARARGS, NULL},
	 { (char *)"LogEntry_threadId_set", _wrap_LogEntry_threadId_set, METH_VARARGS, NULL},
	 { (char *)"LogEntry_threadId_get", _wrap_LogEntry_threadId_get, METH_VARARGS, NULL},
	 { (char *)"LogEntry_threadName_set", _wrap_LogEntry_threadName_set, METH_VARARGS, NULL},
	 { (char *)"LogEntry_threadName_get", _wrap_LogEntry_threadName_get, METH_VARARGS, NULL},
	 { (char *)"new_LogEntry", _wrap_new_LogEntry, METH_VARARGS, NULL},
	 { (char *)"delete_LogEntry", _wrap_delete_LogEntry, METH_VARARGS, NULL},
	 { (char *)"LogEntry_swigregister", LogEntry_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_LogWriter", _wrap_delete_LogWriter, METH_VARARGS, NULL},
	 { (char *)"LogWriter_write", _wrap_LogWriter_write, METH_VARARGS, NULL},
	 { (char *)"new_LogWriter", _wrap_new_LogWriter, METH_VARARGS, NULL},
	 { (char *)"disown_LogWriter", _wrap_disown_LogWriter, METH_VARARGS, NULL},
	 { (char *)"LogWriter_swigregister", LogWriter_swigregister, METH_VARARGS, NULL},
	 { (char *)"LogConfig_msgLogging_set", _wrap_LogConfig_msgLogging_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_msgLogging_get", _wrap_LogConfig_msgLogging_get, METH_VARARGS, NULL},
	 { (char *)"LogConfig_level_set", _wrap_LogConfig_level_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_level_get", _wrap_LogConfig_level_get, METH_VARARGS, NULL},
	 { (char *)"LogConfig_consoleLevel_set", _wrap_LogConfig_consoleLevel_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_consoleLevel_get", _wrap_LogConfig_consoleLevel_get, METH_VARARGS, NULL},
	 { (char *)"LogConfig_decor_set", _wrap_LogConfig_decor_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_decor_get", _wrap_LogConfig_decor_get, METH_VARARGS, NULL},
	 { (char *)"LogConfig_filename_set", _wrap_LogConfig_filename_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_filename_get", _wrap_LogConfig_filename_get, METH_VARARGS, NULL},
	 { (char *)"LogConfig_fileFlags_set", _wrap_LogConfig_fileFlags_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_fileFlags_get", _wrap_LogConfig_fileFlags_get, METH_VARARGS, NULL},
	 { (char *)"LogConfig_writer_set", _wrap_LogConfig_writer_set, METH_VARARGS, NULL},
	 { (char *)"LogConfig_writer_get", _wrap_LogConfig_writer_get, METH_VARARGS, NULL},
	 { (char *)"new_LogConfig", _wrap_new_LogConfig, METH_VARARGS, NULL},
	 { (char *)"LogConfig_readObject", _wrap_LogConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"LogConfig_writeObject", _wrap_LogConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_LogConfig", _wrap_delete_LogConfig, METH_VARARGS, NULL},
	 { (char *)"LogConfig_swigregister", LogConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_clockRate_set", _wrap_MediaConfig_clockRate_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_clockRate_get", _wrap_MediaConfig_clockRate_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndClockRate_set", _wrap_MediaConfig_sndClockRate_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndClockRate_get", _wrap_MediaConfig_sndClockRate_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_channelCount_set", _wrap_MediaConfig_channelCount_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_channelCount_get", _wrap_MediaConfig_channelCount_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_audioFramePtime_set", _wrap_MediaConfig_audioFramePtime_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_audioFramePtime_get", _wrap_MediaConfig_audioFramePtime_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_maxMediaPorts_set", _wrap_MediaConfig_maxMediaPorts_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_maxMediaPorts_get", _wrap_MediaConfig_maxMediaPorts_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_hasIoqueue_set", _wrap_MediaConfig_hasIoqueue_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_hasIoqueue_get", _wrap_MediaConfig_hasIoqueue_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_threadCnt_set", _wrap_MediaConfig_threadCnt_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_threadCnt_get", _wrap_MediaConfig_threadCnt_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_quality_set", _wrap_MediaConfig_quality_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_quality_get", _wrap_MediaConfig_quality_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ptime_set", _wrap_MediaConfig_ptime_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ptime_get", _wrap_MediaConfig_ptime_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_noVad_set", _wrap_MediaConfig_noVad_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_noVad_get", _wrap_MediaConfig_noVad_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ilbcMode_set", _wrap_MediaConfig_ilbcMode_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ilbcMode_get", _wrap_MediaConfig_ilbcMode_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_txDropPct_set", _wrap_MediaConfig_txDropPct_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_txDropPct_get", _wrap_MediaConfig_txDropPct_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_rxDropPct_set", _wrap_MediaConfig_rxDropPct_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_rxDropPct_get", _wrap_MediaConfig_rxDropPct_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ecOptions_set", _wrap_MediaConfig_ecOptions_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ecOptions_get", _wrap_MediaConfig_ecOptions_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ecTailLen_set", _wrap_MediaConfig_ecTailLen_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_ecTailLen_get", _wrap_MediaConfig_ecTailLen_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndRecLatency_set", _wrap_MediaConfig_sndRecLatency_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndRecLatency_get", _wrap_MediaConfig_sndRecLatency_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndPlayLatency_set", _wrap_MediaConfig_sndPlayLatency_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndPlayLatency_get", _wrap_MediaConfig_sndPlayLatency_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbInit_set", _wrap_MediaConfig_jbInit_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbInit_get", _wrap_MediaConfig_jbInit_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbMinPre_set", _wrap_MediaConfig_jbMinPre_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbMinPre_get", _wrap_MediaConfig_jbMinPre_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbMaxPre_set", _wrap_MediaConfig_jbMaxPre_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbMaxPre_get", _wrap_MediaConfig_jbMaxPre_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbMax_set", _wrap_MediaConfig_jbMax_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_jbMax_get", _wrap_MediaConfig_jbMax_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndAutoCloseTime_set", _wrap_MediaConfig_sndAutoCloseTime_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_sndAutoCloseTime_get", _wrap_MediaConfig_sndAutoCloseTime_get, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_vidPreviewEnableNative_set", _wrap_MediaConfig_vidPreviewEnableNative_set, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_vidPreviewEnableNative_get", _wrap_MediaConfig_vidPreviewEnableNative_get, METH_VARARGS, NULL},
	 { (char *)"new_MediaConfig", _wrap_new_MediaConfig, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_readObject", _wrap_MediaConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_writeObject", _wrap_MediaConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"delete_MediaConfig", _wrap_delete_MediaConfig, METH_VARARGS, NULL},
	 { (char *)"MediaConfig_swigregister", MediaConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"EpConfig_uaConfig_set", _wrap_EpConfig_uaConfig_set, METH_VARARGS, NULL},
	 { (char *)"EpConfig_uaConfig_get", _wrap_EpConfig_uaConfig_get, METH_VARARGS, NULL},
	 { (char *)"EpConfig_logConfig_set", _wrap_EpConfig_logConfig_set, METH_VARARGS, NULL},
	 { (char *)"EpConfig_logConfig_get", _wrap_EpConfig_logConfig_get, METH_VARARGS, NULL},
	 { (char *)"EpConfig_medConfig_set", _wrap_EpConfig_medConfig_set, METH_VARARGS, NULL},
	 { (char *)"EpConfig_medConfig_get", _wrap_EpConfig_medConfig_get, METH_VARARGS, NULL},
	 { (char *)"EpConfig_readObject", _wrap_EpConfig_readObject, METH_VARARGS, NULL},
	 { (char *)"EpConfig_writeObject", _wrap_EpConfig_writeObject, METH_VARARGS, NULL},
	 { (char *)"new_EpConfig", _wrap_new_EpConfig, METH_VARARGS, NULL},
	 { (char *)"delete_EpConfig", _wrap_delete_EpConfig, METH_VARARGS, NULL},
	 { (char *)"EpConfig_swigregister", EpConfig_swigregister, METH_VARARGS, NULL},
	 { (char *)"PendingJob_execute", _wrap_PendingJob_execute, METH_VARARGS, NULL},
	 { (char *)"delete_PendingJob", _wrap_delete_PendingJob, METH_VARARGS, NULL},
	 { (char *)"PendingJob_swigregister", PendingJob_swigregister, METH_VARARGS, NULL},
	 { (char *)"Endpoint_instance", _wrap_Endpoint_instance, METH_VARARGS, NULL},
	 { (char *)"new_Endpoint", _wrap_new_Endpoint, METH_VARARGS, NULL},
	 { (char *)"delete_Endpoint", _wrap_delete_Endpoint, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libVersion", _wrap_Endpoint_libVersion, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libCreate", _wrap_Endpoint_libCreate, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libGetState", _wrap_Endpoint_libGetState, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libInit", _wrap_Endpoint_libInit, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libStart", _wrap_Endpoint_libStart, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libRegisterThread", _wrap_Endpoint_libRegisterThread, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libIsThreadRegistered", _wrap_Endpoint_libIsThreadRegistered, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libStopWorkerThreads", _wrap_Endpoint_libStopWorkerThreads, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libHandleEvents", _wrap_Endpoint_libHandleEvents, METH_VARARGS, NULL},
	 { (char *)"Endpoint_libDestroy", _wrap_Endpoint_libDestroy, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilStrError", _wrap_Endpoint_utilStrError, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilLogWrite", _wrap_Endpoint_utilLogWrite, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilVerifySipUri", _wrap_Endpoint_utilVerifySipUri, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilVerifyUri", _wrap_Endpoint_utilVerifyUri, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilTimerSchedule", _wrap_Endpoint_utilTimerSchedule, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilTimerCancel", _wrap_Endpoint_utilTimerCancel, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilAddPendingJob", _wrap_Endpoint_utilAddPendingJob, METH_VARARGS, NULL},
	 { (char *)"Endpoint_utilSslGetAvailableCiphers", _wrap_Endpoint_utilSslGetAvailableCiphers, METH_VARARGS, NULL},
	 { (char *)"Endpoint_natDetectType", _wrap_Endpoint_natDetectType, METH_VARARGS, NULL},
	 { (char *)"Endpoint_natGetType", _wrap_Endpoint_natGetType, METH_VARARGS, NULL},
	 { (char *)"Endpoint_natCheckStunServers", _wrap_Endpoint_natCheckStunServers, METH_VARARGS, NULL},
	 { (char *)"Endpoint_natCancelCheckStunServers", _wrap_Endpoint_natCancelCheckStunServers, METH_VARARGS, NULL},
	 { (char *)"Endpoint_transportCreate", _wrap_Endpoint_transportCreate, METH_VARARGS, NULL},
	 { (char *)"Endpoint_transportEnum", _wrap_Endpoint_transportEnum, METH_VARARGS, NULL},
	 { (char *)"Endpoint_transportGetInfo", _wrap_Endpoint_transportGetInfo, METH_VARARGS, NULL},
	 { (char *)"Endpoint_transportSetEnable", _wrap_Endpoint_transportSetEnable, METH_VARARGS, NULL},
	 { (char *)"Endpoint_transportClose", _wrap_Endpoint_transportClose, METH_VARARGS, NULL},
	 { (char *)"Endpoint_hangupAllCalls", _wrap_Endpoint_hangupAllCalls, METH_VARARGS, NULL},
	 { (char *)"Endpoint_mediaAdd", _wrap_Endpoint_mediaAdd, METH_VARARGS, NULL},
	 { (char *)"Endpoint_mediaRemove", _wrap_Endpoint_mediaRemove, METH_VARARGS, NULL},
	 { (char *)"Endpoint_mediaExists", _wrap_Endpoint_mediaExists, METH_VARARGS, NULL},
	 { (char *)"Endpoint_mediaMaxPorts", _wrap_Endpoint_mediaMaxPorts, METH_VARARGS, NULL},
	 { (char *)"Endpoint_mediaActivePorts", _wrap_Endpoint_mediaActivePorts, METH_VARARGS, NULL},
	 { (char *)"Endpoint_mediaEnumPorts", _wrap_Endpoint_mediaEnumPorts, METH_VARARGS, NULL},
	 { (char *)"Endpoint_audDevManager", _wrap_Endpoint_audDevManager, METH_VARARGS, NULL},
	 { (char *)"Endpoint_codecEnum", _wrap_Endpoint_codecEnum, METH_VARARGS, NULL},
	 { (char *)"Endpoint_codecSetPriority", _wrap_Endpoint_codecSetPriority, METH_VARARGS, NULL},
	 { (char *)"Endpoint_codecGetParam", _wrap_Endpoint_codecGetParam, METH_VARARGS, NULL},
	 { (char *)"Endpoint_codecSetParam", _wrap_Endpoint_codecSetParam, METH_VARARGS, NULL},
	 { (char *)"Endpoint_onNatDetectionComplete", _wrap_Endpoint_onNatDetectionComplete, METH_VARARGS, NULL},
	 { (char *)"Endpoint_onNatCheckStunServersComplete", _wrap_Endpoint_onNatCheckStunServersComplete, METH_VARARGS, NULL},
	 { (char *)"Endpoint_onTransportState", _wrap_Endpoint_onTransportState, METH_VARARGS, NULL},
	 { (char *)"Endpoint_onTimer", _wrap_Endpoint_onTimer, METH_VARARGS, NULL},
	 { (char *)"Endpoint_onSelectAccount", _wrap_Endpoint_onSelectAccount, METH_VARARGS, NULL},
	 { (char *)"disown_Endpoint", _wrap_disown_Endpoint, METH_VARARGS, NULL},
	 { (char *)"Endpoint_swigregister", Endpoint_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_pj__ToneDescTo_p_pjmedia_tone_desc(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pjmedia_tone_desc *)  ((pj::ToneDesc *) x));
}
static void *_p_pj__JsonDocumentTo_p_pj__PersistentDocument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentDocument *)  ((pj::JsonDocument *) x));
}
static void *_p_pj__AuthCredInfoTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AuthCredInfo *) x));
}
static void *_p_pj__UaConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::UaConfig *) x));
}
static void *_p_pj__AccountVideoConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountVideoConfig *) x));
}
static void *_p_pj__AccountMediaConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountMediaConfig *) x));
}
static void *_p_pj__AccountMwiConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountMwiConfig *) x));
}
static void *_p_pj__AccountPresConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountPresConfig *) x));
}
static void *_p_pj__AccountRegConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountRegConfig *) x));
}
static void *_p_pj__BuddyConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::BuddyConfig *) x));
}
static void *_p_pj__TlsConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::TlsConfig *) x));
}
static void *_p_pj__LogConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::LogConfig *) x));
}
static void *_p_pj__MediaConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::MediaConfig *) x));
}
static void *_p_pj__AccountConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountConfig *) x));
}
static void *_p_pj__AccountNatConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountNatConfig *) x));
}
static void *_p_pj__AccountCallConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountCallConfig *) x));
}
static void *_p_pj__AccountSipConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::AccountSipConfig *) x));
}
static void *_p_pj__TransportConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::TransportConfig *) x));
}
static void *_p_pj__EpConfigTo_p_pj__PersistentObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::PersistentObject *)  ((pj::EpConfig *) x));
}
static void *_p_pj__AudioMediaRecorderTo_p_pj__AudioMedia(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::AudioMedia *)  ((pj::AudioMediaRecorder *) x));
}
static void *_p_pj__ToneGeneratorTo_p_pj__AudioMedia(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::AudioMedia *)  ((pj::ToneGenerator *) x));
}
static void *_p_pj__AudioMediaPlayerTo_p_pj__AudioMedia(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::AudioMedia *)  ((pj::AudioMediaPlayer *) x));
}
static void *_p_pj__ToneDigitTo_p_pjmedia_tone_digit(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pjmedia_tone_digit *)  ((pj::ToneDigit *) x));
}
static void *_p_pj__MediaFormatAudioTo_p_pj__MediaFormat(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::MediaFormat *)  ((pj::MediaFormatAudio *) x));
}
static void *_p_pj__MediaFormatVideoTo_p_pj__MediaFormat(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::MediaFormat *)  ((pj::MediaFormatVideo *) x));
}
static void *_p_pj__AudioMediaTo_p_pj__Media(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::Media *)  ((pj::AudioMedia *) x));
}
static void *_p_pj__AudioMediaRecorderTo_p_pj__Media(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::Media *) (pj::AudioMedia *) ((pj::AudioMediaRecorder *) x));
}
static void *_p_pj__ToneGeneratorTo_p_pj__Media(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::Media *) (pj::AudioMedia *) ((pj::ToneGenerator *) x));
}
static void *_p_pj__AudioMediaPlayerTo_p_pj__Media(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((pj::Media *) (pj::AudioMedia *) ((pj::AudioMediaPlayer *) x));
}
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reference = {"_p_const_reference", "const_reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "pjsua_acc_id *|int *|pjmedia_vid_dev_index *|pj_int32_t *|pjsua_vid_win_id *|pj::TransportId *|pjsua_call_id *|pj_status_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_PyObject = {"_p_p_PyObject", "PyObject **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **|pj::MediaPort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Account = {"_p_pj__Account", "pj::Account *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountCallConfig = {"_p_pj__AccountCallConfig", "pj::AccountCallConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountConfig = {"_p_pj__AccountConfig", "pj::AccountConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountInfo = {"_p_pj__AccountInfo", "pj::AccountInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountMediaConfig = {"_p_pj__AccountMediaConfig", "pj::AccountMediaConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountMwiConfig = {"_p_pj__AccountMwiConfig", "pj::AccountMwiConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountNatConfig = {"_p_pj__AccountNatConfig", "pj::AccountNatConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountPresConfig = {"_p_pj__AccountPresConfig", "pj::AccountPresConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountRegConfig = {"_p_pj__AccountRegConfig", "pj::AccountRegConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountSipConfig = {"_p_pj__AccountSipConfig", "pj::AccountSipConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AccountVideoConfig = {"_p_pj__AccountVideoConfig", "pj::AccountVideoConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AudDevManager = {"_p_pj__AudDevManager", "pj::AudDevManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AudioDevInfo = {"_p_pj__AudioDevInfo", "pj::AudioDevInfo *|std::vector< pj::AudioDevInfo * >::value_type", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AudioMedia = {"_p_pj__AudioMedia", "std::vector< pj::AudioMedia * >::value_type|pj::AudioMedia *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AudioMediaPlayer = {"_p_pj__AudioMediaPlayer", "pj::AudioMediaPlayer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AudioMediaPlayerInfo = {"_p_pj__AudioMediaPlayerInfo", "pj::AudioMediaPlayerInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AudioMediaRecorder = {"_p_pj__AudioMediaRecorder", "pj::AudioMediaRecorder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__AuthCredInfo = {"_p_pj__AuthCredInfo", "pj::AuthCredInfo *|std::vector< pj::AuthCredInfo >::value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Buddy = {"_p_pj__Buddy", "std::vector< pj::Buddy * >::value_type|pj::Buddy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__BuddyConfig = {"_p_pj__BuddyConfig", "pj::BuddyConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__BuddyInfo = {"_p_pj__BuddyInfo", "pj::BuddyInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Call = {"_p_pj__Call", "pj::Call *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CallInfo = {"_p_pj__CallInfo", "pj::CallInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CallMediaInfo = {"_p_pj__CallMediaInfo", "std::vector< pj::CallMediaInfo >::value_type *|pj::CallMediaInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CallOpParam = {"_p_pj__CallOpParam", "pj::CallOpParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CallSendRequestParam = {"_p_pj__CallSendRequestParam", "pj::CallSendRequestParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CallSetting = {"_p_pj__CallSetting", "pj::CallSetting *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CallVidSetStreamParam = {"_p_pj__CallVidSetStreamParam", "pj::CallVidSetStreamParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__CodecInfo = {"_p_pj__CodecInfo", "pj::CodecInfo *|std::vector< pj::CodecInfo * >::value_type", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__ConfPortInfo = {"_p_pj__ConfPortInfo", "pj::ConfPortInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__ContainerNode = {"_p_pj__ContainerNode", "pj::ContainerNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Endpoint = {"_p_pj__Endpoint", "pj::Endpoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__EpConfig = {"_p_pj__EpConfig", "pj::EpConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Error = {"_p_pj__Error", "pj::Error *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__FindBuddyMatch = {"_p_pj__FindBuddyMatch", "pj::FindBuddyMatch *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__JbufState = {"_p_pj__JbufState", "pj::JbufState *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__JsonDocument = {"_p_pj__JsonDocument", "pj::JsonDocument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__LogConfig = {"_p_pj__LogConfig", "pj::LogConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__LogEntry = {"_p_pj__LogEntry", "pj::LogEntry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__LogWriter = {"_p_pj__LogWriter", "pj::LogWriter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MathStat = {"_p_pj__MathStat", "pj::MathStat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Media = {"_p_pj__Media", "pj::Media *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaConfig = {"_p_pj__MediaConfig", "pj::MediaConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaEvent = {"_p_pj__MediaEvent", "pj::MediaEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaFmtChangedEvent = {"_p_pj__MediaFmtChangedEvent", "pj::MediaFmtChangedEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaFormat = {"_p_pj__MediaFormat", "std::vector< pj::MediaFormat * >::value_type|pj::MediaFormat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaFormatAudio = {"_p_pj__MediaFormatAudio", "pj::MediaFormatAudio *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaFormatVideo = {"_p_pj__MediaFormatVideo", "pj::MediaFormatVideo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__MediaTransportInfo = {"_p_pj__MediaTransportInfo", "pj::MediaTransportInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallMediaEventParam = {"_p_pj__OnCallMediaEventParam", "pj::OnCallMediaEventParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallMediaStateParam = {"_p_pj__OnCallMediaStateParam", "pj::OnCallMediaStateParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallMediaTransportStateParam = {"_p_pj__OnCallMediaTransportStateParam", "pj::OnCallMediaTransportStateParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallRedirectedParam = {"_p_pj__OnCallRedirectedParam", "pj::OnCallRedirectedParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallReplaceRequestParam = {"_p_pj__OnCallReplaceRequestParam", "pj::OnCallReplaceRequestParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallReplacedParam = {"_p_pj__OnCallReplacedParam", "pj::OnCallReplacedParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallRxOfferParam = {"_p_pj__OnCallRxOfferParam", "pj::OnCallRxOfferParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallSdpCreatedParam = {"_p_pj__OnCallSdpCreatedParam", "pj::OnCallSdpCreatedParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallStateParam = {"_p_pj__OnCallStateParam", "pj::OnCallStateParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallTransferRequestParam = {"_p_pj__OnCallTransferRequestParam", "pj::OnCallTransferRequestParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallTransferStatusParam = {"_p_pj__OnCallTransferStatusParam", "pj::OnCallTransferStatusParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCallTsxStateParam = {"_p_pj__OnCallTsxStateParam", "pj::OnCallTsxStateParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnCreateMediaTransportParam = {"_p_pj__OnCreateMediaTransportParam", "pj::OnCreateMediaTransportParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnDtmfDigitParam = {"_p_pj__OnDtmfDigitParam", "pj::OnDtmfDigitParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnIncomingCallParam = {"_p_pj__OnIncomingCallParam", "pj::OnIncomingCallParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnIncomingSubscribeParam = {"_p_pj__OnIncomingSubscribeParam", "pj::OnIncomingSubscribeParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnInstantMessageParam = {"_p_pj__OnInstantMessageParam", "pj::OnInstantMessageParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnInstantMessageStatusParam = {"_p_pj__OnInstantMessageStatusParam", "pj::OnInstantMessageStatusParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnMwiInfoParam = {"_p_pj__OnMwiInfoParam", "pj::OnMwiInfoParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnNatCheckStunServersCompleteParam = {"_p_pj__OnNatCheckStunServersCompleteParam", "pj::OnNatCheckStunServersCompleteParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnNatDetectionCompleteParam = {"_p_pj__OnNatDetectionCompleteParam", "pj::OnNatDetectionCompleteParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnRegStartedParam = {"_p_pj__OnRegStartedParam", "pj::OnRegStartedParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnRegStateParam = {"_p_pj__OnRegStateParam", "pj::OnRegStateParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnSelectAccountParam = {"_p_pj__OnSelectAccountParam", "pj::OnSelectAccountParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnStreamCreatedParam = {"_p_pj__OnStreamCreatedParam", "pj::OnStreamCreatedParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnStreamDestroyedParam = {"_p_pj__OnStreamDestroyedParam", "pj::OnStreamDestroyedParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnTimerParam = {"_p_pj__OnTimerParam", "pj::OnTimerParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnTransportStateParam = {"_p_pj__OnTransportStateParam", "pj::OnTransportStateParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__OnTypingIndicationParam = {"_p_pj__OnTypingIndicationParam", "pj::OnTypingIndicationParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__PendingJob = {"_p_pj__PendingJob", "pj::PendingJob *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__PersistentDocument = {"_p_pj__PersistentDocument", "pj::PersistentDocument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__PersistentObject = {"_p_pj__PersistentObject", "pj::PersistentObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__PresNotifyParam = {"_p_pj__PresNotifyParam", "pj::PresNotifyParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__PresenceStatus = {"_p_pj__PresenceStatus", "pj::PresenceStatus *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__RtcpSdes = {"_p_pj__RtcpSdes", "pj::RtcpSdes *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__RtcpStat = {"_p_pj__RtcpStat", "pj::RtcpStat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__RtcpStreamStat = {"_p_pj__RtcpStreamStat", "pj::RtcpStreamStat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__RxMsgEvent = {"_p_pj__RxMsgEvent", "pj::RxMsgEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SdpSession = {"_p_pj__SdpSession", "pj::SdpSession *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SendInstantMessageParam = {"_p_pj__SendInstantMessageParam", "pj::SendInstantMessageParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SendTypingIndicationParam = {"_p_pj__SendTypingIndicationParam", "pj::SendTypingIndicationParam *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipEvent = {"_p_pj__SipEvent", "pj::SipEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipHeader = {"_p_pj__SipHeader", "std::vector< pj::SipHeader >::value_type *|pj::SipHeader *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipMediaType = {"_p_pj__SipMediaType", "pj::SipMediaType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipMultipartPart = {"_p_pj__SipMultipartPart", "std::vector< pj::SipMultipartPart >::value_type *|pj::SipMultipartPart *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipRxData = {"_p_pj__SipRxData", "pj::SipRxData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipTransaction = {"_p_pj__SipTransaction", "pj::SipTransaction *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipTxData = {"_p_pj__SipTxData", "pj::SipTxData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__SipTxOption = {"_p_pj__SipTxOption", "pj::SipTxOption *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__StreamInfo = {"_p_pj__StreamInfo", "pj::StreamInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__StreamStat = {"_p_pj__StreamStat", "pj::StreamStat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TimeVal = {"_p_pj__TimeVal", "pj::TimeVal *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TimerEvent = {"_p_pj__TimerEvent", "pj::TimerEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TlsConfig = {"_p_pj__TlsConfig", "pj::TlsConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__ToneDesc = {"_p_pj__ToneDesc", "pj::ToneDesc *|std::vector< pj::ToneDesc >::value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__ToneDigit = {"_p_pj__ToneDigit", "pj::ToneDigit *|std::vector< pj::ToneDigit >::value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__ToneDigitMapDigit = {"_p_pj__ToneDigitMapDigit", "pj::ToneDigitMapDigit *|std::vector< pj::ToneDigitMapDigit >::value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__ToneGenerator = {"_p_pj__ToneGenerator", "pj::ToneGenerator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TransportConfig = {"_p_pj__TransportConfig", "pj::TransportConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TransportInfo = {"_p_pj__TransportInfo", "pj::TransportInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TsxStateEvent = {"_p_pj__TsxStateEvent", "pj::TsxStateEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TxErrorEvent = {"_p_pj__TxErrorEvent", "pj::TxErrorEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__TxMsgEvent = {"_p_pj__TxMsgEvent", "pj::TxMsgEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__UaConfig = {"_p_pj__UaConfig", "pj::UaConfig *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__UserEvent = {"_p_pj__UserEvent", "pj::UserEvent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj__Version = {"_p_pj__Version", "pj::Version *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_bool_t = {"_p_pj_bool_t", "pj_bool_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_qos_flag = {"_p_pj_qos_flag", "enum pj_qos_flag *|pj_qos_flag *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_qos_params = {"_p_pj_qos_params", "pj_qos_params *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_qos_type = {"_p_pj_qos_type", "enum pj_qos_type *|pj_qos_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_qos_wmm_prio = {"_p_pj_qos_wmm_prio", "enum pj_qos_wmm_prio *|pj_qos_wmm_prio *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_ssize_t = {"_p_pj_ssize_t", "pj_ssize_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_ssl_cipher = {"_p_pj_ssl_cipher", "enum pj_ssl_cipher *|pj_ssl_cipher *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_stun_nat_type = {"_p_pj_stun_nat_type", "enum pj_stun_nat_type *|pj_stun_nat_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pj_turn_tp_type = {"_p_pj_turn_tp_type", "enum pj_turn_tp_type *|pj_turn_tp_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_aud_dev_cap = {"_p_pjmedia_aud_dev_cap", "enum pjmedia_aud_dev_cap *|pjmedia_aud_dev_cap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_aud_dev_route = {"_p_pjmedia_aud_dev_route", "enum pjmedia_aud_dev_route *|pjmedia_aud_dev_route *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_dir = {"_p_pjmedia_dir", "enum pjmedia_dir *|pjmedia_dir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_event_type = {"_p_pjmedia_event_type", "enum pjmedia_event_type *|pjmedia_event_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_format_id = {"_p_pjmedia_format_id", "enum pjmedia_format_id *|pjmedia_format_id *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_srtp_use = {"_p_pjmedia_srtp_use", "enum pjmedia_srtp_use *|pjmedia_srtp_use *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_tone_desc = {"_p_pjmedia_tone_desc", "pjmedia_tone_desc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_tone_digit = {"_p_pjmedia_tone_digit", "pjmedia_tone_digit *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_tone_digit_map = {"_p_pjmedia_tone_digit_map", "pjmedia_tone_digit_map *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_tp_proto = {"_p_pjmedia_tp_proto", "enum pjmedia_tp_proto *|pjmedia_tp_proto *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_type = {"_p_pjmedia_type", "enum pjmedia_type *|pjmedia_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjmedia_vid_stream_rc_method = {"_p_pjmedia_vid_stream_rc_method", "enum pjmedia_vid_stream_rc_method *|pjmedia_vid_stream_rc_method *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjrpid_activity = {"_p_pjrpid_activity", "enum pjrpid_activity *|pjrpid_activity *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_cred_data_type = {"_p_pjsip_cred_data_type", "enum pjsip_cred_data_type *|pjsip_cred_data_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_dialog_cap_status = {"_p_pjsip_dialog_cap_status", "enum pjsip_dialog_cap_status *|pjsip_dialog_cap_status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_event_id_e = {"_p_pjsip_event_id_e", "enum pjsip_event_id_e *|pjsip_event_id_e *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_evsub_state = {"_p_pjsip_evsub_state", "enum pjsip_evsub_state *|pjsip_evsub_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_hdr_e = {"_p_pjsip_hdr_e", "enum pjsip_hdr_e *|pjsip_hdr_e *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_inv_state = {"_p_pjsip_inv_state", "enum pjsip_inv_state *|pjsip_inv_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_redirect_op = {"_p_pjsip_redirect_op", "enum pjsip_redirect_op *|pjsip_redirect_op *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_role_e = {"_p_pjsip_role_e", "enum pjsip_role_e *|pjsip_role_e *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_ssl_method = {"_p_pjsip_ssl_method", "enum pjsip_ssl_method *|pjsip_ssl_method *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_status_code = {"_p_pjsip_status_code", "enum pjsip_status_code *|pjsip_status_code *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_transport_state = {"_p_pjsip_transport_state", "enum pjsip_transport_state *|pjsip_transport_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_transport_type_e = {"_p_pjsip_transport_type_e", "enum pjsip_transport_type_e *|pjsip_transport_type_e *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsip_tsx_state_e = {"_p_pjsip_tsx_state_e", "enum pjsip_tsx_state_e *|pjsip_tsx_state_e *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_100rel_use = {"_p_pjsua_100rel_use", "enum pjsua_100rel_use *|pjsua_100rel_use *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_buddy_status = {"_p_pjsua_buddy_status", "enum pjsua_buddy_status *|pjsua_buddy_status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_call_flag = {"_p_pjsua_call_flag", "enum pjsua_call_flag *|pjsua_call_flag *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_call_hold_type = {"_p_pjsua_call_hold_type", "enum pjsua_call_hold_type *|pjsua_call_hold_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_call_media_status = {"_p_pjsua_call_media_status", "enum pjsua_call_media_status *|pjsua_call_media_status *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_call_vid_strm_op = {"_p_pjsua_call_vid_strm_op", "enum pjsua_call_vid_strm_op *|pjsua_call_vid_strm_op *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_create_media_transport_flag = {"_p_pjsua_create_media_transport_flag", "enum pjsua_create_media_transport_flag *|pjsua_create_media_transport_flag *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_destroy_flag = {"_p_pjsua_destroy_flag", "enum pjsua_destroy_flag *|pjsua_destroy_flag *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_ipv6_use = {"_p_pjsua_ipv6_use", "enum pjsua_ipv6_use *|pjsua_ipv6_use *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_med_tp_st = {"_p_pjsua_med_tp_st", "enum pjsua_med_tp_st *|pjsua_med_tp_st *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_sip_timer_use = {"_p_pjsua_sip_timer_use", "enum pjsua_sip_timer_use *|pjsua_sip_timer_use *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_state = {"_p_pjsua_state", "enum pjsua_state *|pjsua_state *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_stun_use = {"_p_pjsua_stun_use", "enum pjsua_stun_use *|pjsua_stun_use *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pjsua_vid_req_keyframe_method = {"_p_pjsua_vid_req_keyframe_method", "enum pjsua_vid_req_keyframe_method *|pjsua_vid_req_keyframe_method *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_reference = {"_p_reference", "reference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_int_t = {"_p_std__allocatorT_int_t", "std::vector< int >::allocator_type *|std::allocator< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__AudioDevInfo_p_t = {"_p_std__allocatorT_pj__AudioDevInfo_p_t", "std::allocator< pj::AudioDevInfo * > *|std::vector< pj::AudioDevInfo * >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__AudioMedia_p_t = {"_p_std__allocatorT_pj__AudioMedia_p_t", "std::vector< pj::AudioMedia * >::allocator_type *|std::allocator< pj::AudioMedia * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__AuthCredInfo_t = {"_p_std__allocatorT_pj__AuthCredInfo_t", "std::vector< pj::AuthCredInfo >::allocator_type *|std::allocator< pj::AuthCredInfo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__Buddy_p_t = {"_p_std__allocatorT_pj__Buddy_p_t", "std::vector< pj::Buddy * >::allocator_type *|std::allocator< pj::Buddy * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__CallMediaInfo_t = {"_p_std__allocatorT_pj__CallMediaInfo_t", "std::vector< pj::CallMediaInfo >::allocator_type *|std::allocator< pj::CallMediaInfo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__CodecInfo_p_t = {"_p_std__allocatorT_pj__CodecInfo_p_t", "std::vector< pj::CodecInfo * >::allocator_type *|std::allocator< pj::CodecInfo * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__MediaFormat_p_t = {"_p_std__allocatorT_pj__MediaFormat_p_t", "std::vector< pj::MediaFormat * >::allocator_type *|std::allocator< pj::MediaFormat * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__SipHeader_t = {"_p_std__allocatorT_pj__SipHeader_t", "std::vector< pj::SipHeader >::allocator_type *|std::allocator< pj::SipHeader > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__SipMultipartPart_t = {"_p_std__allocatorT_pj__SipMultipartPart_t", "std::allocator< pj::SipMultipartPart > *|std::vector< pj::SipMultipartPart >::allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__ToneDesc_t = {"_p_std__allocatorT_pj__ToneDesc_t", "std::vector< pj::ToneDesc >::allocator_type *|std::allocator< pj::ToneDesc > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__ToneDigitMapDigit_t = {"_p_std__allocatorT_pj__ToneDigitMapDigit_t", "std::vector< pj::ToneDigitMapDigit >::allocator_type *|std::allocator< pj::ToneDigitMapDigit > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_pj__ToneDigit_t = {"_p_std__allocatorT_pj__ToneDigit_t", "std::vector< pj::ToneDigit >::allocator_type *|std::allocator< pj::ToneDigit > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__allocatorT_std__string_t = {"_p_std__allocatorT_std__string_t", "std::vector< std::string >::allocator_type *|std::allocator< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "pj::SocketAddress *|std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT__Tp__Alloc_t = {"_p_std__vectorT__Tp__Alloc_t", "std::vector< _Tp,_Alloc > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT__Tp_p__Alloc_t = {"_p_std__vectorT__Tp_p__Alloc_t", "std::vector< _Tp *,_Alloc > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_int_std__allocatorT_int_t_t = {"_p_std__vectorT_int_std__allocatorT_int_t_t", "std::vector< int,std::allocator< int > > *|pj::IntVector *|std::vector< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t = {"_p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t", "std::vector< pj::AudioDevInfo *,std::allocator< pj::AudioDevInfo * > > *|std::vector< pj::AudioDevInfo * > *|pj::AudioDevInfoVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t = {"_p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t", "std::vector< pj::AudioMedia *,std::allocator< pj::AudioMedia * > > *|std::vector< pj::AudioMedia * > *|pj::AudioMediaVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t = {"_p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t", "std::vector< pj::AuthCredInfo,std::allocator< pj::AuthCredInfo > > *|std::vector< pj::AuthCredInfo > *|pj::AuthCredInfoVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t = {"_p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t", "std::vector< pj::Buddy *,std::allocator< pj::Buddy * > > *|std::vector< pj::Buddy * > *|pj::BuddyVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t = {"_p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t", "std::vector< pj::CallMediaInfo,std::allocator< pj::CallMediaInfo > > *|pj::CallMediaInfoVector *|std::vector< pj::CallMediaInfo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t = {"_p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t", "std::vector< pj::CodecInfo * > *|std::vector< pj::CodecInfo *,std::allocator< pj::CodecInfo * > > *|pj::CodecInfoVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t = {"_p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t", "std::vector< pj::MediaFormat * > *|std::vector< pj::MediaFormat *,std::allocator< pj::MediaFormat * > > *|pj::MediaFormatVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t = {"_p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t", "std::vector< pj::SipHeader,std::allocator< pj::SipHeader > > *|std::vector< pj::SipHeader > *|pj::SipHeaderVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t = {"_p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t", "std::vector< pj::SipMultipartPart > *|std::vector< pj::SipMultipartPart,std::allocator< pj::SipMultipartPart > > *|pj::SipMultipartPartVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t = {"_p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t", "std::vector< pj::ToneDesc > *|std::vector< pj::ToneDesc,std::allocator< pj::ToneDesc > > *|pj::ToneDescVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t = {"_p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t", "std::vector< pj::ToneDigitMapDigit,std::allocator< pj::ToneDigitMapDigit > > *|std::vector< pj::ToneDigitMapDigit > *|pj::ToneDigitMapVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t = {"_p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t", "std::vector< pj::ToneDigit > *|std::vector< pj::ToneDigit,std::allocator< pj::ToneDigit > > *|pj::ToneDigitVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t", "std::vector< std::string,std::allocator< std::string > > *|std::vector< std::string > *|pj::StringVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|pj_uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "pj_uint32_t *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *|pj_uint16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "pj::CodecParam|pj::MediaStream|pj::MediaPort|pj::MediaTransport|pj::TransportHandle|pj::Token|void *|pj::TimerEntry|pj::GenericData", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_allocator_type,
  &_swigt__p_char,
  &_swigt__p_const_reference,
  &_swigt__p_difference_type,
  &_swigt__p_int,
  &_swigt__p_p_PyObject,
  &_swigt__p_p_void,
  &_swigt__p_pj__Account,
  &_swigt__p_pj__AccountCallConfig,
  &_swigt__p_pj__AccountConfig,
  &_swigt__p_pj__AccountInfo,
  &_swigt__p_pj__AccountMediaConfig,
  &_swigt__p_pj__AccountMwiConfig,
  &_swigt__p_pj__AccountNatConfig,
  &_swigt__p_pj__AccountPresConfig,
  &_swigt__p_pj__AccountRegConfig,
  &_swigt__p_pj__AccountSipConfig,
  &_swigt__p_pj__AccountVideoConfig,
  &_swigt__p_pj__AudDevManager,
  &_swigt__p_pj__AudioDevInfo,
  &_swigt__p_pj__AudioMedia,
  &_swigt__p_pj__AudioMediaPlayer,
  &_swigt__p_pj__AudioMediaPlayerInfo,
  &_swigt__p_pj__AudioMediaRecorder,
  &_swigt__p_pj__AuthCredInfo,
  &_swigt__p_pj__Buddy,
  &_swigt__p_pj__BuddyConfig,
  &_swigt__p_pj__BuddyInfo,
  &_swigt__p_pj__Call,
  &_swigt__p_pj__CallInfo,
  &_swigt__p_pj__CallMediaInfo,
  &_swigt__p_pj__CallOpParam,
  &_swigt__p_pj__CallSendRequestParam,
  &_swigt__p_pj__CallSetting,
  &_swigt__p_pj__CallVidSetStreamParam,
  &_swigt__p_pj__CodecInfo,
  &_swigt__p_pj__ConfPortInfo,
  &_swigt__p_pj__ContainerNode,
  &_swigt__p_pj__Endpoint,
  &_swigt__p_pj__EpConfig,
  &_swigt__p_pj__Error,
  &_swigt__p_pj__FindBuddyMatch,
  &_swigt__p_pj__JbufState,
  &_swigt__p_pj__JsonDocument,
  &_swigt__p_pj__LogConfig,
  &_swigt__p_pj__LogEntry,
  &_swigt__p_pj__LogWriter,
  &_swigt__p_pj__MathStat,
  &_swigt__p_pj__Media,
  &_swigt__p_pj__MediaConfig,
  &_swigt__p_pj__MediaEvent,
  &_swigt__p_pj__MediaFmtChangedEvent,
  &_swigt__p_pj__MediaFormat,
  &_swigt__p_pj__MediaFormatAudio,
  &_swigt__p_pj__MediaFormatVideo,
  &_swigt__p_pj__MediaTransportInfo,
  &_swigt__p_pj__OnCallMediaEventParam,
  &_swigt__p_pj__OnCallMediaStateParam,
  &_swigt__p_pj__OnCallMediaTransportStateParam,
  &_swigt__p_pj__OnCallRedirectedParam,
  &_swigt__p_pj__OnCallReplaceRequestParam,
  &_swigt__p_pj__OnCallReplacedParam,
  &_swigt__p_pj__OnCallRxOfferParam,
  &_swigt__p_pj__OnCallSdpCreatedParam,
  &_swigt__p_pj__OnCallStateParam,
  &_swigt__p_pj__OnCallTransferRequestParam,
  &_swigt__p_pj__OnCallTransferStatusParam,
  &_swigt__p_pj__OnCallTsxStateParam,
  &_swigt__p_pj__OnCreateMediaTransportParam,
  &_swigt__p_pj__OnDtmfDigitParam,
  &_swigt__p_pj__OnIncomingCallParam,
  &_swigt__p_pj__OnIncomingSubscribeParam,
  &_swigt__p_pj__OnInstantMessageParam,
  &_swigt__p_pj__OnInstantMessageStatusParam,
  &_swigt__p_pj__OnMwiInfoParam,
  &_swigt__p_pj__OnNatCheckStunServersCompleteParam,
  &_swigt__p_pj__OnNatDetectionCompleteParam,
  &_swigt__p_pj__OnRegStartedParam,
  &_swigt__p_pj__OnRegStateParam,
  &_swigt__p_pj__OnSelectAccountParam,
  &_swigt__p_pj__OnStreamCreatedParam,
  &_swigt__p_pj__OnStreamDestroyedParam,
  &_swigt__p_pj__OnTimerParam,
  &_swigt__p_pj__OnTransportStateParam,
  &_swigt__p_pj__OnTypingIndicationParam,
  &_swigt__p_pj__PendingJob,
  &_swigt__p_pj__PersistentDocument,
  &_swigt__p_pj__PersistentObject,
  &_swigt__p_pj__PresNotifyParam,
  &_swigt__p_pj__PresenceStatus,
  &_swigt__p_pj__RtcpSdes,
  &_swigt__p_pj__RtcpStat,
  &_swigt__p_pj__RtcpStreamStat,
  &_swigt__p_pj__RxMsgEvent,
  &_swigt__p_pj__SdpSession,
  &_swigt__p_pj__SendInstantMessageParam,
  &_swigt__p_pj__SendTypingIndicationParam,
  &_swigt__p_pj__SipEvent,
  &_swigt__p_pj__SipHeader,
  &_swigt__p_pj__SipMediaType,
  &_swigt__p_pj__SipMultipartPart,
  &_swigt__p_pj__SipRxData,
  &_swigt__p_pj__SipTransaction,
  &_swigt__p_pj__SipTxData,
  &_swigt__p_pj__SipTxOption,
  &_swigt__p_pj__StreamInfo,
  &_swigt__p_pj__StreamStat,
  &_swigt__p_pj__TimeVal,
  &_swigt__p_pj__TimerEvent,
  &_swigt__p_pj__TlsConfig,
  &_swigt__p_pj__ToneDesc,
  &_swigt__p_pj__ToneDigit,
  &_swigt__p_pj__ToneDigitMapDigit,
  &_swigt__p_pj__ToneGenerator,
  &_swigt__p_pj__TransportConfig,
  &_swigt__p_pj__TransportInfo,
  &_swigt__p_pj__TsxStateEvent,
  &_swigt__p_pj__TxErrorEvent,
  &_swigt__p_pj__TxMsgEvent,
  &_swigt__p_pj__UaConfig,
  &_swigt__p_pj__UserEvent,
  &_swigt__p_pj__Version,
  &_swigt__p_pj_bool_t,
  &_swigt__p_pj_qos_flag,
  &_swigt__p_pj_qos_params,
  &_swigt__p_pj_qos_type,
  &_swigt__p_pj_qos_wmm_prio,
  &_swigt__p_pj_ssize_t,
  &_swigt__p_pj_ssl_cipher,
  &_swigt__p_pj_stun_nat_type,
  &_swigt__p_pj_turn_tp_type,
  &_swigt__p_pjmedia_aud_dev_cap,
  &_swigt__p_pjmedia_aud_dev_route,
  &_swigt__p_pjmedia_dir,
  &_swigt__p_pjmedia_event_type,
  &_swigt__p_pjmedia_format_id,
  &_swigt__p_pjmedia_srtp_use,
  &_swigt__p_pjmedia_tone_desc,
  &_swigt__p_pjmedia_tone_digit,
  &_swigt__p_pjmedia_tone_digit_map,
  &_swigt__p_pjmedia_tp_proto,
  &_swigt__p_pjmedia_type,
  &_swigt__p_pjmedia_vid_stream_rc_method,
  &_swigt__p_pjrpid_activity,
  &_swigt__p_pjsip_cred_data_type,
  &_swigt__p_pjsip_dialog_cap_status,
  &_swigt__p_pjsip_event_id_e,
  &_swigt__p_pjsip_evsub_state,
  &_swigt__p_pjsip_hdr_e,
  &_swigt__p_pjsip_inv_state,
  &_swigt__p_pjsip_redirect_op,
  &_swigt__p_pjsip_role_e,
  &_swigt__p_pjsip_ssl_method,
  &_swigt__p_pjsip_status_code,
  &_swigt__p_pjsip_transport_state,
  &_swigt__p_pjsip_transport_type_e,
  &_swigt__p_pjsip_tsx_state_e,
  &_swigt__p_pjsua_100rel_use,
  &_swigt__p_pjsua_buddy_status,
  &_swigt__p_pjsua_call_flag,
  &_swigt__p_pjsua_call_hold_type,
  &_swigt__p_pjsua_call_media_status,
  &_swigt__p_pjsua_call_vid_strm_op,
  &_swigt__p_pjsua_create_media_transport_flag,
  &_swigt__p_pjsua_destroy_flag,
  &_swigt__p_pjsua_ipv6_use,
  &_swigt__p_pjsua_med_tp_st,
  &_swigt__p_pjsua_sip_timer_use,
  &_swigt__p_pjsua_state,
  &_swigt__p_pjsua_stun_use,
  &_swigt__p_pjsua_vid_req_keyframe_method,
  &_swigt__p_reference,
  &_swigt__p_size_type,
  &_swigt__p_std__allocatorT_int_t,
  &_swigt__p_std__allocatorT_pj__AudioDevInfo_p_t,
  &_swigt__p_std__allocatorT_pj__AudioMedia_p_t,
  &_swigt__p_std__allocatorT_pj__AuthCredInfo_t,
  &_swigt__p_std__allocatorT_pj__Buddy_p_t,
  &_swigt__p_std__allocatorT_pj__CallMediaInfo_t,
  &_swigt__p_std__allocatorT_pj__CodecInfo_p_t,
  &_swigt__p_std__allocatorT_pj__MediaFormat_p_t,
  &_swigt__p_std__allocatorT_pj__SipHeader_t,
  &_swigt__p_std__allocatorT_pj__SipMultipartPart_t,
  &_swigt__p_std__allocatorT_pj__ToneDesc_t,
  &_swigt__p_std__allocatorT_pj__ToneDigitMapDigit_t,
  &_swigt__p_std__allocatorT_pj__ToneDigit_t,
  &_swigt__p_std__allocatorT_std__string_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT__Tp__Alloc_t,
  &_swigt__p_std__vectorT__Tp_p__Alloc_t,
  &_swigt__p_std__vectorT_int_std__allocatorT_int_t_t,
  &_swigt__p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t,
  &_swigt__p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t,
  &_swigt__p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t,
  &_swigt__p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t,
  &_swigt__p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t,
  &_swigt__p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t,
  &_swigt__p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t,
  &_swigt__p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t,
  &_swigt__p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t,
  &_swigt__p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t,
  &_swigt__p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t,
  &_swigt__p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reference[] = {  {&_swigt__p_const_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_PyObject[] = {  {&_swigt__p_p_PyObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Account[] = {  {&_swigt__p_pj__Account, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountCallConfig[] = {  {&_swigt__p_pj__AccountCallConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountConfig[] = {  {&_swigt__p_pj__AccountConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountInfo[] = {  {&_swigt__p_pj__AccountInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountMediaConfig[] = {  {&_swigt__p_pj__AccountMediaConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountMwiConfig[] = {  {&_swigt__p_pj__AccountMwiConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountNatConfig[] = {  {&_swigt__p_pj__AccountNatConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountPresConfig[] = {  {&_swigt__p_pj__AccountPresConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountRegConfig[] = {  {&_swigt__p_pj__AccountRegConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountSipConfig[] = {  {&_swigt__p_pj__AccountSipConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AccountVideoConfig[] = {  {&_swigt__p_pj__AccountVideoConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AudDevManager[] = {  {&_swigt__p_pj__AudDevManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AudioDevInfo[] = {  {&_swigt__p_pj__AudioDevInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AudioMedia[] = {  {&_swigt__p_pj__AudioMedia, 0, 0, 0},  {&_swigt__p_pj__AudioMediaRecorder, _p_pj__AudioMediaRecorderTo_p_pj__AudioMedia, 0, 0},  {&_swigt__p_pj__ToneGenerator, _p_pj__ToneGeneratorTo_p_pj__AudioMedia, 0, 0},  {&_swigt__p_pj__AudioMediaPlayer, _p_pj__AudioMediaPlayerTo_p_pj__AudioMedia, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AudioMediaPlayer[] = {  {&_swigt__p_pj__AudioMediaPlayer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AudioMediaPlayerInfo[] = {  {&_swigt__p_pj__AudioMediaPlayerInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AudioMediaRecorder[] = {  {&_swigt__p_pj__AudioMediaRecorder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__AuthCredInfo[] = {  {&_swigt__p_pj__AuthCredInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Buddy[] = {  {&_swigt__p_pj__Buddy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__BuddyConfig[] = {  {&_swigt__p_pj__BuddyConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__BuddyInfo[] = {  {&_swigt__p_pj__BuddyInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Call[] = {  {&_swigt__p_pj__Call, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CallInfo[] = {  {&_swigt__p_pj__CallInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CallMediaInfo[] = {  {&_swigt__p_pj__CallMediaInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CallOpParam[] = {  {&_swigt__p_pj__CallOpParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CallSendRequestParam[] = {  {&_swigt__p_pj__CallSendRequestParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CallSetting[] = {  {&_swigt__p_pj__CallSetting, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CallVidSetStreamParam[] = {  {&_swigt__p_pj__CallVidSetStreamParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__CodecInfo[] = {  {&_swigt__p_pj__CodecInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__ConfPortInfo[] = {  {&_swigt__p_pj__ConfPortInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__ContainerNode[] = {  {&_swigt__p_pj__ContainerNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Endpoint[] = {  {&_swigt__p_pj__Endpoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__EpConfig[] = {  {&_swigt__p_pj__EpConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Error[] = {  {&_swigt__p_pj__Error, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__FindBuddyMatch[] = {  {&_swigt__p_pj__FindBuddyMatch, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__JbufState[] = {  {&_swigt__p_pj__JbufState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__JsonDocument[] = {  {&_swigt__p_pj__JsonDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__LogConfig[] = {  {&_swigt__p_pj__LogConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__LogEntry[] = {  {&_swigt__p_pj__LogEntry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__LogWriter[] = {  {&_swigt__p_pj__LogWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MathStat[] = {  {&_swigt__p_pj__MathStat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Media[] = {  {&_swigt__p_pj__AudioMedia, _p_pj__AudioMediaTo_p_pj__Media, 0, 0},  {&_swigt__p_pj__AudioMediaRecorder, _p_pj__AudioMediaRecorderTo_p_pj__Media, 0, 0},  {&_swigt__p_pj__ToneGenerator, _p_pj__ToneGeneratorTo_p_pj__Media, 0, 0},  {&_swigt__p_pj__Media, 0, 0, 0},  {&_swigt__p_pj__AudioMediaPlayer, _p_pj__AudioMediaPlayerTo_p_pj__Media, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaConfig[] = {  {&_swigt__p_pj__MediaConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaEvent[] = {  {&_swigt__p_pj__MediaEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaFmtChangedEvent[] = {  {&_swigt__p_pj__MediaFmtChangedEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaFormat[] = {  {&_swigt__p_pj__MediaFormatAudio, _p_pj__MediaFormatAudioTo_p_pj__MediaFormat, 0, 0},  {&_swigt__p_pj__MediaFormatVideo, _p_pj__MediaFormatVideoTo_p_pj__MediaFormat, 0, 0},  {&_swigt__p_pj__MediaFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaFormatAudio[] = {  {&_swigt__p_pj__MediaFormatAudio, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaFormatVideo[] = {  {&_swigt__p_pj__MediaFormatVideo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__MediaTransportInfo[] = {  {&_swigt__p_pj__MediaTransportInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallMediaEventParam[] = {  {&_swigt__p_pj__OnCallMediaEventParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallMediaStateParam[] = {  {&_swigt__p_pj__OnCallMediaStateParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallMediaTransportStateParam[] = {  {&_swigt__p_pj__OnCallMediaTransportStateParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallRedirectedParam[] = {  {&_swigt__p_pj__OnCallRedirectedParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallReplaceRequestParam[] = {  {&_swigt__p_pj__OnCallReplaceRequestParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallReplacedParam[] = {  {&_swigt__p_pj__OnCallReplacedParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallRxOfferParam[] = {  {&_swigt__p_pj__OnCallRxOfferParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallSdpCreatedParam[] = {  {&_swigt__p_pj__OnCallSdpCreatedParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallStateParam[] = {  {&_swigt__p_pj__OnCallStateParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallTransferRequestParam[] = {  {&_swigt__p_pj__OnCallTransferRequestParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallTransferStatusParam[] = {  {&_swigt__p_pj__OnCallTransferStatusParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCallTsxStateParam[] = {  {&_swigt__p_pj__OnCallTsxStateParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnCreateMediaTransportParam[] = {  {&_swigt__p_pj__OnCreateMediaTransportParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnDtmfDigitParam[] = {  {&_swigt__p_pj__OnDtmfDigitParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnIncomingCallParam[] = {  {&_swigt__p_pj__OnIncomingCallParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnIncomingSubscribeParam[] = {  {&_swigt__p_pj__OnIncomingSubscribeParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnInstantMessageParam[] = {  {&_swigt__p_pj__OnInstantMessageParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnInstantMessageStatusParam[] = {  {&_swigt__p_pj__OnInstantMessageStatusParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnMwiInfoParam[] = {  {&_swigt__p_pj__OnMwiInfoParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnNatCheckStunServersCompleteParam[] = {  {&_swigt__p_pj__OnNatCheckStunServersCompleteParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnNatDetectionCompleteParam[] = {  {&_swigt__p_pj__OnNatDetectionCompleteParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnRegStartedParam[] = {  {&_swigt__p_pj__OnRegStartedParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnRegStateParam[] = {  {&_swigt__p_pj__OnRegStateParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnSelectAccountParam[] = {  {&_swigt__p_pj__OnSelectAccountParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnStreamCreatedParam[] = {  {&_swigt__p_pj__OnStreamCreatedParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnStreamDestroyedParam[] = {  {&_swigt__p_pj__OnStreamDestroyedParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnTimerParam[] = {  {&_swigt__p_pj__OnTimerParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnTransportStateParam[] = {  {&_swigt__p_pj__OnTransportStateParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__OnTypingIndicationParam[] = {  {&_swigt__p_pj__OnTypingIndicationParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__PendingJob[] = {  {&_swigt__p_pj__PendingJob, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__PersistentDocument[] = {  {&_swigt__p_pj__PersistentDocument, 0, 0, 0},  {&_swigt__p_pj__JsonDocument, _p_pj__JsonDocumentTo_p_pj__PersistentDocument, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__PersistentObject[] = {  {&_swigt__p_pj__PersistentObject, 0, 0, 0},  {&_swigt__p_pj__AuthCredInfo, _p_pj__AuthCredInfoTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__UaConfig, _p_pj__UaConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountVideoConfig, _p_pj__AccountVideoConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountMediaConfig, _p_pj__AccountMediaConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountMwiConfig, _p_pj__AccountMwiConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountPresConfig, _p_pj__AccountPresConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountRegConfig, _p_pj__AccountRegConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__BuddyConfig, _p_pj__BuddyConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__TlsConfig, _p_pj__TlsConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__LogConfig, _p_pj__LogConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__MediaConfig, _p_pj__MediaConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountConfig, _p_pj__AccountConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountNatConfig, _p_pj__AccountNatConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountCallConfig, _p_pj__AccountCallConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__AccountSipConfig, _p_pj__AccountSipConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__TransportConfig, _p_pj__TransportConfigTo_p_pj__PersistentObject, 0, 0},  {&_swigt__p_pj__EpConfig, _p_pj__EpConfigTo_p_pj__PersistentObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__PresNotifyParam[] = {  {&_swigt__p_pj__PresNotifyParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__PresenceStatus[] = {  {&_swigt__p_pj__PresenceStatus, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__RtcpSdes[] = {  {&_swigt__p_pj__RtcpSdes, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__RtcpStat[] = {  {&_swigt__p_pj__RtcpStat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__RtcpStreamStat[] = {  {&_swigt__p_pj__RtcpStreamStat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__RxMsgEvent[] = {  {&_swigt__p_pj__RxMsgEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SdpSession[] = {  {&_swigt__p_pj__SdpSession, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SendInstantMessageParam[] = {  {&_swigt__p_pj__SendInstantMessageParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SendTypingIndicationParam[] = {  {&_swigt__p_pj__SendTypingIndicationParam, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipEvent[] = {  {&_swigt__p_pj__SipEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipHeader[] = {  {&_swigt__p_pj__SipHeader, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipMediaType[] = {  {&_swigt__p_pj__SipMediaType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipMultipartPart[] = {  {&_swigt__p_pj__SipMultipartPart, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipRxData[] = {  {&_swigt__p_pj__SipRxData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipTransaction[] = {  {&_swigt__p_pj__SipTransaction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipTxData[] = {  {&_swigt__p_pj__SipTxData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__SipTxOption[] = {  {&_swigt__p_pj__SipTxOption, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__StreamInfo[] = {  {&_swigt__p_pj__StreamInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__StreamStat[] = {  {&_swigt__p_pj__StreamStat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TimeVal[] = {  {&_swigt__p_pj__TimeVal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TimerEvent[] = {  {&_swigt__p_pj__TimerEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TlsConfig[] = {  {&_swigt__p_pj__TlsConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__ToneDesc[] = {  {&_swigt__p_pj__ToneDesc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__ToneDigit[] = {  {&_swigt__p_pj__ToneDigit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__ToneDigitMapDigit[] = {  {&_swigt__p_pj__ToneDigitMapDigit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__ToneGenerator[] = {  {&_swigt__p_pj__ToneGenerator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TransportConfig[] = {  {&_swigt__p_pj__TransportConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TransportInfo[] = {  {&_swigt__p_pj__TransportInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TsxStateEvent[] = {  {&_swigt__p_pj__TsxStateEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TxErrorEvent[] = {  {&_swigt__p_pj__TxErrorEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__TxMsgEvent[] = {  {&_swigt__p_pj__TxMsgEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__UaConfig[] = {  {&_swigt__p_pj__UaConfig, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__UserEvent[] = {  {&_swigt__p_pj__UserEvent, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj__Version[] = {  {&_swigt__p_pj__Version, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_bool_t[] = {  {&_swigt__p_pj_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_qos_flag[] = {  {&_swigt__p_pj_qos_flag, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_qos_params[] = {  {&_swigt__p_pj_qos_params, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_qos_type[] = {  {&_swigt__p_pj_qos_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_qos_wmm_prio[] = {  {&_swigt__p_pj_qos_wmm_prio, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_ssize_t[] = {  {&_swigt__p_pj_ssize_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_ssl_cipher[] = {  {&_swigt__p_pj_ssl_cipher, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_stun_nat_type[] = {  {&_swigt__p_pj_stun_nat_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pj_turn_tp_type[] = {  {&_swigt__p_pj_turn_tp_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_aud_dev_cap[] = {  {&_swigt__p_pjmedia_aud_dev_cap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_aud_dev_route[] = {  {&_swigt__p_pjmedia_aud_dev_route, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_dir[] = {  {&_swigt__p_pjmedia_dir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_event_type[] = {  {&_swigt__p_pjmedia_event_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_format_id[] = {  {&_swigt__p_pjmedia_format_id, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_srtp_use[] = {  {&_swigt__p_pjmedia_srtp_use, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_tone_desc[] = {  {&_swigt__p_pj__ToneDesc, _p_pj__ToneDescTo_p_pjmedia_tone_desc, 0, 0},  {&_swigt__p_pjmedia_tone_desc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_tone_digit[] = {  {&_swigt__p_pj__ToneDigit, _p_pj__ToneDigitTo_p_pjmedia_tone_digit, 0, 0},  {&_swigt__p_pjmedia_tone_digit, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_tone_digit_map[] = {  {&_swigt__p_pjmedia_tone_digit_map, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_tp_proto[] = {  {&_swigt__p_pjmedia_tp_proto, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_type[] = {  {&_swigt__p_pjmedia_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjmedia_vid_stream_rc_method[] = {  {&_swigt__p_pjmedia_vid_stream_rc_method, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjrpid_activity[] = {  {&_swigt__p_pjrpid_activity, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_cred_data_type[] = {  {&_swigt__p_pjsip_cred_data_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_dialog_cap_status[] = {  {&_swigt__p_pjsip_dialog_cap_status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_event_id_e[] = {  {&_swigt__p_pjsip_event_id_e, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_evsub_state[] = {  {&_swigt__p_pjsip_evsub_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_hdr_e[] = {  {&_swigt__p_pjsip_hdr_e, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_inv_state[] = {  {&_swigt__p_pjsip_inv_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_redirect_op[] = {  {&_swigt__p_pjsip_redirect_op, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_role_e[] = {  {&_swigt__p_pjsip_role_e, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_ssl_method[] = {  {&_swigt__p_pjsip_ssl_method, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_status_code[] = {  {&_swigt__p_pjsip_status_code, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_transport_state[] = {  {&_swigt__p_pjsip_transport_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_transport_type_e[] = {  {&_swigt__p_pjsip_transport_type_e, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsip_tsx_state_e[] = {  {&_swigt__p_pjsip_tsx_state_e, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_100rel_use[] = {  {&_swigt__p_pjsua_100rel_use, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_buddy_status[] = {  {&_swigt__p_pjsua_buddy_status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_call_flag[] = {  {&_swigt__p_pjsua_call_flag, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_call_hold_type[] = {  {&_swigt__p_pjsua_call_hold_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_call_media_status[] = {  {&_swigt__p_pjsua_call_media_status, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_call_vid_strm_op[] = {  {&_swigt__p_pjsua_call_vid_strm_op, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_create_media_transport_flag[] = {  {&_swigt__p_pjsua_create_media_transport_flag, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_destroy_flag[] = {  {&_swigt__p_pjsua_destroy_flag, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_ipv6_use[] = {  {&_swigt__p_pjsua_ipv6_use, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_med_tp_st[] = {  {&_swigt__p_pjsua_med_tp_st, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_sip_timer_use[] = {  {&_swigt__p_pjsua_sip_timer_use, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_state[] = {  {&_swigt__p_pjsua_state, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_stun_use[] = {  {&_swigt__p_pjsua_stun_use, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pjsua_vid_req_keyframe_method[] = {  {&_swigt__p_pjsua_vid_req_keyframe_method, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_reference[] = {  {&_swigt__p_reference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_int_t[] = {  {&_swigt__p_std__allocatorT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__AudioDevInfo_p_t[] = {  {&_swigt__p_std__allocatorT_pj__AudioDevInfo_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__AudioMedia_p_t[] = {  {&_swigt__p_std__allocatorT_pj__AudioMedia_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__AuthCredInfo_t[] = {  {&_swigt__p_std__allocatorT_pj__AuthCredInfo_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__Buddy_p_t[] = {  {&_swigt__p_std__allocatorT_pj__Buddy_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__CallMediaInfo_t[] = {  {&_swigt__p_std__allocatorT_pj__CallMediaInfo_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__CodecInfo_p_t[] = {  {&_swigt__p_std__allocatorT_pj__CodecInfo_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__MediaFormat_p_t[] = {  {&_swigt__p_std__allocatorT_pj__MediaFormat_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__SipHeader_t[] = {  {&_swigt__p_std__allocatorT_pj__SipHeader_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__SipMultipartPart_t[] = {  {&_swigt__p_std__allocatorT_pj__SipMultipartPart_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__ToneDesc_t[] = {  {&_swigt__p_std__allocatorT_pj__ToneDesc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__ToneDigitMapDigit_t[] = {  {&_swigt__p_std__allocatorT_pj__ToneDigitMapDigit_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_pj__ToneDigit_t[] = {  {&_swigt__p_std__allocatorT_pj__ToneDigit_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__allocatorT_std__string_t[] = {  {&_swigt__p_std__allocatorT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT__Tp__Alloc_t[] = {  {&_swigt__p_std__vectorT__Tp__Alloc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT__Tp_p__Alloc_t[] = {  {&_swigt__p_std__vectorT__Tp_p__Alloc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_int_std__allocatorT_int_t_t[] = {  {&_swigt__p_std__vectorT_int_std__allocatorT_int_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t[] = {  {&_swigt__p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t[] = {  {&_swigt__p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t[] = {  {&_swigt__p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t[] = {  {&_swigt__p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t[] = {  {&_swigt__p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t[] = {  {&_swigt__p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t[] = {  {&_swigt__p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t[] = {  {&_swigt__p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t[] = {  {&_swigt__p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t[] = {  {&_swigt__p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t[] = {  {&_swigt__p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t[] = {  {&_swigt__p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_allocator_type,
  _swigc__p_char,
  _swigc__p_const_reference,
  _swigc__p_difference_type,
  _swigc__p_int,
  _swigc__p_p_PyObject,
  _swigc__p_p_void,
  _swigc__p_pj__Account,
  _swigc__p_pj__AccountCallConfig,
  _swigc__p_pj__AccountConfig,
  _swigc__p_pj__AccountInfo,
  _swigc__p_pj__AccountMediaConfig,
  _swigc__p_pj__AccountMwiConfig,
  _swigc__p_pj__AccountNatConfig,
  _swigc__p_pj__AccountPresConfig,
  _swigc__p_pj__AccountRegConfig,
  _swigc__p_pj__AccountSipConfig,
  _swigc__p_pj__AccountVideoConfig,
  _swigc__p_pj__AudDevManager,
  _swigc__p_pj__AudioDevInfo,
  _swigc__p_pj__AudioMedia,
  _swigc__p_pj__AudioMediaPlayer,
  _swigc__p_pj__AudioMediaPlayerInfo,
  _swigc__p_pj__AudioMediaRecorder,
  _swigc__p_pj__AuthCredInfo,
  _swigc__p_pj__Buddy,
  _swigc__p_pj__BuddyConfig,
  _swigc__p_pj__BuddyInfo,
  _swigc__p_pj__Call,
  _swigc__p_pj__CallInfo,
  _swigc__p_pj__CallMediaInfo,
  _swigc__p_pj__CallOpParam,
  _swigc__p_pj__CallSendRequestParam,
  _swigc__p_pj__CallSetting,
  _swigc__p_pj__CallVidSetStreamParam,
  _swigc__p_pj__CodecInfo,
  _swigc__p_pj__ConfPortInfo,
  _swigc__p_pj__ContainerNode,
  _swigc__p_pj__Endpoint,
  _swigc__p_pj__EpConfig,
  _swigc__p_pj__Error,
  _swigc__p_pj__FindBuddyMatch,
  _swigc__p_pj__JbufState,
  _swigc__p_pj__JsonDocument,
  _swigc__p_pj__LogConfig,
  _swigc__p_pj__LogEntry,
  _swigc__p_pj__LogWriter,
  _swigc__p_pj__MathStat,
  _swigc__p_pj__Media,
  _swigc__p_pj__MediaConfig,
  _swigc__p_pj__MediaEvent,
  _swigc__p_pj__MediaFmtChangedEvent,
  _swigc__p_pj__MediaFormat,
  _swigc__p_pj__MediaFormatAudio,
  _swigc__p_pj__MediaFormatVideo,
  _swigc__p_pj__MediaTransportInfo,
  _swigc__p_pj__OnCallMediaEventParam,
  _swigc__p_pj__OnCallMediaStateParam,
  _swigc__p_pj__OnCallMediaTransportStateParam,
  _swigc__p_pj__OnCallRedirectedParam,
  _swigc__p_pj__OnCallReplaceRequestParam,
  _swigc__p_pj__OnCallReplacedParam,
  _swigc__p_pj__OnCallRxOfferParam,
  _swigc__p_pj__OnCallSdpCreatedParam,
  _swigc__p_pj__OnCallStateParam,
  _swigc__p_pj__OnCallTransferRequestParam,
  _swigc__p_pj__OnCallTransferStatusParam,
  _swigc__p_pj__OnCallTsxStateParam,
  _swigc__p_pj__OnCreateMediaTransportParam,
  _swigc__p_pj__OnDtmfDigitParam,
  _swigc__p_pj__OnIncomingCallParam,
  _swigc__p_pj__OnIncomingSubscribeParam,
  _swigc__p_pj__OnInstantMessageParam,
  _swigc__p_pj__OnInstantMessageStatusParam,
  _swigc__p_pj__OnMwiInfoParam,
  _swigc__p_pj__OnNatCheckStunServersCompleteParam,
  _swigc__p_pj__OnNatDetectionCompleteParam,
  _swigc__p_pj__OnRegStartedParam,
  _swigc__p_pj__OnRegStateParam,
  _swigc__p_pj__OnSelectAccountParam,
  _swigc__p_pj__OnStreamCreatedParam,
  _swigc__p_pj__OnStreamDestroyedParam,
  _swigc__p_pj__OnTimerParam,
  _swigc__p_pj__OnTransportStateParam,
  _swigc__p_pj__OnTypingIndicationParam,
  _swigc__p_pj__PendingJob,
  _swigc__p_pj__PersistentDocument,
  _swigc__p_pj__PersistentObject,
  _swigc__p_pj__PresNotifyParam,
  _swigc__p_pj__PresenceStatus,
  _swigc__p_pj__RtcpSdes,
  _swigc__p_pj__RtcpStat,
  _swigc__p_pj__RtcpStreamStat,
  _swigc__p_pj__RxMsgEvent,
  _swigc__p_pj__SdpSession,
  _swigc__p_pj__SendInstantMessageParam,
  _swigc__p_pj__SendTypingIndicationParam,
  _swigc__p_pj__SipEvent,
  _swigc__p_pj__SipHeader,
  _swigc__p_pj__SipMediaType,
  _swigc__p_pj__SipMultipartPart,
  _swigc__p_pj__SipRxData,
  _swigc__p_pj__SipTransaction,
  _swigc__p_pj__SipTxData,
  _swigc__p_pj__SipTxOption,
  _swigc__p_pj__StreamInfo,
  _swigc__p_pj__StreamStat,
  _swigc__p_pj__TimeVal,
  _swigc__p_pj__TimerEvent,
  _swigc__p_pj__TlsConfig,
  _swigc__p_pj__ToneDesc,
  _swigc__p_pj__ToneDigit,
  _swigc__p_pj__ToneDigitMapDigit,
  _swigc__p_pj__ToneGenerator,
  _swigc__p_pj__TransportConfig,
  _swigc__p_pj__TransportInfo,
  _swigc__p_pj__TsxStateEvent,
  _swigc__p_pj__TxErrorEvent,
  _swigc__p_pj__TxMsgEvent,
  _swigc__p_pj__UaConfig,
  _swigc__p_pj__UserEvent,
  _swigc__p_pj__Version,
  _swigc__p_pj_bool_t,
  _swigc__p_pj_qos_flag,
  _swigc__p_pj_qos_params,
  _swigc__p_pj_qos_type,
  _swigc__p_pj_qos_wmm_prio,
  _swigc__p_pj_ssize_t,
  _swigc__p_pj_ssl_cipher,
  _swigc__p_pj_stun_nat_type,
  _swigc__p_pj_turn_tp_type,
  _swigc__p_pjmedia_aud_dev_cap,
  _swigc__p_pjmedia_aud_dev_route,
  _swigc__p_pjmedia_dir,
  _swigc__p_pjmedia_event_type,
  _swigc__p_pjmedia_format_id,
  _swigc__p_pjmedia_srtp_use,
  _swigc__p_pjmedia_tone_desc,
  _swigc__p_pjmedia_tone_digit,
  _swigc__p_pjmedia_tone_digit_map,
  _swigc__p_pjmedia_tp_proto,
  _swigc__p_pjmedia_type,
  _swigc__p_pjmedia_vid_stream_rc_method,
  _swigc__p_pjrpid_activity,
  _swigc__p_pjsip_cred_data_type,
  _swigc__p_pjsip_dialog_cap_status,
  _swigc__p_pjsip_event_id_e,
  _swigc__p_pjsip_evsub_state,
  _swigc__p_pjsip_hdr_e,
  _swigc__p_pjsip_inv_state,
  _swigc__p_pjsip_redirect_op,
  _swigc__p_pjsip_role_e,
  _swigc__p_pjsip_ssl_method,
  _swigc__p_pjsip_status_code,
  _swigc__p_pjsip_transport_state,
  _swigc__p_pjsip_transport_type_e,
  _swigc__p_pjsip_tsx_state_e,
  _swigc__p_pjsua_100rel_use,
  _swigc__p_pjsua_buddy_status,
  _swigc__p_pjsua_call_flag,
  _swigc__p_pjsua_call_hold_type,
  _swigc__p_pjsua_call_media_status,
  _swigc__p_pjsua_call_vid_strm_op,
  _swigc__p_pjsua_create_media_transport_flag,
  _swigc__p_pjsua_destroy_flag,
  _swigc__p_pjsua_ipv6_use,
  _swigc__p_pjsua_med_tp_st,
  _swigc__p_pjsua_sip_timer_use,
  _swigc__p_pjsua_state,
  _swigc__p_pjsua_stun_use,
  _swigc__p_pjsua_vid_req_keyframe_method,
  _swigc__p_reference,
  _swigc__p_size_type,
  _swigc__p_std__allocatorT_int_t,
  _swigc__p_std__allocatorT_pj__AudioDevInfo_p_t,
  _swigc__p_std__allocatorT_pj__AudioMedia_p_t,
  _swigc__p_std__allocatorT_pj__AuthCredInfo_t,
  _swigc__p_std__allocatorT_pj__Buddy_p_t,
  _swigc__p_std__allocatorT_pj__CallMediaInfo_t,
  _swigc__p_std__allocatorT_pj__CodecInfo_p_t,
  _swigc__p_std__allocatorT_pj__MediaFormat_p_t,
  _swigc__p_std__allocatorT_pj__SipHeader_t,
  _swigc__p_std__allocatorT_pj__SipMultipartPart_t,
  _swigc__p_std__allocatorT_pj__ToneDesc_t,
  _swigc__p_std__allocatorT_pj__ToneDigitMapDigit_t,
  _swigc__p_std__allocatorT_pj__ToneDigit_t,
  _swigc__p_std__allocatorT_std__string_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__string,
  _swigc__p_std__vectorT__Tp__Alloc_t,
  _swigc__p_std__vectorT__Tp_p__Alloc_t,
  _swigc__p_std__vectorT_int_std__allocatorT_int_t_t,
  _swigc__p_std__vectorT_pj__AudioDevInfo_p_std__allocatorT_pj__AudioDevInfo_p_t_t,
  _swigc__p_std__vectorT_pj__AudioMedia_p_std__allocatorT_pj__AudioMedia_p_t_t,
  _swigc__p_std__vectorT_pj__AuthCredInfo_std__allocatorT_pj__AuthCredInfo_t_t,
  _swigc__p_std__vectorT_pj__Buddy_p_std__allocatorT_pj__Buddy_p_t_t,
  _swigc__p_std__vectorT_pj__CallMediaInfo_std__allocatorT_pj__CallMediaInfo_t_t,
  _swigc__p_std__vectorT_pj__CodecInfo_p_std__allocatorT_pj__CodecInfo_p_t_t,
  _swigc__p_std__vectorT_pj__MediaFormat_p_std__allocatorT_pj__MediaFormat_p_t_t,
  _swigc__p_std__vectorT_pj__SipHeader_std__allocatorT_pj__SipHeader_t_t,
  _swigc__p_std__vectorT_pj__SipMultipartPart_std__allocatorT_pj__SipMultipartPart_t_t,
  _swigc__p_std__vectorT_pj__ToneDesc_std__allocatorT_pj__ToneDesc_t_t,
  _swigc__p_std__vectorT_pj__ToneDigitMapDigit_std__allocatorT_pj__ToneDigitMapDigit_t_t,
  _swigc__p_std__vectorT_pj__ToneDigit_std__allocatorT_pj__ToneDigit_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "PJ_SUCCESS",SWIG_From_int(static_cast< int >(PJ_SUCCESS)));
  SWIG_Python_SetConstant(d, "PJ_TRUE",SWIG_From_int(static_cast< int >(PJ_TRUE)));
  SWIG_Python_SetConstant(d, "PJ_FALSE",SWIG_From_int(static_cast< int >(PJ_FALSE)));
  SWIG_Python_SetConstant(d, "PJ_O_RDONLY",SWIG_From_int(static_cast< int >(PJ_O_RDONLY)));
  SWIG_Python_SetConstant(d, "PJ_O_WRONLY",SWIG_From_int(static_cast< int >(PJ_O_WRONLY)));
  SWIG_Python_SetConstant(d, "PJ_O_RDWR",SWIG_From_int(static_cast< int >(PJ_O_RDWR)));
  SWIG_Python_SetConstant(d, "PJ_O_APPEND",SWIG_From_int(static_cast< int >(PJ_O_APPEND)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_DAY_NAME",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_DAY_NAME)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_YEAR",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_YEAR)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_MONTH",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_MONTH)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_DAY_OF_MON",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_DAY_OF_MON)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_TIME",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_TIME)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_MICRO_SEC",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_MICRO_SEC)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_SENDER",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_SENDER)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_NEWLINE",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_NEWLINE)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_CR",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_CR)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_SPACE",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_SPACE)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_COLOR",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_COLOR)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_LEVEL_TEXT",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_LEVEL_TEXT)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_THREAD_ID",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_THREAD_ID)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_THREAD_SWC",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_THREAD_SWC)));
  SWIG_Python_SetConstant(d, "PJ_LOG_HAS_INDENT",SWIG_From_int(static_cast< int >(PJ_LOG_HAS_INDENT)));
  SWIG_Python_SetConstant(d, "PJ_QOS_TYPE_BEST_EFFORT",SWIG_From_int(static_cast< int >(PJ_QOS_TYPE_BEST_EFFORT)));
  SWIG_Python_SetConstant(d, "PJ_QOS_TYPE_BACKGROUND",SWIG_From_int(static_cast< int >(PJ_QOS_TYPE_BACKGROUND)));
  SWIG_Python_SetConstant(d, "PJ_QOS_TYPE_VIDEO",SWIG_From_int(static_cast< int >(PJ_QOS_TYPE_VIDEO)));
  SWIG_Python_SetConstant(d, "PJ_QOS_TYPE_VOICE",SWIG_From_int(static_cast< int >(PJ_QOS_TYPE_VOICE)));
  SWIG_Python_SetConstant(d, "PJ_QOS_TYPE_CONTROL",SWIG_From_int(static_cast< int >(PJ_QOS_TYPE_CONTROL)));
  SWIG_Python_SetConstant(d, "PJ_QOS_PARAM_HAS_DSCP",SWIG_From_int(static_cast< int >(PJ_QOS_PARAM_HAS_DSCP)));
  SWIG_Python_SetConstant(d, "PJ_QOS_PARAM_HAS_SO_PRIO",SWIG_From_int(static_cast< int >(PJ_QOS_PARAM_HAS_SO_PRIO)));
  SWIG_Python_SetConstant(d, "PJ_QOS_PARAM_HAS_WMM",SWIG_From_int(static_cast< int >(PJ_QOS_PARAM_HAS_WMM)));
  SWIG_Python_SetConstant(d, "PJ_QOS_WMM_PRIO_BULK_EFFORT",SWIG_From_int(static_cast< int >(PJ_QOS_WMM_PRIO_BULK_EFFORT)));
  SWIG_Python_SetConstant(d, "PJ_QOS_WMM_PRIO_BULK",SWIG_From_int(static_cast< int >(PJ_QOS_WMM_PRIO_BULK)));
  SWIG_Python_SetConstant(d, "PJ_QOS_WMM_PRIO_VIDEO",SWIG_From_int(static_cast< int >(PJ_QOS_WMM_PRIO_VIDEO)));
  SWIG_Python_SetConstant(d, "PJ_QOS_WMM_PRIO_VOICE",SWIG_From_int(static_cast< int >(PJ_QOS_WMM_PRIO_VOICE)));
  SWIG_Python_SetConstant(d, "PJ_TLS_UNKNOWN_CIPHER",SWIG_From_int(static_cast< int >(PJ_TLS_UNKNOWN_CIPHER)));
  SWIG_Python_SetConstant(d, "PJ_TLS_NULL_WITH_NULL_NULL",SWIG_From_int(static_cast< int >(PJ_TLS_NULL_WITH_NULL_NULL)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_NULL_MD5",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_NULL_MD5)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_NULL_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_NULL_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_NULL_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_NULL_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_RC4_128_MD5",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_RC4_128_MD5)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_RC4_128_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_RC4_128_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_3DES_EDE_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_3DES_EDE_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_AES_128_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_AES_128_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_AES_256_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_AES_256_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_AES_128_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_AES_128_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_AES_256_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_AES_256_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_WITH_AES_128_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_WITH_AES_128_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_WITH_AES_128_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_WITH_AES_128_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_WITH_AES_256_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_WITH_AES_256_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_WITH_AES_256_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_WITH_AES_256_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_RC4_128_MD5",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_RC4_128_MD5)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_3DES_EDE_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_AES_128_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA256",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_AES_256_CBC_SHA256)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_EXPORT_WITH_RC4_40_MD5",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_EXPORT_WITH_RC4_40_MD5)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_IDEA_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_IDEA_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_EXPORT_WITH_DES40_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_RSA_WITH_DES_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_RSA_WITH_DES_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_DSS_WITH_DES_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_DSS_WITH_DES_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_RSA_WITH_DES_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_RSA_WITH_DES_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_DSS_WITH_DES_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_DSS_WITH_DES_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DHE_RSA_WITH_DES_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DHE_RSA_WITH_DES_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_EXPORT_WITH_RC4_40_MD5)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_TLS_DH_anon_WITH_DES_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_TLS_DH_anon_WITH_DES_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_SSL_FORTEZZA_KEA_WITH_NULL_SHA",SWIG_From_int(static_cast< int >(PJ_SSL_FORTEZZA_KEA_WITH_NULL_SHA)));
  SWIG_Python_SetConstant(d, "PJ_SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA",SWIG_From_int(static_cast< int >(PJ_SSL_FORTEZZA_KEA_WITH_FORTEZZA_CBC_SHA)));
  SWIG_Python_SetConstant(d, "PJ_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA",SWIG_From_int(static_cast< int >(PJ_SSL_FORTEZZA_KEA_WITH_RC4_128_SHA)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_RC4_128_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_RC4_128_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_RC4_128_EXPORT40_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_RC4_128_EXPORT40_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_RC2_128_CBC_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_RC2_128_CBC_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_RC2_128_CBC_EXPORT40_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_IDEA_128_CBC_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_IDEA_128_CBC_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_DES_64_CBC_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_DES_64_CBC_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_SSL_CK_DES_192_EDE3_CBC_WITH_MD5",SWIG_From_int(static_cast< int >(PJ_SSL_CK_DES_192_EDE3_CBC_WITH_MD5)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_UNKNOWN",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_ERR_UNKNOWN",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_ERR_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_OPEN",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_OPEN)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_BLOCKED",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_BLOCKED)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_SYMMETRIC_UDP",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_SYMMETRIC_UDP)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_FULL_CONE",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_FULL_CONE)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_SYMMETRIC",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_SYMMETRIC)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_RESTRICTED",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_RESTRICTED)));
  SWIG_Python_SetConstant(d, "PJ_STUN_NAT_TYPE_PORT_RESTRICTED",SWIG_From_int(static_cast< int >(PJ_STUN_NAT_TYPE_PORT_RESTRICTED)));
  SWIG_Python_SetConstant(d, "PJ_TURN_TP_UDP",SWIG_From_int(static_cast< int >(PJ_TURN_TP_UDP)));
  SWIG_Python_SetConstant(d, "PJ_TURN_TP_TCP",SWIG_From_int(static_cast< int >(PJ_TURN_TP_TCP)));
  SWIG_Python_SetConstant(d, "PJ_TURN_TP_TLS",SWIG_From_int(static_cast< int >(PJ_TURN_TP_TLS)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_NONE",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_NONE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_FMT_CHANGED",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_FMT_CHANGED)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_WND_CLOSING",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_WND_CLOSING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_WND_CLOSED",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_WND_CLOSED)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_WND_RESIZED",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_WND_RESIZED)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_MOUSE_BTN_DOWN",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_MOUSE_BTN_DOWN)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_KEYFRAME_FOUND",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_KEYFRAME_FOUND)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_KEYFRAME_MISSING",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_KEYFRAME_MISSING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_EVENT_ORIENT_CHANGED",SWIG_From_int(static_cast< int >(PJMEDIA_EVENT_ORIENT_CHANGED)));
  SWIG_Python_SetConstant(d, "PJMEDIA_SRTP_DISABLED",SWIG_From_int(static_cast< int >(PJMEDIA_SRTP_DISABLED)));
  SWIG_Python_SetConstant(d, "PJMEDIA_SRTP_OPTIONAL",SWIG_From_int(static_cast< int >(PJMEDIA_SRTP_OPTIONAL)));
  SWIG_Python_SetConstant(d, "PJMEDIA_SRTP_MANDATORY",SWIG_From_int(static_cast< int >(PJMEDIA_SRTP_MANDATORY)));
  SWIG_Python_SetConstant(d, "PJMEDIA_VID_STREAM_RC_NONE",SWIG_From_int(static_cast< int >(PJMEDIA_VID_STREAM_RC_NONE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_VID_STREAM_RC_SIMPLE_BLOCKING",SWIG_From_int(static_cast< int >(PJMEDIA_VID_STREAM_RC_SIMPLE_BLOCKING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_VID_DEFAULT_CAPTURE_DEV",SWIG_From_int(static_cast< int >(PJMEDIA_VID_DEFAULT_CAPTURE_DEV)));
  SWIG_Python_SetConstant(d, "PJMEDIA_VID_DEFAULT_RENDER_DEV",SWIG_From_int(static_cast< int >(PJMEDIA_VID_DEFAULT_RENDER_DEV)));
  SWIG_Python_SetConstant(d, "PJMEDIA_VID_INVALID_DEV",SWIG_From_int(static_cast< int >(PJMEDIA_VID_INVALID_DEV)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_ROUTE_DEFAULT",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_ROUTE_DEFAULT)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_ROUTE_LOUDSPEAKER",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_ROUTE_LOUDSPEAKER)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_ROUTE_EARPIECE",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_ROUTE_EARPIECE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_ROUTE_BLUETOOTH",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_ROUTE_BLUETOOTH)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_EXT_FORMAT",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_EXT_FORMAT)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_INPUT_LATENCY",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_INPUT_LATENCY)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_OUTPUT_LATENCY",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_OUTPUT_LATENCY)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_INPUT_VOLUME_SETTING",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_INPUT_VOLUME_SETTING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_OUTPUT_VOLUME_SETTING",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_OUTPUT_VOLUME_SETTING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_INPUT_SIGNAL_METER",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_INPUT_SIGNAL_METER)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_OUTPUT_SIGNAL_METER",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_OUTPUT_SIGNAL_METER)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_INPUT_ROUTE",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_INPUT_ROUTE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_OUTPUT_ROUTE",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_OUTPUT_ROUTE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_EC",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_EC)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_EC_TAIL",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_EC_TAIL)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_VAD",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_VAD)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_CNG",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_CNG)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_PLC",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_PLC)));
  SWIG_Python_SetConstant(d, "PJMEDIA_AUD_DEV_CAP_MAX",SWIG_From_int(static_cast< int >(PJMEDIA_AUD_DEV_CAP_MAX)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FILE_WRITE_PCM",SWIG_From_int(static_cast< int >(PJMEDIA_FILE_WRITE_PCM)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FILE_WRITE_ALAW",SWIG_From_int(static_cast< int >(PJMEDIA_FILE_WRITE_ALAW)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FILE_WRITE_ULAW",SWIG_From_int(static_cast< int >(PJMEDIA_FILE_WRITE_ULAW)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FILE_NO_LOOP",SWIG_From_int(static_cast< int >(PJMEDIA_FILE_NO_LOOP)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TYPE_NONE",SWIG_From_int(static_cast< int >(PJMEDIA_TYPE_NONE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TYPE_AUDIO",SWIG_From_int(static_cast< int >(PJMEDIA_TYPE_AUDIO)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TYPE_VIDEO",SWIG_From_int(static_cast< int >(PJMEDIA_TYPE_VIDEO)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TYPE_APPLICATION",SWIG_From_int(static_cast< int >(PJMEDIA_TYPE_APPLICATION)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TYPE_UNKNOWN",SWIG_From_int(static_cast< int >(PJMEDIA_TYPE_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_NONE",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_NONE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_ENCODING",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_ENCODING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_CAPTURE",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_CAPTURE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_DECODING",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_DECODING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_PLAYBACK",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_PLAYBACK)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_RENDER",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_RENDER)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_ENCODING_DECODING",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_ENCODING_DECODING)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_CAPTURE_PLAYBACK",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_CAPTURE_PLAYBACK)));
  SWIG_Python_SetConstant(d, "PJMEDIA_DIR_CAPTURE_RENDER",SWIG_From_int(static_cast< int >(PJMEDIA_DIR_CAPTURE_RENDER)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TP_PROTO_NONE",SWIG_From_int(static_cast< int >(PJMEDIA_TP_PROTO_NONE)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TP_PROTO_RTP_AVP",SWIG_From_int(static_cast< int >(PJMEDIA_TP_PROTO_RTP_AVP)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TP_PROTO_RTP_SAVP",SWIG_From_int(static_cast< int >(PJMEDIA_TP_PROTO_RTP_SAVP)));
  SWIG_Python_SetConstant(d, "PJMEDIA_TP_PROTO_UNKNOWN",SWIG_From_int(static_cast< int >(PJMEDIA_TP_PROTO_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_L16",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_L16)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_PCM",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_PCM)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_PCMA",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_PCMA)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_ALAW",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_ALAW)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_PCMU",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_PCMU)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_ULAW",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_ULAW)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_AMR",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_AMR)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_G729",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_G729)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_ILBC",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_ILBC)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_RGB24",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_RGB24)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_RGBA",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_RGBA)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_BGRA",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_BGRA)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_RGB32",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_RGB32)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_DIB",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_DIB)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_GBRP",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_GBRP)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_AYUV",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_AYUV)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_YUY2",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_YUY2)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_UYVY",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_UYVY)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_YVYU",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_YVYU)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_I420",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_I420)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_IYUV",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_IYUV)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_YV12",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_YV12)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_I422",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_I422)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_I420JPEG",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_I420JPEG)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_I422JPEG",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_I422JPEG)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_H261",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_H261)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_H263",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_H263)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_H263P",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_H263P)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_H264",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_H264)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_MJPEG",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_MJPEG)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_MPEG1VIDEO",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_MPEG1VIDEO)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_MPEG2VIDEO",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_MPEG2VIDEO)));
  SWIG_Python_SetConstant(d, "PJMEDIA_FORMAT_MPEG4",SWIG_From_int(static_cast< int >(PJMEDIA_FORMAT_MPEG4)));
  SWIG_Python_SetConstant(d, "PJSIP_CRED_DATA_PLAIN_PASSWD",SWIG_From_int(static_cast< int >(PJSIP_CRED_DATA_PLAIN_PASSWD)));
  SWIG_Python_SetConstant(d, "PJSIP_CRED_DATA_DIGEST",SWIG_From_int(static_cast< int >(PJSIP_CRED_DATA_DIGEST)));
  SWIG_Python_SetConstant(d, "PJSIP_CRED_DATA_EXT_AKA",SWIG_From_int(static_cast< int >(PJSIP_CRED_DATA_EXT_AKA)));
  SWIG_Python_SetConstant(d, "PJSIP_DIALOG_CAP_UNSUPPORTED",SWIG_From_int(static_cast< int >(PJSIP_DIALOG_CAP_UNSUPPORTED)));
  SWIG_Python_SetConstant(d, "PJSIP_DIALOG_CAP_SUPPORTED",SWIG_From_int(static_cast< int >(PJSIP_DIALOG_CAP_SUPPORTED)));
  SWIG_Python_SetConstant(d, "PJSIP_DIALOG_CAP_UNKNOWN",SWIG_From_int(static_cast< int >(PJSIP_DIALOG_CAP_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_UNKNOWN",SWIG_From_int(static_cast< int >(PJSIP_EVENT_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_TIMER",SWIG_From_int(static_cast< int >(PJSIP_EVENT_TIMER)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_TX_MSG",SWIG_From_int(static_cast< int >(PJSIP_EVENT_TX_MSG)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_RX_MSG",SWIG_From_int(static_cast< int >(PJSIP_EVENT_RX_MSG)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_TRANSPORT_ERROR",SWIG_From_int(static_cast< int >(PJSIP_EVENT_TRANSPORT_ERROR)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_TSX_STATE",SWIG_From_int(static_cast< int >(PJSIP_EVENT_TSX_STATE)));
  SWIG_Python_SetConstant(d, "PJSIP_EVENT_USER",SWIG_From_int(static_cast< int >(PJSIP_EVENT_USER)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_TRYING",SWIG_From_int(static_cast< int >(PJSIP_SC_TRYING)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_RINGING",SWIG_From_int(static_cast< int >(PJSIP_SC_RINGING)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_CALL_BEING_FORWARDED",SWIG_From_int(static_cast< int >(PJSIP_SC_CALL_BEING_FORWARDED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_QUEUED",SWIG_From_int(static_cast< int >(PJSIP_SC_QUEUED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_PROGRESS",SWIG_From_int(static_cast< int >(PJSIP_SC_PROGRESS)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_OK",SWIG_From_int(static_cast< int >(PJSIP_SC_OK)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_ACCEPTED",SWIG_From_int(static_cast< int >(PJSIP_SC_ACCEPTED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_MULTIPLE_CHOICES",SWIG_From_int(static_cast< int >(PJSIP_SC_MULTIPLE_CHOICES)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_MOVED_PERMANENTLY",SWIG_From_int(static_cast< int >(PJSIP_SC_MOVED_PERMANENTLY)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_MOVED_TEMPORARILY",SWIG_From_int(static_cast< int >(PJSIP_SC_MOVED_TEMPORARILY)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_USE_PROXY",SWIG_From_int(static_cast< int >(PJSIP_SC_USE_PROXY)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_ALTERNATIVE_SERVICE",SWIG_From_int(static_cast< int >(PJSIP_SC_ALTERNATIVE_SERVICE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_BAD_REQUEST",SWIG_From_int(static_cast< int >(PJSIP_SC_BAD_REQUEST)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_UNAUTHORIZED",SWIG_From_int(static_cast< int >(PJSIP_SC_UNAUTHORIZED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_PAYMENT_REQUIRED",SWIG_From_int(static_cast< int >(PJSIP_SC_PAYMENT_REQUIRED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_FORBIDDEN",SWIG_From_int(static_cast< int >(PJSIP_SC_FORBIDDEN)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_NOT_FOUND",SWIG_From_int(static_cast< int >(PJSIP_SC_NOT_FOUND)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_METHOD_NOT_ALLOWED",SWIG_From_int(static_cast< int >(PJSIP_SC_METHOD_NOT_ALLOWED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_NOT_ACCEPTABLE",SWIG_From_int(static_cast< int >(PJSIP_SC_NOT_ACCEPTABLE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_PROXY_AUTHENTICATION_REQUIRED",SWIG_From_int(static_cast< int >(PJSIP_SC_PROXY_AUTHENTICATION_REQUIRED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_REQUEST_TIMEOUT",SWIG_From_int(static_cast< int >(PJSIP_SC_REQUEST_TIMEOUT)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_GONE",SWIG_From_int(static_cast< int >(PJSIP_SC_GONE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_REQUEST_ENTITY_TOO_LARGE",SWIG_From_int(static_cast< int >(PJSIP_SC_REQUEST_ENTITY_TOO_LARGE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_REQUEST_URI_TOO_LONG",SWIG_From_int(static_cast< int >(PJSIP_SC_REQUEST_URI_TOO_LONG)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_UNSUPPORTED_MEDIA_TYPE",SWIG_From_int(static_cast< int >(PJSIP_SC_UNSUPPORTED_MEDIA_TYPE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_UNSUPPORTED_URI_SCHEME",SWIG_From_int(static_cast< int >(PJSIP_SC_UNSUPPORTED_URI_SCHEME)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_BAD_EXTENSION",SWIG_From_int(static_cast< int >(PJSIP_SC_BAD_EXTENSION)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_EXTENSION_REQUIRED",SWIG_From_int(static_cast< int >(PJSIP_SC_EXTENSION_REQUIRED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_SESSION_TIMER_TOO_SMALL",SWIG_From_int(static_cast< int >(PJSIP_SC_SESSION_TIMER_TOO_SMALL)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_INTERVAL_TOO_BRIEF",SWIG_From_int(static_cast< int >(PJSIP_SC_INTERVAL_TOO_BRIEF)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_TEMPORARILY_UNAVAILABLE",SWIG_From_int(static_cast< int >(PJSIP_SC_TEMPORARILY_UNAVAILABLE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_CALL_TSX_DOES_NOT_EXIST",SWIG_From_int(static_cast< int >(PJSIP_SC_CALL_TSX_DOES_NOT_EXIST)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_LOOP_DETECTED",SWIG_From_int(static_cast< int >(PJSIP_SC_LOOP_DETECTED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_TOO_MANY_HOPS",SWIG_From_int(static_cast< int >(PJSIP_SC_TOO_MANY_HOPS)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_ADDRESS_INCOMPLETE",SWIG_From_int(static_cast< int >(PJSIP_SC_ADDRESS_INCOMPLETE)));
  SWIG_Python_SetConstant(d, "PJSIP_AC_AMBIGUOUS",SWIG_From_int(static_cast< int >(PJSIP_AC_AMBIGUOUS)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_BUSY_HERE",SWIG_From_int(static_cast< int >(PJSIP_SC_BUSY_HERE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_REQUEST_TERMINATED",SWIG_From_int(static_cast< int >(PJSIP_SC_REQUEST_TERMINATED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_NOT_ACCEPTABLE_HERE",SWIG_From_int(static_cast< int >(PJSIP_SC_NOT_ACCEPTABLE_HERE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_BAD_EVENT",SWIG_From_int(static_cast< int >(PJSIP_SC_BAD_EVENT)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_REQUEST_UPDATED",SWIG_From_int(static_cast< int >(PJSIP_SC_REQUEST_UPDATED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_REQUEST_PENDING",SWIG_From_int(static_cast< int >(PJSIP_SC_REQUEST_PENDING)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_UNDECIPHERABLE",SWIG_From_int(static_cast< int >(PJSIP_SC_UNDECIPHERABLE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_INTERNAL_SERVER_ERROR",SWIG_From_int(static_cast< int >(PJSIP_SC_INTERNAL_SERVER_ERROR)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_NOT_IMPLEMENTED",SWIG_From_int(static_cast< int >(PJSIP_SC_NOT_IMPLEMENTED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_BAD_GATEWAY",SWIG_From_int(static_cast< int >(PJSIP_SC_BAD_GATEWAY)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_SERVICE_UNAVAILABLE",SWIG_From_int(static_cast< int >(PJSIP_SC_SERVICE_UNAVAILABLE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_SERVER_TIMEOUT",SWIG_From_int(static_cast< int >(PJSIP_SC_SERVER_TIMEOUT)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_VERSION_NOT_SUPPORTED",SWIG_From_int(static_cast< int >(PJSIP_SC_VERSION_NOT_SUPPORTED)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_MESSAGE_TOO_LARGE",SWIG_From_int(static_cast< int >(PJSIP_SC_MESSAGE_TOO_LARGE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_PRECONDITION_FAILURE",SWIG_From_int(static_cast< int >(PJSIP_SC_PRECONDITION_FAILURE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_BUSY_EVERYWHERE",SWIG_From_int(static_cast< int >(PJSIP_SC_BUSY_EVERYWHERE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_DECLINE",SWIG_From_int(static_cast< int >(PJSIP_SC_DECLINE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_DOES_NOT_EXIST_ANYWHERE",SWIG_From_int(static_cast< int >(PJSIP_SC_DOES_NOT_EXIST_ANYWHERE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_NOT_ACCEPTABLE_ANYWHERE",SWIG_From_int(static_cast< int >(PJSIP_SC_NOT_ACCEPTABLE_ANYWHERE)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_TSX_TIMEOUT",SWIG_From_int(static_cast< int >(PJSIP_SC_TSX_TIMEOUT)));
  SWIG_Python_SetConstant(d, "PJSIP_SC_TSX_TRANSPORT_ERROR",SWIG_From_int(static_cast< int >(PJSIP_SC_TSX_TRANSPORT_ERROR)));
  SWIG_Python_SetConstant(d, "PJSIP_SC__force_32bit",SWIG_From_int(static_cast< int >(PJSIP_SC__force_32bit)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ACCEPT",SWIG_From_int(static_cast< int >(PJSIP_H_ACCEPT)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ACCEPT_ENCODING_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_ACCEPT_ENCODING_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ACCEPT_LANGUAGE_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_ACCEPT_LANGUAGE_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ALERT_INFO_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_ALERT_INFO_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ALLOW",SWIG_From_int(static_cast< int >(PJSIP_H_ALLOW)));
  SWIG_Python_SetConstant(d, "PJSIP_H_AUTHENTICATION_INFO_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_AUTHENTICATION_INFO_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_AUTHORIZATION",SWIG_From_int(static_cast< int >(PJSIP_H_AUTHORIZATION)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CALL_ID",SWIG_From_int(static_cast< int >(PJSIP_H_CALL_ID)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CALL_INFO_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_CALL_INFO_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CONTACT",SWIG_From_int(static_cast< int >(PJSIP_H_CONTACT)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CONTENT_DISPOSITION_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_CONTENT_DISPOSITION_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CONTENT_ENCODING_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_CONTENT_ENCODING_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CONTENT_LANGUAGE_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_CONTENT_LANGUAGE_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CONTENT_LENGTH",SWIG_From_int(static_cast< int >(PJSIP_H_CONTENT_LENGTH)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CONTENT_TYPE",SWIG_From_int(static_cast< int >(PJSIP_H_CONTENT_TYPE)));
  SWIG_Python_SetConstant(d, "PJSIP_H_CSEQ",SWIG_From_int(static_cast< int >(PJSIP_H_CSEQ)));
  SWIG_Python_SetConstant(d, "PJSIP_H_DATE_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_DATE_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ERROR_INFO_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_ERROR_INFO_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_EXPIRES",SWIG_From_int(static_cast< int >(PJSIP_H_EXPIRES)));
  SWIG_Python_SetConstant(d, "PJSIP_H_FROM",SWIG_From_int(static_cast< int >(PJSIP_H_FROM)));
  SWIG_Python_SetConstant(d, "PJSIP_H_IN_REPLY_TO_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_IN_REPLY_TO_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_MAX_FORWARDS",SWIG_From_int(static_cast< int >(PJSIP_H_MAX_FORWARDS)));
  SWIG_Python_SetConstant(d, "PJSIP_H_MIME_VERSION_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_MIME_VERSION_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_MIN_EXPIRES",SWIG_From_int(static_cast< int >(PJSIP_H_MIN_EXPIRES)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ORGANIZATION_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_ORGANIZATION_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_PRIORITY_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_PRIORITY_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_PROXY_AUTHENTICATE",SWIG_From_int(static_cast< int >(PJSIP_H_PROXY_AUTHENTICATE)));
  SWIG_Python_SetConstant(d, "PJSIP_H_PROXY_AUTHORIZATION",SWIG_From_int(static_cast< int >(PJSIP_H_PROXY_AUTHORIZATION)));
  SWIG_Python_SetConstant(d, "PJSIP_H_PROXY_REQUIRE_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_PROXY_REQUIRE_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_RECORD_ROUTE",SWIG_From_int(static_cast< int >(PJSIP_H_RECORD_ROUTE)));
  SWIG_Python_SetConstant(d, "PJSIP_H_REPLY_TO_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_REPLY_TO_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_REQUIRE",SWIG_From_int(static_cast< int >(PJSIP_H_REQUIRE)));
  SWIG_Python_SetConstant(d, "PJSIP_H_RETRY_AFTER",SWIG_From_int(static_cast< int >(PJSIP_H_RETRY_AFTER)));
  SWIG_Python_SetConstant(d, "PJSIP_H_ROUTE",SWIG_From_int(static_cast< int >(PJSIP_H_ROUTE)));
  SWIG_Python_SetConstant(d, "PJSIP_H_SERVER_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_SERVER_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_SUBJECT_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_SUBJECT_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_SUPPORTED",SWIG_From_int(static_cast< int >(PJSIP_H_SUPPORTED)));
  SWIG_Python_SetConstant(d, "PJSIP_H_TIMESTAMP_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_TIMESTAMP_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_TO",SWIG_From_int(static_cast< int >(PJSIP_H_TO)));
  SWIG_Python_SetConstant(d, "PJSIP_H_UNSUPPORTED",SWIG_From_int(static_cast< int >(PJSIP_H_UNSUPPORTED)));
  SWIG_Python_SetConstant(d, "PJSIP_H_USER_AGENT_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_USER_AGENT_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_VIA",SWIG_From_int(static_cast< int >(PJSIP_H_VIA)));
  SWIG_Python_SetConstant(d, "PJSIP_H_WARNING_UNIMP",SWIG_From_int(static_cast< int >(PJSIP_H_WARNING_UNIMP)));
  SWIG_Python_SetConstant(d, "PJSIP_H_WWW_AUTHENTICATE",SWIG_From_int(static_cast< int >(PJSIP_H_WWW_AUTHENTICATE)));
  SWIG_Python_SetConstant(d, "PJSIP_H_OTHER",SWIG_From_int(static_cast< int >(PJSIP_H_OTHER)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_UNSPECIFIED",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_UNSPECIFIED)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_UDP",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_UDP)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_TCP",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_TCP)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_TLS",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_TLS)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_SCTP",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_SCTP)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_LOOP",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_LOOP)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_LOOP_DGRAM",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_LOOP_DGRAM)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_START_OTHER",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_START_OTHER)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_IPV6",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_IPV6)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_UDP6",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_UDP6)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_TCP6",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_TCP6)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_TLS6",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_TLS6)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_RELIABLE",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_RELIABLE)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_SECURE",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_SECURE)));
  SWIG_Python_SetConstant(d, "PJSIP_TRANSPORT_DATAGRAM",SWIG_From_int(static_cast< int >(PJSIP_TRANSPORT_DATAGRAM)));
  SWIG_Python_SetConstant(d, "PJSIP_TP_STATE_CONNECTED",SWIG_From_int(static_cast< int >(PJSIP_TP_STATE_CONNECTED)));
  SWIG_Python_SetConstant(d, "PJSIP_TP_STATE_DISCONNECTED",SWIG_From_int(static_cast< int >(PJSIP_TP_STATE_DISCONNECTED)));
  SWIG_Python_SetConstant(d, "PJSIP_TP_STATE_SHUTDOWN",SWIG_From_int(static_cast< int >(PJSIP_TP_STATE_SHUTDOWN)));
  SWIG_Python_SetConstant(d, "PJSIP_TP_STATE_DESTROY",SWIG_From_int(static_cast< int >(PJSIP_TP_STATE_DESTROY)));
  SWIG_Python_SetConstant(d, "PJSIP_SSL_UNSPECIFIED_METHOD",SWIG_From_int(static_cast< int >(PJSIP_SSL_UNSPECIFIED_METHOD)));
  SWIG_Python_SetConstant(d, "PJSIP_TLSV1_METHOD",SWIG_From_int(static_cast< int >(PJSIP_TLSV1_METHOD)));
  SWIG_Python_SetConstant(d, "PJSIP_SSLV2_METHOD",SWIG_From_int(static_cast< int >(PJSIP_SSLV2_METHOD)));
  SWIG_Python_SetConstant(d, "PJSIP_SSLV3_METHOD",SWIG_From_int(static_cast< int >(PJSIP_SSLV3_METHOD)));
  SWIG_Python_SetConstant(d, "PJSIP_SSLV23_METHOD",SWIG_From_int(static_cast< int >(PJSIP_SSLV23_METHOD)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_NULL",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_NULL)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_CALLING",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_CALLING)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_TRYING",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_TRYING)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_PROCEEDING",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_PROCEEDING)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_COMPLETED",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_COMPLETED)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_CONFIRMED",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_CONFIRMED)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_TERMINATED",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_TERMINATED)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_DESTROYED",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_DESTROYED)));
  SWIG_Python_SetConstant(d, "PJSIP_TSX_STATE_MAX",SWIG_From_int(static_cast< int >(PJSIP_TSX_STATE_MAX)));
  SWIG_Python_SetConstant(d, "PJSIP_ROLE_UAC",SWIG_From_int(static_cast< int >(PJSIP_ROLE_UAC)));
  SWIG_Python_SetConstant(d, "PJSIP_ROLE_UAS",SWIG_From_int(static_cast< int >(PJSIP_ROLE_UAS)));
  SWIG_Python_SetConstant(d, "PJSIP_UAC_ROLE",SWIG_From_int(static_cast< int >(PJSIP_UAC_ROLE)));
  SWIG_Python_SetConstant(d, "PJSIP_UAS_ROLE",SWIG_From_int(static_cast< int >(PJSIP_UAS_ROLE)));
  SWIG_Python_SetConstant(d, "PJSIP_REDIRECT_REJECT",SWIG_From_int(static_cast< int >(PJSIP_REDIRECT_REJECT)));
  SWIG_Python_SetConstant(d, "PJSIP_REDIRECT_ACCEPT",SWIG_From_int(static_cast< int >(PJSIP_REDIRECT_ACCEPT)));
  SWIG_Python_SetConstant(d, "PJSIP_REDIRECT_ACCEPT_REPLACE",SWIG_From_int(static_cast< int >(PJSIP_REDIRECT_ACCEPT_REPLACE)));
  SWIG_Python_SetConstant(d, "PJSIP_REDIRECT_PENDING",SWIG_From_int(static_cast< int >(PJSIP_REDIRECT_PENDING)));
  SWIG_Python_SetConstant(d, "PJSIP_REDIRECT_STOP",SWIG_From_int(static_cast< int >(PJSIP_REDIRECT_STOP)));
  SWIG_Python_SetConstant(d, "PJRPID_ACTIVITY_UNKNOWN",SWIG_From_int(static_cast< int >(PJRPID_ACTIVITY_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJRPID_ACTIVITY_AWAY",SWIG_From_int(static_cast< int >(PJRPID_ACTIVITY_AWAY)));
  SWIG_Python_SetConstant(d, "PJRPID_ACTIVITY_BUSY",SWIG_From_int(static_cast< int >(PJRPID_ACTIVITY_BUSY)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_NULL",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_NULL)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_SENT",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_SENT)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_ACCEPTED",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_ACCEPTED)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_PENDING",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_PENDING)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_ACTIVE",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_ACTIVE)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_TERMINATED",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_TERMINATED)));
  SWIG_Python_SetConstant(d, "PJSIP_EVSUB_STATE_UNKNOWN",SWIG_From_int(static_cast< int >(PJSIP_EVSUB_STATE_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_NULL",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_NULL)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_CALLING",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_CALLING)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_INCOMING",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_INCOMING)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_EARLY",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_EARLY)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_CONNECTING",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_CONNECTING)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_CONFIRMED",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_CONFIRMED)));
  SWIG_Python_SetConstant(d, "PJSIP_INV_STATE_DISCONNECTED",SWIG_From_int(static_cast< int >(PJSIP_INV_STATE_DISCONNECTED)));
  SWIG_Python_SetConstant(d, "PJSUA_INVALID_ID",SWIG_From_int(static_cast< int >(PJSUA_INVALID_ID)));
  SWIG_Python_SetConstant(d, "PJSUA_STATE_NULL",SWIG_From_int(static_cast< int >(PJSUA_STATE_NULL)));
  SWIG_Python_SetConstant(d, "PJSUA_STATE_CREATED",SWIG_From_int(static_cast< int >(PJSUA_STATE_CREATED)));
  SWIG_Python_SetConstant(d, "PJSUA_STATE_INIT",SWIG_From_int(static_cast< int >(PJSUA_STATE_INIT)));
  SWIG_Python_SetConstant(d, "PJSUA_STATE_STARTING",SWIG_From_int(static_cast< int >(PJSUA_STATE_STARTING)));
  SWIG_Python_SetConstant(d, "PJSUA_STATE_RUNNING",SWIG_From_int(static_cast< int >(PJSUA_STATE_RUNNING)));
  SWIG_Python_SetConstant(d, "PJSUA_STATE_CLOSING",SWIG_From_int(static_cast< int >(PJSUA_STATE_CLOSING)));
  SWIG_Python_SetConstant(d, "PJSUA_STUN_USE_DEFAULT",SWIG_From_int(static_cast< int >(PJSUA_STUN_USE_DEFAULT)));
  SWIG_Python_SetConstant(d, "PJSUA_STUN_USE_DISABLED",SWIG_From_int(static_cast< int >(PJSUA_STUN_USE_DISABLED)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_HOLD_TYPE_RFC3264",SWIG_From_int(static_cast< int >(PJSUA_CALL_HOLD_TYPE_RFC3264)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_HOLD_TYPE_RFC2543",SWIG_From_int(static_cast< int >(PJSUA_CALL_HOLD_TYPE_RFC2543)));
  SWIG_Python_SetConstant(d, "PJSUA_DESTROY_NO_RX_MSG",SWIG_From_int(static_cast< int >(PJSUA_DESTROY_NO_RX_MSG)));
  SWIG_Python_SetConstant(d, "PJSUA_DESTROY_NO_TX_MSG",SWIG_From_int(static_cast< int >(PJSUA_DESTROY_NO_TX_MSG)));
  SWIG_Python_SetConstant(d, "PJSUA_DESTROY_NO_NETWORK",SWIG_From_int(static_cast< int >(PJSUA_DESTROY_NO_NETWORK)));
  SWIG_Python_SetConstant(d, "PJSUA_100REL_NOT_USED",SWIG_From_int(static_cast< int >(PJSUA_100REL_NOT_USED)));
  SWIG_Python_SetConstant(d, "PJSUA_100REL_MANDATORY",SWIG_From_int(static_cast< int >(PJSUA_100REL_MANDATORY)));
  SWIG_Python_SetConstant(d, "PJSUA_100REL_OPTIONAL",SWIG_From_int(static_cast< int >(PJSUA_100REL_OPTIONAL)));
  SWIG_Python_SetConstant(d, "PJSUA_SIP_TIMER_INACTIVE",SWIG_From_int(static_cast< int >(PJSUA_SIP_TIMER_INACTIVE)));
  SWIG_Python_SetConstant(d, "PJSUA_SIP_TIMER_OPTIONAL",SWIG_From_int(static_cast< int >(PJSUA_SIP_TIMER_OPTIONAL)));
  SWIG_Python_SetConstant(d, "PJSUA_SIP_TIMER_REQUIRED",SWIG_From_int(static_cast< int >(PJSUA_SIP_TIMER_REQUIRED)));
  SWIG_Python_SetConstant(d, "PJSUA_SIP_TIMER_ALWAYS",SWIG_From_int(static_cast< int >(PJSUA_SIP_TIMER_ALWAYS)));
  SWIG_Python_SetConstant(d, "PJSUA_IPV6_DISABLED",SWIG_From_int(static_cast< int >(PJSUA_IPV6_DISABLED)));
  SWIG_Python_SetConstant(d, "PJSUA_IPV6_ENABLED",SWIG_From_int(static_cast< int >(PJSUA_IPV6_ENABLED)));
  SWIG_Python_SetConstant(d, "PJSUA_BUDDY_STATUS_UNKNOWN",SWIG_From_int(static_cast< int >(PJSUA_BUDDY_STATUS_UNKNOWN)));
  SWIG_Python_SetConstant(d, "PJSUA_BUDDY_STATUS_ONLINE",SWIG_From_int(static_cast< int >(PJSUA_BUDDY_STATUS_ONLINE)));
  SWIG_Python_SetConstant(d, "PJSUA_BUDDY_STATUS_OFFLINE",SWIG_From_int(static_cast< int >(PJSUA_BUDDY_STATUS_OFFLINE)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_MEDIA_NONE",SWIG_From_int(static_cast< int >(PJSUA_CALL_MEDIA_NONE)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_MEDIA_ACTIVE",SWIG_From_int(static_cast< int >(PJSUA_CALL_MEDIA_ACTIVE)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_MEDIA_LOCAL_HOLD",SWIG_From_int(static_cast< int >(PJSUA_CALL_MEDIA_LOCAL_HOLD)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_MEDIA_REMOTE_HOLD",SWIG_From_int(static_cast< int >(PJSUA_CALL_MEDIA_REMOTE_HOLD)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_MEDIA_ERROR",SWIG_From_int(static_cast< int >(PJSUA_CALL_MEDIA_ERROR)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_NULL",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_NULL)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_CREATING",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_CREATING)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_IDLE",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_IDLE)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_INIT",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_INIT)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_RUNNING",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_RUNNING)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_DISABLED",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_DISABLED)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_NO_OP",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_NO_OP)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_ADD",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_ADD)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_REMOVE",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_REMOVE)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_CHANGE_DIR",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_CHANGE_DIR)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_CHANGE_CAP_DEV",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_CHANGE_CAP_DEV)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_START_TRANSMIT",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_START_TRANSMIT)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_STOP_TRANSMIT",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_STOP_TRANSMIT)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_VID_STRM_SEND_KEYFRAME",SWIG_From_int(static_cast< int >(PJSUA_CALL_VID_STRM_SEND_KEYFRAME)));
  SWIG_Python_SetConstant(d, "PJSUA_VID_REQ_KEYFRAME_SIP_INFO",SWIG_From_int(static_cast< int >(PJSUA_VID_REQ_KEYFRAME_SIP_INFO)));
  SWIG_Python_SetConstant(d, "PJSUA_VID_REQ_KEYFRAME_RTCP_PLI",SWIG_From_int(static_cast< int >(PJSUA_VID_REQ_KEYFRAME_RTCP_PLI)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_UNHOLD",SWIG_From_int(static_cast< int >(PJSUA_CALL_UNHOLD)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_UPDATE_CONTACT",SWIG_From_int(static_cast< int >(PJSUA_CALL_UPDATE_CONTACT)));
  SWIG_Python_SetConstant(d, "PJSUA_CALL_INCLUDE_DISABLED_MEDIA",SWIG_From_int(static_cast< int >(PJSUA_CALL_INCLUDE_DISABLED_MEDIA)));
  SWIG_Python_SetConstant(d, "PJSUA_MED_TP_CLOSE_MEMBER",SWIG_From_int(static_cast< int >(PJSUA_MED_TP_CLOSE_MEMBER)));
  SWIG_Python_SetConstant(d, "INVALID_ID",SWIG_From_int(static_cast< int >(pj::INVALID_ID)));
  SWIG_Python_SetConstant(d, "SUCCESS",SWIG_From_int(static_cast< int >(pj::SUCCESS)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

